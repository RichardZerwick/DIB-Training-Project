System.register(["tslib", "@angular/core", "@angular/material/table", "shared", "@angular/forms", "@angular/common/http", "@angular/material/core", "rxjs", "rxjs/operators", "@angular/material/sort", "@angular/material/paginator", "@angular/common", "@angular/material/button", "@angular/material/icon", "@angular/material/card", "@angular/material/datepicker", "@ngbracket/ngx-layout/extended", "@angular-material-components/datetime-picker", "@angular/material/checkbox", "@angular/material/form-field", "@angular/material/input", "@angular/material/progress-bar", "@angular/material/toolbar", "@angular/material/tooltip"], function (exports_1, context_1) {
    "use strict";
    var tslib_1, core_1, table_1, shared_1, forms_1, core_2, shared_2, shared_3, http_1, forms_2, core_3, shared_4, rxjs_1, operators_1, table_2, sort_1, paginator_1, core_4, common_1, shared_5, shared_6, button_1, icon_1, card_1, datepicker_1, core_5, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, _c0, _c1, _c2, _c3, _c4, _c5, importsRequired, dibexActionReloadContainerComponent, containerModules, dibexActionReloadContainerModule;
    var __moduleName = context_1 && context_1.id;
    function dibexActionReloadContainerComponent_button_31_Template(rf, ctx) { if (rf & 1) {
        const _r38 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 56);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_button_31_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r38); const ctx_r37 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r37.searchGrid()); });
        i0.ɵɵelement(1, "dib-icon", 57);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("matTooltip", "Apply filter criteria specified in column headers")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
    } }
    function dibexActionReloadContainerComponent_button_32_Template(rf, ctx) { if (rf & 1) {
        const _r40 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 58);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_button_32_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r40); const ctx_r39 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r39.clearSearch()); });
        i0.ɵɵelement(1, "dib-icon", 59);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("matTooltip", "Show all records and clear filter criteria")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
    } }
    function dibexActionReloadContainerComponent_div_34_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r41 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate2("\u00A0to\u00A0", ctx_r41.page.toRecord, "\u00A0of\u00A0", ctx_r41.page.records, "");
    } }
    function dibexActionReloadContainerComponent_div_34_span_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r42 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1("(Total: ", ctx_r42.page.totalRecords, ")");
    } }
    function dibexActionReloadContainerComponent_div_34_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 60);
        i0.ɵɵtext(1);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_div_34_span_2_Template, 2, 2, "span", 53);
        i0.ɵɵtext(3, "\u00A0");
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_div_34_span_4_Template, 2, 1, "span", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" Action: reload-container: ", ctx_r2.page.fromRecord, "");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.page.fromRecord > 0);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r2.page.totalRecords != ctx_r2.page.records);
    } }
    function dibexActionReloadContainerComponent_th_44_Template(rf, ctx) { if (rf & 1) {
        const _r44 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "th", 61)(1, "mat-checkbox", 62);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_44_Template_mat_checkbox_click_1_listener($event) { i0.ɵɵrestoreView(_r44); const ctx_r43 = i0.ɵɵnextContext(); $event.preventDefault(); return i0.ɵɵresetView(ctx_r43.masterToggle()); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r4 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r4.masterIsChecked)("indeterminate", ctx_r4.masterIsIndeterminate);
    } }
    function dibexActionReloadContainerComponent_td_45_Template(rf, ctx) { if (rf & 1) {
        const _r48 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 63)(1, "mat-checkbox", 64);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_45_Template_mat_checkbox_click_1_listener($event) { return $event.stopPropagation(); })("change", function dibexActionReloadContainerComponent_td_45_Template_mat_checkbox_change_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r48); const row_r45 = restoredCtx.$implicit; const ctx_r47 = i0.ɵɵnextContext(); return i0.ɵɵresetView($event ? ctx_r47.selection.toggle(row_r45) : null); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r45 = ctx.$implicit;
        const ctx_r5 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r5.isHighlighted(row_r45));
    } }
    function dibexActionReloadContainerComponent_td_47_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div", 66);
        i0.ɵɵelementContainer(2, 10);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("dibPort", "6582");
    } }
    function dibexActionReloadContainerComponent_td_47_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_47_ng_container_1_Template, 3, 1, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r49 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r49);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r49.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_48_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "th", 67);
    } }
    function dibexActionReloadContainerComponent_td_50_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r54 = i0.ɵɵnextContext(2).index;
        const ctx_r57 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r57.findColumnDisplayValue(rowIndex_r54, "id", "none", "number"), "");
    } }
    function dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r65 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r65); const ctx_r64 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r64.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 79);
        i0.ɵɵtext(1, "priority_high");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 72);
        i0.ɵɵelement(2, "input", 73);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_mat_icon_5_Template, 2, 0, "mat-icon", 76);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r53 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r58 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Id");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r58.view.recordStatus == "update" && ctx_r58.notSaved("id", rowForm_r53));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r58.view.recordStatus == "update" && ctx_r58.isSaved("id", rowForm_r53));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r58.isInvalid("id", rowForm_r53));
    } }
    function dibexActionReloadContainerComponent_td_50_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_50_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_50_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_50_ng_container_1_span_4_Template, 6, 4, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_50_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r53 = i0.ɵɵnextContext().$implicit;
        const ctx_r55 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r55.excelEditing == false && rowForm_r53.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r55.excelEditing == true || rowForm_r53.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r55.excelEditing == false && rowForm_r53.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_50_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_50_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r53 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r53);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r53.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_51_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Id ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_51_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Id");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_51_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r74 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_51_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r74); const ctx_r73 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r73.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_51_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_51_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r76 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 87)(2, "mat-label");
        i0.ɵɵtext(3, "Id");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 88);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_51_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r76); const ctx_r75 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r75.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_51_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r76); const ctx_r77 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r77.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_51_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_51_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r70 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r70.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Id");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r70.view.recordStatus == "update" && ctx_r70.notSaved("id", ctx_r70.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r70.view.recordStatus == "update" && ctx_r70.isSaved("id", ctx_r70.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_51_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_51_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_51_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_51_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r9 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r9.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r9.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r9.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_53_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r79 = i0.ɵɵnextContext(2).index;
        const ctx_r82 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r82.findColumnDisplayValue(rowIndex_r79, "name", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r89 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r89); const ctx_r88 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r88.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r91 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 90);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r91); const ctx_r90 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r90.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r91); const ctx_r92 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r92.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r78 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r83 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Name");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r83.view.recordStatus == "update" && ctx_r83.notSaved("name", rowForm_r78));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r83.view.recordStatus == "update" && ctx_r83.isSaved("name", rowForm_r78));
    } }
    function dibexActionReloadContainerComponent_td_53_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_53_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_53_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_53_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_53_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r78 = i0.ɵɵnextContext().$implicit;
        const ctx_r80 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r80.excelEditing == false && rowForm_r78.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r80.excelEditing == true || rowForm_r78.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r80.excelEditing == false && rowForm_r78.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_53_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_53_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r78 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r78);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r78.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_54_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Name ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_54_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Name");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_54_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r101 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_54_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r101); const ctx_r100 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r100.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_54_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_54_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r103 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 91)(2, "mat-label");
        i0.ɵɵtext(3, "Name");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 90);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_54_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r103); const ctx_r102 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r102.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_54_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r103); const ctx_r104 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r104.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_54_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_54_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r97 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r97.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Name");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r97.view.recordStatus == "update" && ctx_r97.notSaved("name", ctx_r97.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r97.view.recordStatus == "update" && ctx_r97.isSaved("name", ctx_r97.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_54_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_54_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_54_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_54_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r11 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r11.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r11.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r11.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_56_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r106 = i0.ɵɵnextContext(2).index;
        const ctx_r109 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r109.findColumnDisplayValue(rowIndex_r106, "start_date", "none", "date"), "");
    } }
    function dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        const _r117 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_mat_icon_6_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r117); const ctx_r116 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r116.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_mat_icon_7_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r119 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 92)(2, "input", 93);
        i0.ɵɵlistener("focus", function dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_Template_input_focus_2_listener() { i0.ɵɵrestoreView(_r119); const _r113 = i0.ɵɵreference(5); return i0.ɵɵresetView(_r113.open()); })("keydown.enter", function dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r119); const ctx_r120 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r120.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r119); const ctx_r121 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r121.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵelement(3, "mat-datepicker-toggle", 94)(4, "mat-datepicker", null, 95);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_mat_icon_6_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(7, dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_mat_icon_7_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const _r113 = i0.ɵɵreference(5);
        const rowForm_r105 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r110 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("matDatepicker", _r113);
        i0.ɵɵattribute("aria-label", "Start Date");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("for", _r113);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r110.view.recordStatus == "update" && ctx_r110.notSaved("start_date", rowForm_r105));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r110.view.recordStatus == "update" && ctx_r110.isSaved("start_date", rowForm_r105));
    } }
    function dibexActionReloadContainerComponent_td_56_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_56_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_56_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_56_ng_container_1_span_4_Template, 8, 5, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_56_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r105 = i0.ɵɵnextContext().$implicit;
        const ctx_r107 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r107.excelEditing == false && rowForm_r105.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r107.excelEditing == true || rowForm_r105.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r107.excelEditing == false && rowForm_r105.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_56_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_56_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r105 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r105);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r105.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_57_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Start Date ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_57_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Start Date");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_57_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r130 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_57_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r130); const ctx_r129 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r129.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_57_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_57_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r132 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 96)(2, "mat-label");
        i0.ɵɵtext(3, "Start Date");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 97);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_57_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r132); const ctx_r131 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r131.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_57_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r132); const ctx_r133 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r133.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_57_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_57_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r126 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r126.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Start Date");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r126.view.recordStatus == "update" && ctx_r126.notSaved("start_date", ctx_r126.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r126.view.recordStatus == "update" && ctx_r126.isSaved("start_date", ctx_r126.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_57_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_57_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_57_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_57_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r13 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r13.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r13.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r13.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_59_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r135 = i0.ɵɵnextContext(2).index;
        const ctx_r138 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r138.findColumnDisplayValue(rowIndex_r135, "phone", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r145 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r145); const ctx_r144 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r144.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r147 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 98);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r147); const ctx_r146 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r146.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r147); const ctx_r148 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r148.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r134 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r139 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Phone");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r139.view.recordStatus == "update" && ctx_r139.notSaved("phone", rowForm_r134));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r139.view.recordStatus == "update" && ctx_r139.isSaved("phone", rowForm_r134));
    } }
    function dibexActionReloadContainerComponent_td_59_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_59_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_59_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_59_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_59_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r134 = i0.ɵɵnextContext().$implicit;
        const ctx_r136 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r136.excelEditing == false && rowForm_r134.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r136.excelEditing == true || rowForm_r134.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r136.excelEditing == false && rowForm_r134.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_59_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_59_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r134 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r134);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r134.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_60_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Phone ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_60_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Phone");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_60_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r157 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_60_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r157); const ctx_r156 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r156.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_60_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_60_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r159 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 99)(2, "mat-label");
        i0.ɵɵtext(3, "Phone");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 98);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_60_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r159); const ctx_r158 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r158.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_60_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r159); const ctx_r160 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r160.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_60_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_60_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r153 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r153.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Phone");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r153.view.recordStatus == "update" && ctx_r153.notSaved("phone", ctx_r153.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r153.view.recordStatus == "update" && ctx_r153.isSaved("phone", ctx_r153.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_60_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_60_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_60_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_60_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r15 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r15.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r15.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r15.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_62_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r162 = i0.ɵɵnextContext(2).index;
        const ctx_r165 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r165.findColumnDisplayValue(rowIndex_r162, "email", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r172 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r172); const ctx_r171 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r171.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r174 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 100);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r174); const ctx_r173 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r173.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r174); const ctx_r175 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r175.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r161 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r166 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Email");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r166.view.recordStatus == "update" && ctx_r166.notSaved("email", rowForm_r161));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r166.view.recordStatus == "update" && ctx_r166.isSaved("email", rowForm_r161));
    } }
    function dibexActionReloadContainerComponent_td_62_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_62_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_62_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_62_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_62_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r161 = i0.ɵɵnextContext().$implicit;
        const ctx_r163 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r163.excelEditing == false && rowForm_r161.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r163.excelEditing == true || rowForm_r161.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r163.excelEditing == false && rowForm_r161.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_62_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_62_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r161 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r161);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r161.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_63_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Email ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_63_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Email");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_63_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r184 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_63_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r184); const ctx_r183 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r183.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_63_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_63_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r186 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 101)(2, "mat-label");
        i0.ɵɵtext(3, "Email");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 100);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_63_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r186); const ctx_r185 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r185.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_63_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r186); const ctx_r187 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r187.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_63_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_63_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r180 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r180.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Email");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r180.view.recordStatus == "update" && ctx_r180.notSaved("email", ctx_r180.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r180.view.recordStatus == "update" && ctx_r180.isSaved("email", ctx_r180.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_63_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_63_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_63_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_63_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r17 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r17.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r17.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r17.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_65_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r189 = i0.ɵɵnextContext(2).index;
        const ctx_r192 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r192.findColumnDisplayValue(rowIndex_r189, "address", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r199 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r199); const ctx_r198 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r198.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r201 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 102);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r201); const ctx_r200 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r200.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r201); const ctx_r202 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r202.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r188 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r193 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Address");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r193.view.recordStatus == "update" && ctx_r193.notSaved("address", rowForm_r188));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r193.view.recordStatus == "update" && ctx_r193.isSaved("address", rowForm_r188));
    } }
    function dibexActionReloadContainerComponent_td_65_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_65_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_65_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_65_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_65_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r188 = i0.ɵɵnextContext().$implicit;
        const ctx_r190 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r190.excelEditing == false && rowForm_r188.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r190.excelEditing == true || rowForm_r188.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r190.excelEditing == false && rowForm_r188.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_65_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_65_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r188 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r188);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r188.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_66_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Address ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_66_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Address");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_66_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r211 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_66_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r211); const ctx_r210 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r210.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_66_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_66_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r213 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 103)(2, "mat-label");
        i0.ɵɵtext(3, "Address");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 102);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_66_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r213); const ctx_r212 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r212.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_66_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r213); const ctx_r214 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r214.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_66_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_66_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r207 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r207.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Address");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r207.view.recordStatus == "update" && ctx_r207.notSaved("address", ctx_r207.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r207.view.recordStatus == "update" && ctx_r207.isSaved("address", ctx_r207.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_66_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_66_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_66_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_66_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r19 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r19.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r19.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r19.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_68_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r216 = i0.ɵɵnextContext(2).index;
        const ctx_r219 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r219.findColumnDisplayValue(rowIndex_r216, "city_town", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r226 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r226); const ctx_r225 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r225.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r228 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 104);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r228); const ctx_r227 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r227.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r228); const ctx_r229 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r229.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r215 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r220 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "City Town");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r220.view.recordStatus == "update" && ctx_r220.notSaved("city_town", rowForm_r215));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r220.view.recordStatus == "update" && ctx_r220.isSaved("city_town", rowForm_r215));
    } }
    function dibexActionReloadContainerComponent_td_68_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_68_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_68_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_68_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_68_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r215 = i0.ɵɵnextContext().$implicit;
        const ctx_r217 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r217.excelEditing == false && rowForm_r215.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r217.excelEditing == true || rowForm_r215.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r217.excelEditing == false && rowForm_r215.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_68_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_68_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r215 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r215);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r215.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_69_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " City Town ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_69_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "City Town");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_69_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r238 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_69_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r238); const ctx_r237 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r237.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_69_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_69_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r240 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 105)(2, "mat-label");
        i0.ɵɵtext(3, "City Town");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 104);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_69_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r240); const ctx_r239 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r239.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_69_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r240); const ctx_r241 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r241.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_69_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_69_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r234 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r234.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "City Town");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r234.view.recordStatus == "update" && ctx_r234.notSaved("city_town", ctx_r234.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r234.view.recordStatus == "update" && ctx_r234.isSaved("city_town", ctx_r234.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_69_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_69_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_69_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_69_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r21 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r21.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r21.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r21.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_71_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r243 = i0.ɵɵnextContext(2).index;
        const ctx_r246 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r246.findColumnDisplayValue(rowIndex_r243, "country", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r253 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r253); const ctx_r252 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r252.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r255 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 106);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r255); const ctx_r254 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r254.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r255); const ctx_r256 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r256.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r242 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r247 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Country");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r247.view.recordStatus == "update" && ctx_r247.notSaved("country", rowForm_r242));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r247.view.recordStatus == "update" && ctx_r247.isSaved("country", rowForm_r242));
    } }
    function dibexActionReloadContainerComponent_td_71_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_71_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_71_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_71_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_71_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r242 = i0.ɵɵnextContext().$implicit;
        const ctx_r244 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r244.excelEditing == false && rowForm_r242.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r244.excelEditing == true || rowForm_r242.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r244.excelEditing == false && rowForm_r242.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_71_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_71_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r242 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r242);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r242.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_72_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Country ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_72_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Country");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_72_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r265 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_72_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r265); const ctx_r264 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r264.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_72_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_72_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r267 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 107)(2, "mat-label");
        i0.ɵɵtext(3, "Country");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 106);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_72_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r267); const ctx_r266 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r266.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_72_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r267); const ctx_r268 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r268.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_72_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_72_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r261 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r261.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Country");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r261.view.recordStatus == "update" && ctx_r261.notSaved("country", ctx_r261.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r261.view.recordStatus == "update" && ctx_r261.isSaved("country", ctx_r261.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_72_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_72_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_72_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_72_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r23 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r23.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r23.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r23.showSearch);
    } }
    function dibexActionReloadContainerComponent_td_74_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r270 = i0.ɵɵnextContext(2).index;
        const ctx_r273 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r273.findColumnDisplayValue(rowIndex_r270, "updated", "none", "datetime"), "");
    } }
    function dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        const _r281 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_mat_icon_4_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r281); const ctx_r280 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r280.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r283 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 108);
        i0.ɵɵelement(2, "mat-datepicker-toggle", 94);
        i0.ɵɵelementStart(3, "input", 109);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_Template_input_keydown_enter_3_listener() { i0.ɵɵrestoreView(_r283); const ctx_r282 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r282.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_Template_input_keydown_esc_3_listener() { i0.ɵɵrestoreView(_r283); const ctx_r284 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r284.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_mat_icon_5_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelement(6, "ngx-mat-datetime-picker", null, 110);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const _r279 = i0.ɵɵreference(7);
        const rowForm_r269 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r274 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("for", _r279);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngxMatDatetimePicker", _r279);
        i0.ɵɵattribute("aria-label", "Updated");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r274.view.recordStatus == "update" && ctx_r274.notSaved("updated", rowForm_r269));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r274.view.recordStatus == "update" && ctx_r274.isSaved("updated", rowForm_r269));
    } }
    function dibexActionReloadContainerComponent_td_74_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_td_74_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_td_74_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_td_74_ng_container_1_span_4_Template, 8, 5, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_td_74_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r269 = i0.ɵɵnextContext().$implicit;
        const ctx_r271 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r271.excelEditing == false && rowForm_r269.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r271.excelEditing == true || rowForm_r269.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r271.excelEditing == false && rowForm_r269.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_td_74_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_td_74_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r269 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r269);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r269.getRawValue());
    } }
    function dibexActionReloadContainerComponent_th_75_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Updated ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_75_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Updated");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_75_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r293 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_th_75_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r293); const ctx_r292 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r292.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_75_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_th_75_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r295 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 111)(2, "mat-label");
        i0.ɵɵtext(3, "Updated");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 112);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_th_75_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r295); const ctx_r294 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r294.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_th_75_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r295); const ctx_r296 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r296.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_th_75_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_th_75_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r289 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r289.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Updated");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r289.view.recordStatus == "update" && ctx_r289.notSaved("updated", ctx_r289.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r289.view.recordStatus == "update" && ctx_r289.isSaved("updated", ctx_r289.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_th_75_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_th_75_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_th_75_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_th_75_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r25 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r25.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r25.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r25.showSearch);
    } }
    function dibexActionReloadContainerComponent_th_77_mat_progress_bar_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "mat-progress-bar", 115);
    } }
    function dibexActionReloadContainerComponent_th_77_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 113);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_th_77_mat_progress_bar_1_Template, 1, 0, "mat-progress-bar", 114);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r26 = i0.ɵɵnextContext();
        i0.ɵɵattribute("colspan", ctx_r26.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r26.busy);
    } }
    function dibexActionReloadContainerComponent_th_79_span_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r298 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r298.translate("global.norecordsfound", "No Records Found"));
    } }
    function dibexActionReloadContainerComponent_th_79_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 116);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_th_79_span_1_Template, 2, 1, "span", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r27 = i0.ɵɵnextContext();
        i0.ɵɵattribute("colspan", ctx_r27.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r27.busy && ctx_r27.tableDataSource.data.length == 0);
    } }
    function dibexActionReloadContainerComponent_ng_container_80_tr_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "tr", 118);
    } }
    function dibexActionReloadContainerComponent_ng_container_80_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_container_80_tr_1_Template, 1, 0, "tr", 117);
        i0.ɵɵpipe(2, "async");
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const column_r299 = ctx.$implicit;
        const ctx_r28 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("matHeaderRowDef", i0.ɵɵpipeBind1(2, 1, ctx_r28.columnHeaders.getArray(column_r299).items$));
    } }
    function dibexActionReloadContainerComponent_tr_81_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "tr", 119);
    } if (rf & 2) {
        const ctx_r29 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction1(1, _c0, ctx_r29.busy ? "visible" : "hidden"));
    } }
    function dibexActionReloadContainerComponent_tr_82_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "tr", 119);
    } if (rf & 2) {
        const ctx_r30 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction1(1, _c0, ctx_r30.tableDataSource.data.length == 0 ? "visible" : "hidden"));
    } }
    function dibexActionReloadContainerComponent_tr_83_Template(rf, ctx) { if (rf & 1) {
        const _r304 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "tr", 120);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_tr_83_Template_tr_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r304); const row_r301 = restoredCtx.$implicit; const ctx_r303 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r303.rowClick(row_r301, $event)); });
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r301 = ctx.$implicit;
        const ctx_r31 = i0.ɵɵnextContext();
        i0.ɵɵproperty("formGroup", ctx_r31.model.$formGroup)("ngClass", i0.ɵɵpureFunction1(2, _c1, ctx_r31.isHighlighted(row_r301)));
    } }
    function dibexActionReloadContainerComponent_85_ng_template_0_Template(rf, ctx) { }
    function dibexActionReloadContainerComponent_85_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, dibexActionReloadContainerComponent_85_ng_template_0_Template, 0, 0, "ng-template", 121);
    } if (rf & 2) {
        i0.ɵɵnextContext();
        const _r35 = i0.ɵɵreference(90);
        i0.ɵɵproperty("ngTemplateOutlet", _r35);
    } }
    function dibexActionReloadContainerComponent_mat_toolbar_88_mat_checkbox_2_Template(rf, ctx) { if (rf & 1) {
        const _r310 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-checkbox", 127);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_mat_toolbar_88_mat_checkbox_2_Template_mat_checkbox_click_0_listener($event) { i0.ɵɵrestoreView(_r310); const ctx_r309 = i0.ɵɵnextContext(2); $event.preventDefault(); return i0.ɵɵresetView(ctx_r309.clearAll()); });
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r306 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("checked", true);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate2(" ", ctx_r306.numberOfSelectedItems + " ", "item", ctx_r306.numberOfSelectedItems > 1 ? "s " : " ", "selected ");
    } }
    function dibexActionReloadContainerComponent_mat_toolbar_88_button_3_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon");
        i0.ɵɵtext(1, "visibility");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_mat_toolbar_88_button_3_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon");
        i0.ɵɵtext(1, "visibility_off");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_mat_toolbar_88_button_3_Template(rf, ctx) { if (rf & 1) {
        const _r314 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 128);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_mat_toolbar_88_button_3_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r314); const ctx_r313 = i0.ɵɵnextContext(2); ctx_r313.gridShowClipboardDefault = !ctx_r313.gridShowClipboardDefault; return i0.ɵɵresetView(ctx_r313.gridShowClipboardDefault && ctx_r313.scrollToBottom()); });
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_mat_toolbar_88_button_3_mat_icon_1_Template, 2, 0, "mat-icon", 53);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_mat_toolbar_88_button_3_mat_icon_2_Template, 2, 0, "mat-icon", 53);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r307 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r307.gridShowClipboardDefault);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r307.gridShowClipboardDefault);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r307.gridShowClipboardDefault ? "hide" : "show", "");
    } }
    function dibexActionReloadContainerComponent_mat_toolbar_88_mat_paginator_5_Template(rf, ctx) { if (rf & 1) {
        const _r317 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-paginator", 129, 130);
        i0.ɵɵlistener("page", function dibexActionReloadContainerComponent_mat_toolbar_88_mat_paginator_5_Template_mat_paginator_page_0_listener($event) { i0.ɵɵrestoreView(_r317); const ctx_r316 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r316.changePage($event)); });
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r308 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("length", ctx_r308.page.totalRecords)("pageSize", ctx_r308.page.pageSize)("pageSizeOptions", i0.ɵɵpureFunction0(3, _c2));
    } }
    function dibexActionReloadContainerComponent_mat_toolbar_88_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-toolbar")(1, "mat-toolbar-row", 122);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_mat_toolbar_88_mat_checkbox_2_Template, 2, 3, "mat-checkbox", 123);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_mat_toolbar_88_button_3_Template, 4, 3, "button", 124);
        i0.ɵɵelement(4, "span", 125);
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_mat_toolbar_88_mat_paginator_5_Template, 2, 4, "mat-paginator", 126);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r34 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r34.numberOfSelectedItems);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r34.selectedDataNotInPage().length > 0);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", true);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "div", 66);
        i0.ɵɵelementContainer(2, 10);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("dibPort", "6582");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_2_ng_container_1_Template, 3, 1, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r343 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r343);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r343.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "th", 67);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r348 = i0.ɵɵnextContext(2).index;
        const ctx_r351 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r351.findColumnDisplayValue(rowIndex_r348, "id", "none", "number"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r358 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r358); const ctx_r357 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r357.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r360 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 72)(2, "input", 135);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r360); const ctx_r359 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r359.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r360); const ctx_r361 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r361.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r347 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r352 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Id");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r352.view.recordStatus == "update" && ctx_r352.notSaved("id", rowForm_r347));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r352.view.recordStatus == "update" && ctx_r352.isSaved("id", rowForm_r347));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r347 = i0.ɵɵnextContext().$implicit;
        const ctx_r349 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r349.excelEditing == false && rowForm_r347.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r349.excelEditing == true || rowForm_r347.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r349.excelEditing == false && rowForm_r347.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_5_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r347 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r347);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r347.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_6_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Id ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_6_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Id");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r370 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r370); const ctx_r369 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r369.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r372 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 87)(2, "mat-label");
        i0.ɵɵtext(3, "Id");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 88);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r372); const ctx_r371 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r371.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r372); const ctx_r373 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r373.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r366 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r366.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Id");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r366.view.recordStatus == "update" && ctx_r366.notSaved("id", ctx_r366.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r366.view.recordStatus == "update" && ctx_r366.isSaved("id", ctx_r366.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_6_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_6_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_6_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r321 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r321.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r321.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r321.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r375 = i0.ɵɵnextContext(2).index;
        const ctx_r378 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r378.findColumnDisplayValue(rowIndex_r375, "name", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r385 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r385); const ctx_r384 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r384.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r387 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 90);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r387); const ctx_r386 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r386.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r387); const ctx_r388 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r388.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r374 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r379 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Name");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r379.view.recordStatus == "update" && ctx_r379.notSaved("name", rowForm_r374));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r379.view.recordStatus == "update" && ctx_r379.isSaved("name", rowForm_r374));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r374 = i0.ɵɵnextContext().$implicit;
        const ctx_r376 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r376.excelEditing == false && rowForm_r374.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r376.excelEditing == true || rowForm_r374.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r376.excelEditing == false && rowForm_r374.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_8_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_8_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r374 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r374);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r374.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_9_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Name ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_9_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Name");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r397 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r397); const ctx_r396 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r396.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r399 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 91)(2, "mat-label");
        i0.ɵɵtext(3, "Name");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 90);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r399); const ctx_r398 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r398.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r399); const ctx_r400 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r400.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r393 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r393.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Name");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r393.view.recordStatus == "update" && ctx_r393.notSaved("name", ctx_r393.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r393.view.recordStatus == "update" && ctx_r393.isSaved("name", ctx_r393.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_9_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_9_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_9_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_9_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r323 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r323.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r323.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r323.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r402 = i0.ɵɵnextContext(2).index;
        const ctx_r405 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r405.findColumnDisplayValue(rowIndex_r402, "start_date", "none", "date"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        const _r413 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_mat_icon_6_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r413); const ctx_r412 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r412.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_mat_icon_7_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r415 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 92)(2, "input", 93);
        i0.ɵɵlistener("focus", function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_Template_input_focus_2_listener() { i0.ɵɵrestoreView(_r415); const _r409 = i0.ɵɵreference(5); return i0.ɵɵresetView(_r409.open()); })("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r415); const ctx_r416 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r416.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r415); const ctx_r417 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r417.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵelement(3, "mat-datepicker-toggle", 94)(4, "mat-datepicker", null, 95);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_mat_icon_6_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(7, dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_mat_icon_7_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const _r409 = i0.ɵɵreference(5);
        const rowForm_r401 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r406 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("matDatepicker", _r409);
        i0.ɵɵattribute("aria-label", "Start Date");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("for", _r409);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r406.view.recordStatus == "update" && ctx_r406.notSaved("start_date", rowForm_r401));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r406.view.recordStatus == "update" && ctx_r406.isSaved("start_date", rowForm_r401));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_4_Template, 8, 5, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r401 = i0.ɵɵnextContext().$implicit;
        const ctx_r403 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r403.excelEditing == false && rowForm_r401.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r403.excelEditing == true || rowForm_r401.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r403.excelEditing == false && rowForm_r401.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_11_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_11_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r401 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r401);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r401.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_12_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Start Date ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_12_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Start Date");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r426 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r426); const ctx_r425 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r425.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r428 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 96)(2, "mat-label");
        i0.ɵɵtext(3, "Start Date");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 97);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r428); const ctx_r427 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r427.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r428); const ctx_r429 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r429.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r422 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r422.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Start Date");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r422.view.recordStatus == "update" && ctx_r422.notSaved("start_date", ctx_r422.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r422.view.recordStatus == "update" && ctx_r422.isSaved("start_date", ctx_r422.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_12_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_12_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_12_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_12_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r325 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r325.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r325.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r325.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r431 = i0.ɵɵnextContext(2).index;
        const ctx_r434 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r434.findColumnDisplayValue(rowIndex_r431, "phone", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r441 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r441); const ctx_r440 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r440.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r443 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 98);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r443); const ctx_r442 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r442.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r443); const ctx_r444 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r444.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r430 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r435 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Phone");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r435.view.recordStatus == "update" && ctx_r435.notSaved("phone", rowForm_r430));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r435.view.recordStatus == "update" && ctx_r435.isSaved("phone", rowForm_r430));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r430 = i0.ɵɵnextContext().$implicit;
        const ctx_r432 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r432.excelEditing == false && rowForm_r430.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r432.excelEditing == true || rowForm_r430.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r432.excelEditing == false && rowForm_r430.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_14_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_14_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r430 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r430);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r430.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_15_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Phone ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_15_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Phone");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r453 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r453); const ctx_r452 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r452.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r455 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 99)(2, "mat-label");
        i0.ɵɵtext(3, "Phone");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 98);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r455); const ctx_r454 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r454.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r455); const ctx_r456 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r456.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r449 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r449.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Phone");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r449.view.recordStatus == "update" && ctx_r449.notSaved("phone", ctx_r449.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r449.view.recordStatus == "update" && ctx_r449.isSaved("phone", ctx_r449.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_15_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_15_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_15_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_15_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r327 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r327.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r327.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r327.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r458 = i0.ɵɵnextContext(2).index;
        const ctx_r461 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r461.findColumnDisplayValue(rowIndex_r458, "email", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r468 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r468); const ctx_r467 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r467.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r470 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 100);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r470); const ctx_r469 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r469.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r470); const ctx_r471 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r471.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r457 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r462 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Email");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r462.view.recordStatus == "update" && ctx_r462.notSaved("email", rowForm_r457));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r462.view.recordStatus == "update" && ctx_r462.isSaved("email", rowForm_r457));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r457 = i0.ɵɵnextContext().$implicit;
        const ctx_r459 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r459.excelEditing == false && rowForm_r457.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r459.excelEditing == true || rowForm_r457.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r459.excelEditing == false && rowForm_r457.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_17_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_17_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r457 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r457);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r457.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_18_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Email ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_18_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Email");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r480 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r480); const ctx_r479 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r479.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r482 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 101)(2, "mat-label");
        i0.ɵɵtext(3, "Email");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 100);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r482); const ctx_r481 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r481.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r482); const ctx_r483 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r483.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r476 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r476.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Email");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r476.view.recordStatus == "update" && ctx_r476.notSaved("email", ctx_r476.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r476.view.recordStatus == "update" && ctx_r476.isSaved("email", ctx_r476.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_18_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_18_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_18_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_18_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r329 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r329.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r329.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r329.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r485 = i0.ɵɵnextContext(2).index;
        const ctx_r488 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r488.findColumnDisplayValue(rowIndex_r485, "address", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r495 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r495); const ctx_r494 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r494.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r497 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 102);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r497); const ctx_r496 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r496.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r497); const ctx_r498 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r498.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r484 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r489 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Address");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r489.view.recordStatus == "update" && ctx_r489.notSaved("address", rowForm_r484));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r489.view.recordStatus == "update" && ctx_r489.isSaved("address", rowForm_r484));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r484 = i0.ɵɵnextContext().$implicit;
        const ctx_r486 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r486.excelEditing == false && rowForm_r484.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r486.excelEditing == true || rowForm_r484.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r486.excelEditing == false && rowForm_r484.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_20_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_20_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r484 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r484);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r484.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_21_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Address ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_21_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Address");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r507 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r507); const ctx_r506 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r506.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r509 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 103)(2, "mat-label");
        i0.ɵɵtext(3, "Address");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 102);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r509); const ctx_r508 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r508.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r509); const ctx_r510 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r510.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r503 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r503.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Address");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r503.view.recordStatus == "update" && ctx_r503.notSaved("address", ctx_r503.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r503.view.recordStatus == "update" && ctx_r503.isSaved("address", ctx_r503.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_21_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_21_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_21_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_21_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r331 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r331.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r331.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r331.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r512 = i0.ɵɵnextContext(2).index;
        const ctx_r515 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r515.findColumnDisplayValue(rowIndex_r512, "city_town", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r522 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r522); const ctx_r521 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r521.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r524 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 104);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r524); const ctx_r523 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r523.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r524); const ctx_r525 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r525.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r511 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r516 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "City Town");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r516.view.recordStatus == "update" && ctx_r516.notSaved("city_town", rowForm_r511));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r516.view.recordStatus == "update" && ctx_r516.isSaved("city_town", rowForm_r511));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r511 = i0.ɵɵnextContext().$implicit;
        const ctx_r513 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r513.excelEditing == false && rowForm_r511.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r513.excelEditing == true || rowForm_r511.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r513.excelEditing == false && rowForm_r511.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_23_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_23_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r511 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r511);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r511.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_24_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " City Town ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_24_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "City Town");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r534 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r534); const ctx_r533 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r533.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r536 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 105)(2, "mat-label");
        i0.ɵɵtext(3, "City Town");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 104);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r536); const ctx_r535 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r535.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r536); const ctx_r537 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r537.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r530 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r530.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "City Town");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r530.view.recordStatus == "update" && ctx_r530.notSaved("city_town", ctx_r530.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r530.view.recordStatus == "update" && ctx_r530.isSaved("city_town", ctx_r530.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_24_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_24_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_24_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_24_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r333 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r333.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r333.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r333.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r539 = i0.ɵɵnextContext(2).index;
        const ctx_r542 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r542.findColumnDisplayValue(rowIndex_r539, "country", "none", "text"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
        const _r549 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_mat_icon_3_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r549); const ctx_r548 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r548.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r551 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 89)(2, "input", 106);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_Template_input_keydown_enter_2_listener() { i0.ɵɵrestoreView(_r551); const ctx_r550 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r550.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_Template_input_keydown_esc_2_listener() { i0.ɵɵrestoreView(_r551); const ctx_r552 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r552.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_mat_icon_3_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const rowForm_r538 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r543 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵattribute("aria-label", "Country");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r543.view.recordStatus == "update" && ctx_r543.notSaved("country", rowForm_r538));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r543.view.recordStatus == "update" && ctx_r543.isSaved("country", rowForm_r538));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_4_Template, 5, 3, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r538 = i0.ɵɵnextContext().$implicit;
        const ctx_r540 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r540.excelEditing == false && rowForm_r538.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r540.excelEditing == true || rowForm_r538.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r540.excelEditing == false && rowForm_r538.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_26_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_26_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r538 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r538);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r538.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_27_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Country ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_27_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Country");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r561 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r561); const ctx_r560 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r560.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r563 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 107)(2, "mat-label");
        i0.ɵɵtext(3, "Country");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 106);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r563); const ctx_r562 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r562.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r563); const ctx_r564 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r564.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r557 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r557.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Country");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r557.view.recordStatus == "update" && ctx_r557.notSaved("country", ctx_r557.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r557.view.recordStatus == "update" && ctx_r557.isSaved("country", ctx_r557.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_27_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_27_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_27_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_27_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r335 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r335.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r335.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r335.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span", 71);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowIndex_r566 = i0.ɵɵnextContext(2).index;
        const ctx_r569 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r569.findColumnDisplayValue(rowIndex_r566, "updated", "none", "datetime"), "");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
        const _r577 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_mat_icon_4_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r577); const ctx_r576 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r576.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_Template(rf, ctx) { if (rf & 1) {
        const _r579 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 71)(1, "mat-form-field", 108);
        i0.ɵɵelement(2, "mat-datepicker-toggle", 94);
        i0.ɵɵelementStart(3, "input", 109);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_Template_input_keydown_enter_3_listener() { i0.ɵɵrestoreView(_r579); const ctx_r578 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r578.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_Template_input_keydown_esc_3_listener() { i0.ɵɵrestoreView(_r579); const ctx_r580 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r580.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_mat_icon_4_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_mat_icon_5_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelement(6, "ngx-mat-datetime-picker", null, 110);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const _r575 = i0.ɵɵreference(7);
        const rowForm_r565 = i0.ɵɵnextContext(2).$implicit;
        const ctx_r570 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("for", _r575);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngxMatDatetimePicker", _r575);
        i0.ɵɵattribute("aria-label", "Updated");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r570.view.recordStatus == "update" && ctx_r570.notSaved("updated", rowForm_r565));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r570.view.recordStatus == "update" && ctx_r570.isSaved("updated", rowForm_r565));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵelementStart(1, "span", 68)(2, "span", 69);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_3_Template, 2, 1, "span", 70);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_4_Template, 8, 5, "span", 70);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_span_5_Template, 1, 0, "span", 53);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const rowForm_r565 = i0.ɵɵnextContext().$implicit;
        const ctx_r567 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngIf", ctx_r567.excelEditing == false && rowForm_r565.get("__edit").value === false);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r567.excelEditing == true || rowForm_r565.get("__edit").value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r567.excelEditing == false && rowForm_r565.get("__edit").value === false);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_29_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 65);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_td_29_ng_container_1_Template, 6, 3, "ng-container", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const rowForm_r565 = ctx.$implicit;
        i0.ɵɵproperty("formGroup", rowForm_r565);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", rowForm_r565.getRawValue());
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_30_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 84);
        i0.ɵɵtext(1, " Updated ");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_30_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 85);
        i0.ɵɵtext(1, "Updated");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
        const _r589 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-icon", 77);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r589); const ctx_r588 = i0.ɵɵnextContext(4); return i0.ɵɵresetView(ctx_r588.onSubmit()); });
        i0.ɵɵtext(1, "done");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon", 78);
        i0.ɵɵtext(1, "done_all");
        i0.ɵɵelementEnd();
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r591 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 86)(1, "mat-form-field", 111)(2, "mat-label");
        i0.ɵɵtext(3, "Updated");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 112);
        i0.ɵɵlistener("keydown.enter", function dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r591); const ctx_r590 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r590.searchGrid(false)); })("keydown.esc", function dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r591); const ctx_r592 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r592.clearSearch()); });
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_mat_icon_5_Template, 2, 0, "mat-icon", 74);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_mat_icon_6_Template, 2, 0, "mat-icon", 75);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r585 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r585.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Updated");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r585.view.recordStatus == "update" && ctx_r585.notSaved("updated", ctx_r585.model.$formGroup));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r585.view.recordStatus == "update" && ctx_r585.isSaved("updated", ctx_r585.model.$formGroup));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_30_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 67)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_th_30_div_2_Template, 2, 0, "div", 81);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_30_div_3_Template, 2, 0, "div", 82);
        i0.ɵɵtemplate(4, dibexActionReloadContainerComponent_ng_template_89_th_30_div_4_Template, 7, 4, "div", 83);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r337 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r337.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r337.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r337.showSearch);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_32_Template(rf, ctx) { if (rf & 1) {
        const _r594 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "th", 61)(1, "mat-checkbox", 136);
        i0.ɵɵlistener("change", function dibexActionReloadContainerComponent_ng_template_89_th_32_Template_mat_checkbox_change_1_listener($event) { i0.ɵɵrestoreView(_r594); const ctx_r593 = i0.ɵɵnextContext(2); return i0.ɵɵresetView($event ? ctx_r593.masterToggle($event) : null); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r338 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r338.masterIsChecked)("indeterminate", ctx_r338.masterIsIndeterminate);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_td_33_Template(rf, ctx) { if (rf & 1) {
        const _r598 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 137)(1, "mat-checkbox", 64);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_td_33_Template_mat_checkbox_click_1_listener($event) { return $event.stopPropagation(); })("change", function dibexActionReloadContainerComponent_ng_template_89_td_33_Template_mat_checkbox_change_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r598); const row_r595 = restoredCtx.$implicit; const ctx_r597 = i0.ɵɵnextContext(2); return i0.ɵɵresetView($event ? ctx_r597.selection.toggle(row_r595) : null); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r595 = ctx.$implicit;
        const ctx_r339 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r339.isHighlighted(row_r595));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_35_mat_progress_bar_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "mat-progress-bar", 115);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_35_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 138);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_th_35_mat_progress_bar_1_Template, 1, 0, "mat-progress-bar", 114);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r340 = i0.ɵɵnextContext(2);
        i0.ɵɵattribute("colspan", ctx_r340.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r340.busy);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_37_span_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r600 = i0.ɵɵnextContext(3);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r600.translate("global.norecordsfound", "No Records Found"));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_th_37_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 116);
        i0.ɵɵtemplate(1, dibexActionReloadContainerComponent_ng_template_89_th_37_span_1_Template, 2, 1, "span", 53);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r341 = i0.ɵɵnextContext(2);
        i0.ɵɵattribute("colspan", ctx_r341.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r341.busy && ctx_r341.tableDataSource.data.length == 0);
    } }
    function dibexActionReloadContainerComponent_ng_template_89_tr_38_Template(rf, ctx) { if (rf & 1) {
        const _r603 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "tr", 139);
        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_ng_template_89_tr_38_Template_tr_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r603); const row_r601 = restoredCtx.$implicit; const ctx_r602 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r602.rowClick(row_r601, $event)); });
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r601 = ctx.$implicit;
        const ctx_r342 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(1, _c1, ctx_r342.isHighlighted(row_r601)));
    } }
    function dibexActionReloadContainerComponent_ng_template_89_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "table", 131);
        i0.ɵɵelementContainerStart(1, 34);
        i0.ɵɵtemplate(2, dibexActionReloadContainerComponent_ng_template_89_td_2_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(3, dibexActionReloadContainerComponent_ng_template_89_th_3_Template, 1, 0, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(4, 37);
        i0.ɵɵtemplate(5, dibexActionReloadContainerComponent_ng_template_89_td_5_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(6, dibexActionReloadContainerComponent_ng_template_89_th_6_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(7, 38);
        i0.ɵɵtemplate(8, dibexActionReloadContainerComponent_ng_template_89_td_8_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(9, dibexActionReloadContainerComponent_ng_template_89_th_9_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(10, 39);
        i0.ɵɵtemplate(11, dibexActionReloadContainerComponent_ng_template_89_td_11_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(12, dibexActionReloadContainerComponent_ng_template_89_th_12_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(13, 40);
        i0.ɵɵtemplate(14, dibexActionReloadContainerComponent_ng_template_89_td_14_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(15, dibexActionReloadContainerComponent_ng_template_89_th_15_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(16, 41);
        i0.ɵɵtemplate(17, dibexActionReloadContainerComponent_ng_template_89_td_17_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(18, dibexActionReloadContainerComponent_ng_template_89_th_18_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(19, 42);
        i0.ɵɵtemplate(20, dibexActionReloadContainerComponent_ng_template_89_td_20_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(21, dibexActionReloadContainerComponent_ng_template_89_th_21_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(22, 43);
        i0.ɵɵtemplate(23, dibexActionReloadContainerComponent_ng_template_89_td_23_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(24, dibexActionReloadContainerComponent_ng_template_89_th_24_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(25, 44);
        i0.ɵɵtemplate(26, dibexActionReloadContainerComponent_ng_template_89_td_26_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(27, dibexActionReloadContainerComponent_ng_template_89_th_27_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(28, 45);
        i0.ɵɵtemplate(29, dibexActionReloadContainerComponent_ng_template_89_td_29_Template, 2, 2, "td", 35);
        i0.ɵɵtemplate(30, dibexActionReloadContainerComponent_ng_template_89_th_30_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(31, 31);
        i0.ɵɵtemplate(32, dibexActionReloadContainerComponent_ng_template_89_th_32_Template, 2, 2, "th", 32);
        i0.ɵɵtemplate(33, dibexActionReloadContainerComponent_ng_template_89_td_33_Template, 2, 1, "td", 132);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(34, 46);
        i0.ɵɵtemplate(35, dibexActionReloadContainerComponent_ng_template_89_th_35_Template, 2, 2, "th", 133);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(36, 48);
        i0.ɵɵtemplate(37, dibexActionReloadContainerComponent_ng_template_89_th_37_Template, 2, 2, "th", 49);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵtemplate(38, dibexActionReloadContainerComponent_ng_template_89_tr_38_Template, 1, 3, "tr", 134);
        i0.ɵɵpipe(39, "async");
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r36 = i0.ɵɵnextContext();
        i0.ɵɵproperty("dataSource", ctx_r36.selectionDataSource);
        i0.ɵɵadvance(38);
        i0.ɵɵproperty("matRowDefColumns", i0.ɵɵpipeBind1(39, 2, ctx_r36.columnsToDisplay.items$));
    } }
    async function importFiles() { for (const fileLocation of importsRequired) {
        await SystemJS.import(fileLocation);
    } }
    return {
        setters: [
            function (tslib_1_1) {
                tslib_1 = tslib_1_1;
            },
            function (core_1_1) {
                core_1 = core_1_1;
                core_2 = core_1_1;
                core_4 = core_1_1;
                i0 = core_1_1;
            },
            function (table_1_1) {
                table_1 = table_1_1;
                table_2 = table_1_1;
                i17 = table_1_1;
            },
            function (shared_1_1) {
                shared_1 = shared_1_1;
                shared_2 = shared_1_1;
                shared_3 = shared_1_1;
                shared_4 = shared_1_1;
                shared_5 = shared_1_1;
                shared_6 = shared_1_1;
                i2 = shared_1_1;
            },
            function (forms_1_1) {
                forms_1 = forms_1_1;
                forms_2 = forms_1_1;
                i3 = forms_1_1;
            },
            function (http_1_1) {
                http_1 = http_1_1;
                i1 = http_1_1;
            },
            function (core_3_1) {
                core_3 = core_3_1;
                core_5 = core_3_1;
            },
            function (rxjs_1_1) {
                rxjs_1 = rxjs_1_1;
            },
            function (operators_1_1) {
                operators_1 = operators_1_1;
            },
            function (sort_1_1) {
                sort_1 = sort_1_1;
                i18 = sort_1_1;
            },
            function (paginator_1_1) {
                paginator_1 = paginator_1_1;
                i19 = paginator_1_1;
            },
            function (common_1_1) {
                common_1 = common_1_1;
                i4 = common_1_1;
            },
            function (button_1_1) {
                button_1 = button_1_1;
                i7 = button_1_1;
            },
            function (icon_1_1) {
                icon_1 = icon_1_1;
                i11 = icon_1_1;
            },
            function (card_1_1) {
                card_1 = card_1_1;
                i16 = card_1_1;
            },
            function (datepicker_1_1) {
                datepicker_1 = datepicker_1_1;
                i9 = datepicker_1_1;
            },
            function (i5_1) {
                i5 = i5_1;
            },
            function (i6_1) {
                i6 = i6_1;
            },
            function (i8_1) {
                i8 = i8_1;
            },
            function (i10_1) {
                i10 = i10_1;
            },
            function (i12_1) {
                i12 = i12_1;
            },
            function (i13_1) {
                i13 = i13_1;
            },
            function (i14_1) {
                i14 = i14_1;
            },
            function (i15_1) {
                i15 = i15_1;
            }
        ],
        execute: function () {
            _c0 = function (a0) { return { visibility: a0 }; };
            _c1 = function (a0) { return { "dib-grid-selected": a0 }; };
            _c2 = function () { return [10, 20, 50, 100]; };
            _c3 = function (a0) { return { "dib-editor": a0 }; };
            _c4 = function () { return ["_dibBusy"]; };
            _c5 = function () { return ["_dibNoRecords"]; };
            importsRequired = [];
            dibexActionReloadContainerComponent = class dibexActionReloadContainerComponent extends shared_1.GridComponent {
                httpClient;
                ref;
                crudService;
                sd;
                cd;
                formBuilder;
                view = { container: { id: 285, name: 'dibexActionReloadContainer', subContainerItemAliases: [], allChildContainers: ["dibDocsExampleHtml"], refreshChildContainers: { "_": ['dibDocsExampleHtml*6592'] }, dropin: 'grid', activeFilter: null, configs: {}, keepInMemory: false }, items: {}, primaryKeys: ["id"], recordStatus: 'create', debug: false, debugItem: false };
                gridMultiselect = false; //default: false
                gridPersistSelection = false; //default: false
                gridMasterSelectAllFirst = true; //default:true
                gridShowDuplicatesInClipboard = false; //default:false
                gridShowClipboardDefault = false; //default:false
                gridRowClickChangesSelection = true; //default:true
                gridExcelEditingEnabled = false; //default:false
                gridExcelEditingAutoSave = false; //default:false
                gridHighlightLastClickedOnly = false; //default:false
                gridClickedLastNullable = false; //default:false
                editFormGroup;
                selection = new shared_1.SelectionModel(this.gridMultiselect, []);
                selectionDataSource = new table_1.MatTableDataSource(this.selection.selected);
                page = { pageSize: 20, pageIndex: 1, };
                columnsToDisplay = new shared_3.DibArray(['hdrActions', 'id', 'name', 'start_date', 'phone', 'email', 'address', 'city_town', 'country', 'updated',]);
                allColumnsToDisplay = new shared_3.DibArray(['hdrActions', 'id', 'name', 'start_date', 'phone', 'email', 'address', 'city_town', 'country', 'updated',]);
                columnHeaders = new shared_3.DibArrayList({ "1": new shared_3.DibArray([]) });
                showSearchDefault = false;
                showSearch = this.showSearchDefault;
                constructor(injector, httpClient, ref, crudService, viewContainerRef, sd, cd, formBuilder) {
                    super(injector, viewContainerRef);
                    this.httpClient = httpClient;
                    this.ref = ref;
                    this.crudService = crudService;
                    this.sd = sd;
                    this.cd = cd;
                    this.formBuilder = formBuilder;
                    const currentGlobalTheme = this.themeService.getCurrentTheme();
                    if (currentGlobalTheme === null) {
                        this.setActiveTheme('deeppurple-amber', false);
                    }
                    else {
                        this.setActiveTheme(currentGlobalTheme.name, currentGlobalTheme.darkness);
                    }
                }
                ngOnInit() {
                    this.model = new shared_3.DibContainerModel(this.injector, 'dibexActionReloadContainer');
                    this.containerName = 'dibexActionReloadContainer'; // Need to add a shortcut to get the containerName
                    this.model.modelItems = { id: { itemId: 6583, type: 'number', fieldAlias: 'id', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: false, update: false, required: false, itemAlias: null, default: '', dataType: 'number', contentType: 'integer', changeUrl: false }, name: { itemId: 6584, type: 'text', fieldAlias: 'name', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, start_date: { itemId: 6585, type: 'date', fieldAlias: 'start_date', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'date', contentType: 'date', changeUrl: false }, phone: { itemId: 6586, type: 'text', fieldAlias: 'phone', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, email: { itemId: 6587, type: 'text', fieldAlias: 'email', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, address: { itemId: 6588, type: 'text', fieldAlias: 'address', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, city_town: { itemId: 6589, type: 'text', fieldAlias: 'city_town', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, country: { itemId: 6590, type: 'text', fieldAlias: 'country', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, updated: { itemId: 6591, type: 'datetime', fieldAlias: 'updated', formControl: new forms_2.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'datetime', contentType: 'datetime', changeUrl: false }, };
                    this.model.$formGroup.addControl('id', this.model.modelItems.id.formControl);
                    this.model.$formGroup.addControl('name', this.model.modelItems.name.formControl);
                    this.model.$formGroup.addControl('start_date', this.model.modelItems.start_date.formControl);
                    this.model.$formGroup.addControl('phone', this.model.modelItems.phone.formControl);
                    this.model.$formGroup.addControl('email', this.model.modelItems.email.formControl);
                    this.model.$formGroup.addControl('address', this.model.modelItems.address.formControl);
                    this.model.$formGroup.addControl('city_town', this.model.modelItems.city_town.formControl);
                    this.model.$formGroup.addControl('country', this.model.modelItems.country.formControl);
                    this.model.$formGroup.addControl('updated', this.model.modelItems.updated.formControl);
                    this.model.$formGroup.valueChanges
                        .pipe(operators_1.takeUntil(this.onDestroy)).subscribe(change => { });
                    super.ngOnInit();
                    this.initClientDataChangeListeners();
                    this.updateClientData();
                    this.actionService.enqueueAction({ thisArg: this, containerPortId: this.containerActionReference(), actionId: "btnServerside", actionType: "click", responseType: 'actions', submitUrl: "/dropins/dibExamples/Action/reloadContainer", itemAlias: "btnServerside", waitForCompletion: false, containerName: "dibexActionReloadContainer", handlers: [] }, this.clientData, { itemEventId: 'ie361-dib', itemId: '6595', });
                    this.actionService.enqueueAction({ thisArg: this, containerPortId: this.containerActionReference(), actionId: "btnClientside", actionType: "click", responseType: 'actions', submitUrl: "shared.action.reload-container?containerName=dibexActionReloadContainer", itemAlias: "btnClientside", waitForCompletion: false, containerName: "dibexActionReloadContainer", handlers: [] }, this.clientData, { itemEventId: 'ie360-dib', itemId: '6594', });
                    let lists = {};
                    let self = this;
                    lists = this.lists;
                    this.tableDataSource.data = [];
                    this.resetPage();
                    this.gridForm = this.formBuilder.group({ gridRows: this.formBuilder.array([]) });
                    this.setupSubmit();
                    this.setupGridSearchAll();
                    this.selection.changed.pipe().subscribe(c => {
                        this.updateSelectionClientData(c);
                        if (this.gridShowDuplicatesInClipboard) {
                            this.selectionDataSource.data = c.source.selected;
                        }
                        else {
                            this.selectionDataSource.data = this.selectedDataNotInPage(c.source.selected);
                        }
                    });
                    this.columnHeaders.addArray('1', new shared_3.DibArray(['hdrActions', 'id', 'name', 'start_date', 'phone', 'email', 'address', 'city_town', 'updated', 'country']));
                }
                ngAfterViewInit() { super.ngAfterViewInit(); window.dispatchEvent(new Event('resize')); this.setupService(); this.setupDelete(); this.reloadContainer(); this.clientData.selected_self = null; this.updateSearchFromUrl(); }
                toggleExcelEditing() { this.excelEditing = !this.excelEditing; this.editorOpen = true; if (this.excelEditing) {
                    this.editorOpen = false;
                    this.gridForm.controls.gridRows.controls.forEach((control) => { if (this.gridExcelEditingAutoSave && control.get('__new').value !== true) {
                        control.valueChanges.pipe(operators_1.takeWhile(() => this.excelEditing)).subscribe((row, x) => { if (control.pristine == false) {
                            this.submit$.next(control);
                        } });
                    } });
                }
                else {
                    this.gridForm.controls.gridRows.controls.forEach((control) => { control.get('__edit').setValue(false); });
                } }
                editRow(row) { if (this.gridExcelEditingEnabled || row.get('__edit').value == true) {
                    this.submit$.next(row);
                    this.editorOpen = false;
                }
                else {
                    this.gridForm.controls.gridRows.controls.forEach((control) => { if (control.get('__edit').value == true) {
                        this.submit$.next(control);
                    } });
                    this.editorOpen = true;
                    row.get('__edit').setValue(!row.get('__edit').value);
                } }
                checkIfNewRecord() {
                    let newRecord = true;
                    if (!(this.gridData.length == 0 || this.gridData[0].__new !== true)) {
                        newRecord = false;
                        this.gridData.shift();
                    }
                    return newRecord;
                }
                inlineAddNewRow() {
                    const newRecord = this.checkIfNewRecord();
                    if (!newRecord) {
                        this.addDataToGrid(false, false);
                        this.handleSelectionOnPage();
                        return;
                    }
                    if (this.selection.selected.length == 0) {
                        this.addDataToGrid(newRecord, false);
                        this.handleSelectionOnPage();
                        return;
                    }
                    this.messagingService.confirm({ title: this.translationService.translate('grid.duplicateSelected.title', 'Duplicate selected record'), message: this.translationService.translate('grid.duplicateSelected.message', `Use the selected records content for your new entry?`), okText: this.translationService.translate('grid.duplicateSelected.okText', 'Use selected record'), cancelText: this.translationService.translate('grid.duplicateSelected.cancelText', 'Create blank') }).then((result) => { this.addDataToGrid(true, result); });
                }
                setupSubmit() {
                    this.submit$ = new rxjs_1.Subject();
                    var self = this;
                    this.submit$.pipe(operators_1.takeUntil(this.onDestroy), operators_1.tap((formGroup) => { self.editFormGroup = formGroup; this.busy = true; return formGroup; }), operators_1.switchMap(() => { let primaryKeys = {}; this.view.primaryKeys.forEach((key) => { primaryKeys[key] = self.editFormGroup.get(key).value; }); return this.crudService.update(this.model.crudUrl, this.view.container.name, { primaryKeys: self.editFormGroup.value.__new == true ? null : primaryKeys, clientData: this.clientData, activeFilter: this.view.container.activeFilter, model: this.model, formGroup: self.editFormGroup, }); }), operators_1.tap(response => {
                        if (response.message == "No changes were made to existing database values.") {
                            this.busy = false;
                            self.editFormGroup.get('__edit').setValue(false);
                            self.editFormGroup.markAsPristine();
                            this.model.$formGroup.markAsPristine();
                        }
                        if (response.success == false) {
                            this.busy = false;
                            this.editorOpen = true;
                        }
                        if (response.success) {
                            this.busy = false;
                            self.editFormGroup.markAsPristine();
                            if (self.editFormGroup.value.__new == true) {
                                self.editFormGroup.controls.__new.setValue(false);
                                Object.keys(response.records).forEach((key) => { if (!!self.editFormGroup.controls[key] == true) {
                                    self.editFormGroup.controls[key].setValue(response.records[key]);
                                } });
                                Object.keys(self.editFormGroup.controls).forEach((key) => {
                                    if (typeof self.editFormGroup.controls[key].value == 'object') {
                                        if (!!self.editFormGroup.controls[key].value.id == true) {
                                            this.gridData[0][key] = self.editFormGroup.controls[key].value.id;
                                            this.gridData[0][`${key}_display_value`] = self.editFormGroup.controls[key].value.id_display_value;
                                        }
                                        this.gridData[0][key] = self.editFormGroup.controls[key].value;
                                    }
                                    else {
                                        this.gridData[0][key] = self.editFormGroup.controls[key].value;
                                    }
                                });
                                this.gridData[0].__new = false;
                                if (this.gridExcelEditingAutoSave) {
                                    this.excelEditing = false;
                                    this.toggleExcelEditing();
                                }
                            }
                            self.editFormGroup.get('__edit').setValue(!self.editFormGroup.get('__edit').value);
                            if (this.view.recordStatus == 'create') { }
                            else { }
                            this.model.$formGroup.markAsPristine();
                        }
                        else {
                            if (this.view.recordStatus == 'create') { }
                            else { }
                        }
                    }), operators_1.finalize(() => this.busy = false)).subscribe();
                }
                rowClick(row, e) {
                    if (!!e.srcElement.firstChild && !!e.srcElement.firstChild.attributes && !!e.srcElement.firstChild.attributes.type && e.srcElement.firstChild.attributes.type.value == 'checkbox') {
                        return;
                    }
                    if (e.srcElement && ["button", "a", "mat-icon", "dib-icon"].includes(e.srcElement.tagName.toLocaleLowerCase())) {
                        return;
                    }
                    if (this.gridRowClickChangesSelection)
                        this.selection.toggle(row);
                    if (this.gridClickedLastNullable && !!this.clickedLast && this.compareRows(row, this.clickedLast)) {
                        this.clickedLast = null;
                    }
                    else {
                        this.clickedLast = row;
                    }
                    let lastClickedRawValue = this.clickedLast.getRawValue();
                    if (this.clickedLast !== null) {
                        let lastClickValue = {};
                        Object.keys(this.model.modelItems).forEach(key => { if (!!this.model.modelItems[key].itemAlias == true) {
                            lastClickValue[key] = lastClickedRawValue[key];
                        } });
                        this.clientData.clickedLast_self = lastClickValue;
                    }
                    else {
                        this.clientData.clickedLast_self = null;
                    }
                    this.eventService.emit({ name: `clickedLast_dibexActionReloadContainer`, value: this.clientData.clickedLast_self });
                }
                updateSelectionClientData(selectionChange) {
                    const { selected } = selectionChange.source || [];
                    const firstSelection = selected.length != 0 ? selected[0].getRawValue() : {};
                    if (!selected[0]) {
                        this.clientData.selected_self = null;
                        this.eventService.emit({ name: `selected_dibexActionReloadContainer`, value: this.clientData.selected_self });
                        return;
                    }
                    let cdSelected = this.gridMultiselect ? selected.map(s => {
                        let res = {};
                        this.view.primaryKeys.forEach((key) => { if (!!s.getRawValue()[key]) {
                            res[key] = s.getRawValue()[key];
                        } });
                        return res;
                    }) : this.view.primaryKeys.reduce((res, key) => ({ ...res, [key]: firstSelection[key] }), {});
                    if (Object.keys(cdSelected).length == 0) {
                        cdSelected = selected;
                    }
                    this.clientData.selected_self = cdSelected;
                    this.eventService.emit({ name: `selected_dibexActionReloadContainer`, value: cdSelected });
                }
                deleteSelected() {
                    if (this.clientData.selected_self == null) {
                        this.messagingService.alert({ title: 'No records selected', message: 'Please select a record and try again.', okText: 'Okay' });
                        return;
                    }
                    if (Object.keys(this.clientData.selected_self).length == 0) {
                        this.messagingService.alert({ title: 'No records selected', message: 'Please select a record and try again.', okText: 'Okay' });
                        return;
                    }
                    this.messagingService.confirm({ title: 'Delete Selected Record', message: 'Are you sure you want to delete?', okText: 'Yes', cancelText: 'Cancel' }).then(result => { if (result !== false) {
                        this.delete$.next(null);
                    } });
                }
                setupDelete() { this.delete$ = new rxjs_1.Subject(); this.delete$.pipe(operators_1.takeUntil(this.onDestroy), operators_1.tap(() => { this.busy = true; }), operators_1.switchMap(() => { let primaryKeys = {}; this.view.primaryKeys.forEach(key => { if (this.clientData.selected_self[key] !== undefined) {
                    primaryKeys[key] = this.clientData.selected_self[key];
                } }); return this.crudService.delete(this.model.crudUrl, this.view.container.name, { primaryKeys: primaryKeys, clientData: this.clientData, activeFilter: this.view.container.activeFilter, }).pipe(operators_1.finalize(() => this.busy = false)); }), operators_1.tap(response => { if (response.success) {
                    this.clearSelection();
                    this.clearClientDataSelection();
                    this.reloadContainer();
                } })).subscribe(); }
                setupService() {
                    this.sort.sortChange.pipe(operators_1.takeUntil(this.onDestroy), operators_1.tap((sort) => { this.page$.next(this.page); })).subscribe();
                    this.page$.pipe(operators_1.tap(page => { this.page = page; this.busy = true; }), operators_1.takeUntil(this.onDestroy), operators_1.tap(page => { this.clearClientDataSelection(); if (this.showSearch) {
                        this.clientData.gridFilter_self = this.allClientData.gridFilter;
                        this.eventService.emit({ name: `gridFilter_${this.view.container.name}`, value: this.clientData.gridFilter_self });
                    }
                    else {
                        delete this.clientData.gridFilter_self;
                        this.eventService.emit({ name: `gridFilter_${this.view.container.name}`, value: null });
                    } }), operators_1.switchMap((page) => { const sort = this.sort.direction == '' ? [] : [{ "property": this.sort.active, "direction": this.sort.direction.toUpperCase() }]; return this.crudService.list(this.model.crudUrl, this.view.container.name, { page: { number: page.pageIndex + 1, limit: page.pageSize }, searchText: null, sort: sort, filter: this.filter, clientData: this.clientData, activeFilter: this.view.container.activeFilter }).pipe(operators_1.catchError((err) => { this.busy = false; return rxjs_1.of({ success: false, message: `${err}` }); })); }), operators_1.tap((response) => {
                        this.busy = false;
                        window.dispatchEvent(new Event('resize'));
                        if (response.success) {
                            this.tableDataSource.data = [];
                            this.gridData = response.records;
                            if (!!this.gridData === true) {
                                this.addDataToGrid(false, false);
                                this.page.length = Math.ceil(response.filtertotal / this.page.pageSize);
                                this.page.records = response.filtertotal;
                                this.page.totalRecords = response.total;
                                this.page.fromRecord = this.page.pageIndex == 0 ? 1 : (this.page.pageIndex) * this.page.pageSize;
                                this.page.toRecord = this.page.fromRecord == 1 ? this.page.fromRecord + this.tableDataSource.data.length - 1 : this.page.fromRecord + this.tableDataSource.data.length;
                                if (this.page.toRecord > this.page.totalRecords) {
                                    this.page.toRecord = this.page.totalRecords;
                                    this.page.allRecords = true;
                                }
                            }
                            this.handleSelectionOnPage();
                            this.reloadSubcontainers();
                        }
                    }), operators_1.finalize(() => this.busy = false)).subscribe();
                }
                async addDataToGrid(addRow = false, duplicate = false) {
                    const formDefaults = {};
                    let formDefaultsConfigs = {};
                    formDefaultsConfigs['id'] = { contentType: "integer", type: "none", defaultValue: "", listId: 6583 };
                    formDefaultsConfigs['name'] = { contentType: "text", type: "none", defaultValue: "", listId: 6584 };
                    formDefaultsConfigs['start_date'] = { contentType: "date", type: "none", defaultValue: "", listId: 6585 };
                    formDefaultsConfigs['phone'] = { contentType: "text", type: "none", defaultValue: "", listId: 6586 };
                    formDefaultsConfigs['email'] = { contentType: "text", type: "none", defaultValue: "", listId: 6587 };
                    formDefaultsConfigs['address'] = { contentType: "text", type: "none", defaultValue: "", listId: 6588 };
                    formDefaultsConfigs['city_town'] = { contentType: "text", type: "none", defaultValue: "", listId: 6589 };
                    formDefaultsConfigs['country'] = { contentType: "text", type: "none", defaultValue: "", listId: 6590 };
                    formDefaultsConfigs['updated'] = { contentType: "datetime", type: "none", defaultValue: "", listId: 6591 };
                    if (addRow) {
                        this.gridData.reverse();
                        let newRecord = { "__new": true };
                        if (this.canCreate) {
                            try {
                                let result = await this.crudService.defaults(this.model.crudUrl, this.view.container.name, { primaryKeys: null, clientData: this.clientData, activeFilter: this.view.container.activeFilter, canCreate: this.canCreate }).pipe(operators_1.catchError((err) => { this.busy = false; return rxjs_1.of({ success: false, message: `${err}` }); }), operators_1.finalize(() => { })).toPromise();
                                Object.keys(formDefaultsConfigs).forEach((key) => { if (!!result.records[key] && !!formDefaultsConfigs[key]) {
                                    formDefaultsConfigs[key].defaultValue = result.records[key];
                                } });
                                await Promise.all(Object.keys(formDefaultsConfigs).map(async (key) => { const value = await this.findDefaultValue(formDefaultsConfigs[key]); formDefaults[key] = value; }));
                            }
                            catch (error) { }
                        }
                        if (duplicate && this.selection.selected.length > 0) {
                            const currentSelected = this.selection.selected[0].value;
                            Object.keys(currentSelected).forEach((key) => {
                                let dataType = 'string';
                                if (key.indexOf("__") !== 0) {
                                    if (!!this.model.modelItems[key]) {
                                        dataType = this.model.modelItems[key].type;
                                    }
                                    if (dataType == 'select') {
                                        newRecord[key] = !!currentSelected[key] == true ? currentSelected[key].id : null;
                                        newRecord[`${key}_display_value`] = !!currentSelected[key] == true ? currentSelected[key].id_display_value : '';
                                    }
                                    else if (dataType == 'boolean') {
                                        newRecord[key] = !!currentSelected[key] == true ? 1 : 0;
                                    }
                                    else {
                                        newRecord[key] = currentSelected[key];
                                    }
                                }
                            });
                            this.handleSelectionOnPage();
                        }
                        this.gridData.push(newRecord);
                        this.editorOpen = true;
                        this.gridData.reverse();
                    }
                    this.excelEditing = false;
                    this.busy = true;
                    this.gridForm = this.formBuilder.group({ gridRows: this.formBuilder.array(this.gridData.map((row) => { const rowFormGroup = this.formBuilder.group({ __edit: (row.__new == true) ? new forms_2.FormControl(true) : new forms_2.FormControl(false), __new: (row.__new == true) ? new forms_2.FormControl(true) : new forms_2.FormControl(false), id: new forms_2.FormControl(this.calculateInitialColumnValue(row, "id", "none", true, formDefaults['id'], 6583, "number"), { validators: [], updateOn: 'blur' }), name: new forms_2.FormControl(this.calculateInitialColumnValue(row, "name", "none", false, formDefaults['name'], 6584, "text"), { validators: [], updateOn: 'blur' }), start_date: new forms_2.FormControl(this.calculateInitialColumnValue(row, "start_date", "none", false, formDefaults['start_date'], 6585, "date"), { validators: [], updateOn: 'blur' }), phone: new forms_2.FormControl(this.calculateInitialColumnValue(row, "phone", "none", false, formDefaults['phone'], 6586, "text"), { validators: [], updateOn: 'blur' }), email: new forms_2.FormControl(this.calculateInitialColumnValue(row, "email", "none", false, formDefaults['email'], 6587, "text"), { validators: [], updateOn: 'blur' }), address: new forms_2.FormControl(this.calculateInitialColumnValue(row, "address", "none", false, formDefaults['address'], 6588, "text"), { validators: [], updateOn: 'blur' }), city_town: new forms_2.FormControl(this.calculateInitialColumnValue(row, "city_town", "none", false, formDefaults['city_town'], 6589, "text"), { validators: [], updateOn: 'blur' }), country: new forms_2.FormControl(this.calculateInitialColumnValue(row, "country", "none", false, formDefaults['country'], 6590, "text"), { validators: [], updateOn: 'blur' }), updated: new forms_2.FormControl(this.calculateInitialColumnValue(row, "updated", "none", false, formDefaults['updated'], 6591, "datetime"), { validators: [], updateOn: 'blur' }), }); return rowFormGroup; })) });
                    const gridFormControls = this.gridForm.get('gridRows').controls;
                    gridFormControls.forEach((formGroup) => { });
                    this.tableDataSource = new table_1.MatTableDataSource(this.gridForm.get('gridRows').controls);
                    this.busy = false;
                    this.tableDataSource
                        .connect().pipe(operators_1.takeWhile(() => !this.busy), operators_1.tap(_ => { const selected = this.selection.selected; this.selection._emitChanges = false; this.selection.deselect(...this.selection.selected.filter(s => !!this.tableDataSource.data.find(d => this.compareRows(s, d)))); this.selection.select(...this.tableDataSource.data.filter(d => !!selected.find(s => this.compareRows(s, d)))); this.selection._emitChanges = true; if (this.gridExcelEditingEnabled == true) {
                        this.toggleExcelEditing();
                    } })).subscribe();
                    if (this.gridShowDuplicatesInClipboard) {
                        this.selectionDataSource.data = this.selection.selected;
                    }
                    else {
                        this.selectionDataSource.data = this.selectedDataNotInPage(this.selection.selected);
                    }
                }
                ngOnDestroy() {
                    super.ngOnDestroy();
                    if (this.model !== undefined) {
                        this.model.destroy();
                    }
                    this.actionService.dequeueActionsForContainer(this.containerActionReference());
                }
                onSubmit() { }
                reloadContainer(reloadOptions) {
                    super.reloadContainer(reloadOptions);
                    if (!this.canReloadContainer(reloadOptions)) {
                        this.reloadSubcontainers();
                        return;
                    }
                    const self = this;
                    this.model.updateFormDefaults(this, (columnName) => {
                        if (self.columnsToDisplay !== undefined && self.columnsToDisplay.get().indexOf(columnName) !== -1) {
                            return true;
                        }
                        return false;
                    });
                    if (!!this.view.container.activeFilter === true) {
                        this.clientData.activeFilter_self = this.view.container.activeFilter;
                    }
                    this.portService.setUrlDefaults(true, this);
                    this.eventService.emit({ name: 'onReloaddibexActionReloadContainer', value: this });
                    this.eventService.emit({ name: 'OnReloadContainer', value: 'dibexActionReloadContainer' });
                    this.resetPage();
                    this.applySearchFromUrl();
                    this.page$.next(this.page);
                }
                resetPage() {
                    this.page = { number: 1, length: 0, pageSize: 20, pageIndex: 0, lastLoad: 1, totalRecords: 0, allRecords: false };
                    this.page.allRecords = false;
                    if (!this.gridPersistSelection) {
                        this.selection.clear();
                    }
                    if (!!this.paginator) {
                        this.paginator._intl.itemsPerPageLabel = '';
                        this.paginator.pageSize = this.page.pageSize;
                        this.paginator.firstPage();
                    }
                }
                static ɵfac = function dibexActionReloadContainerComponent_Factory(t) { return new (t || dibexActionReloadContainerComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.CrudService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.FormBuilder)); };
                static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: dibexActionReloadContainerComponent, selectors: [["dibex-action-reload-container"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 91, vars: 45, consts: [[2, "display", "flex", "flex-direction", "column", "align-items", "stretch", 3, "formGroup", "ngClass", "ngSubmit"], [2, "display", "flex", "flex-direction", "column", "align-items", "stretch"], ["id", "ci6592", "dibComponent", "subcontainer", 2, "flex", "1 1 0%"], ["parentContainerName", "dibexActionReloadContainer", "subContainerName", "dibDocsExampleHtml", "subContainerId", "172", "dropinName", "iframe", 3, "dibPort"], ["id", "ci6593", "dibComponent", "section", 2, "width", "500px !important", "flex", "1 1 0%"], [2, "display", "flex", "flex-direction", "row", "gap", "15px"], ["mat-raised-button", "", "color", "primary", "id", "ci6595", "dibComponent", "button", "dibListeners", "", "eventList", "  click ", "actionId", "btnServerside", "type", "button", 2, "width", "200px !important", 3, "containerPortId"], [1, "dibButtonCaption"], ["mat-raised-button", "", "color", "primary", "id", "ci6594", "dibComponent", "button", "dibListeners", "", "eventList", "  click ", "actionId", "btnClientside", "type", "button", 2, "width", "200px !important", 3, "containerPortId"], ["id", "ci6569", "dibComponent", "row", "dib-inject-content", "replace", 2, "display", "flex", "flex-direction", "row", "justify-content", "flex-start", "align-items", "center", "gap", "10px 10px", "flex-wrap", "wrap", "align-content", "flex-start"], [3, "dibPort"], ["mat-mini-fab", "", "color", "primary", "id", "ci6579", "dibComponent", "btnReload", "aria-label", "Reload Record(s)", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/reload.svg"], ["mat-mini-fab", "", "color", "accent", "id", "ci6578", "dibComponent", "btnGridDelete", "aria-label", "Delete selected record(s)", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/delete.svg"], ["mat-raised-button", "", "color", "primary", "id", "ci6573", "dibComponent", "button", "type", "button"], ["mat-raised-button", "", "color", "primary", "id", "ci6574", "dibComponent", "button", "type", "button"], ["id", "ci6572", "dibComponent", "span", 2, "flex", "0 1 200px", 3, "innerHtml"], ["mat-mini-fab", "", "color", "accent", "id", "ci6575", "dibComponent", "btnFilterOpen", "aria-label", "Display headers for filtering records", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/search.svg"], ["mat-mini-fab", "", "color", "accent", "id", "ci6576", "dibComponent", "btnFilterApply", "style", "  ", "aria-label", "Apply filter criteria specified in column headers", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click", 4, "ngIf"], ["mat-mini-fab", "", "color", "accent", "id", "ci6577", "dibComponent", "btnFilterClear", "style", "  ", "aria-label", "Show all records and clear filter criteria", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click", 4, "ngIf"], ["id", "ci6570", "dibComponent", "spacer", 2, "flex", "1 1 0%"], ["id", "ci6571", "dibComponent", "gridTotals", "style", "  display:flex; flex-direction: row;  flex-wrap: nowrap;  ", 4, "ngIf"], ["id", "ci6580", "dibComponent", "card", 2, "flex", "1 1 0%"], [2, "display", "flex", "flex-direction", "column", "flex-wrap", "nowrap"], ["fill-height", "", "debounceTime", "300", 3, "additionalSpace", "footerElement"], ["gridScroll", ""], ["autocomplete", "off", 3, "formGroup"], ["formArrayName", "gridRows"], ["mat-table", "", "matSort", "", 1, "dib-inline-editing", 3, "dataSource"], ["matColumnDef", "_select"], ["mat-header-cell", "", "style", "width:80px", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "hdrActions"], ["mat-cell", "", "style", "padding: 2px; ", 3, "formGroup", 4, "matCellDef"], ["mat-header-cell", "", "style", "padding:2px; text-align:left; vertical-align:top; ", 4, "matHeaderCellDef"], ["matColumnDef", "id"], ["matColumnDef", "name"], ["matColumnDef", "start_date"], ["matColumnDef", "phone"], ["matColumnDef", "email"], ["matColumnDef", "address"], ["matColumnDef", "city_town"], ["matColumnDef", "country"], ["matColumnDef", "updated"], ["matColumnDef", "_dibBusy"], ["mat-header-cell", "", "style", "height:4px", 4, "matHeaderCellDef"], ["matColumnDef", "_dibNoRecords"], ["mat-header-cell", "", "class", "dib-no-records-found", 4, "matHeaderCellDef"], [4, "ngFor", "ngForOf"], ["mat-header-row", "", "class", "dib-grid-loader", 3, "ngStyle", 4, "matHeaderRowDef"], ["mat-row", "", 3, "formGroup", "ngClass", "click", 4, "matRowDef", "matRowDefColumns"], [4, "ngIf"], ["footerdibexActionReloadContainer", ""], ["_selectedTable", ""], ["mat-mini-fab", "", "color", "accent", "id", "ci6576", "dibComponent", "btnFilterApply", "aria-label", "Apply filter criteria specified in column headers", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/applyFilters.svg"], ["mat-mini-fab", "", "color", "accent", "id", "ci6577", "dibComponent", "btnFilterClear", "aria-label", "Show all records and clear filter criteria", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/cancelFilters.svg"], ["id", "ci6571", "dibComponent", "gridTotals", 2, "display", "flex", "flex-direction", "row", "flex-wrap", "nowrap"], ["mat-header-cell", "", 2, "width", "80px"], ["color", "primary", 3, "checked", "indeterminate", "click"], ["mat-cell", ""], ["color", "primary", 3, "checked", "click", "change"], ["mat-cell", "", 2, "padding", "2px", 3, "formGroup"], ["dibComponent", "columnHeader", 2, "flex", "1 1 0%"], ["mat-header-cell", "", 2, "padding", "2px", "text-align", "left", "vertical-align", "top"], [2, "display", "flex", "flex-direction", "row", "justify-content", "space-between", "align-items", "stretch"], [1, "dib-cell"], ["style", "flex: 1 1 0%", 4, "ngIf"], [2, "flex", "1 1 0%"], ["dibComponent", "inputNumber"], ["matInput", "", "type", "number", "formControlName", "id", "name", "id"], ["class", "dib_form_input_done", "matSuffix", "", 3, "click", 4, "ngIf"], ["class", "dib_form_input_done_all", "matSuffix", "", 4, "ngIf"], ["class", "dib_form_input_priority_high", "matSuffix", "", 4, "ngIf"], ["matSuffix", "", 1, "dib_form_input_done", 3, "click"], ["matSuffix", "", 1, "dib_form_input_done_all"], ["matSuffix", "", 1, "dib_form_input_priority_high"], [1, "dibGridSearch", 2, "display", "flex", "flex-direction", "column"], ["mat-sort-header", "", 4, "ngIf"], ["mat-sort-header", "", "class", "dibGridSearchTitle", 4, "ngIf"], ["class", "dibGridSearchInput", "dib-edit", "", 3, "formGroup", 4, "ngIf"], ["mat-sort-header", ""], ["mat-sort-header", "", 1, "dibGridSearchTitle"], ["dib-edit", "", 1, "dibGridSearchInput", 3, "formGroup"], ["id", "ci6583", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "id", "name", "id", 3, "keydown.enter", "keydown.esc"], ["dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "name", "name", "name", 3, "keydown.enter", "keydown.esc"], ["id", "ci6584", "dibComponent", "inputText"], ["dibComponent", "datePicker"], ["matInput", "", "formControlName", "start_date", "name", "start_date", 3, "matDatepicker", "focus", "keydown.enter", "keydown.esc"], ["matPrefix", "", 3, "for"], ["datePicker6585", ""], ["id", "ci6585", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "start_date", "name", "start_date", 3, "keydown.enter", "keydown.esc"], ["matInput", "", "type", "text", "formControlName", "phone", "name", "phone", 3, "keydown.enter", "keydown.esc"], ["id", "ci6586", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "email", "name", "email", 3, "keydown.enter", "keydown.esc"], ["id", "ci6587", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "address", "name", "address", 3, "keydown.enter", "keydown.esc"], ["id", "ci6588", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "city_town", "name", "city_town", 3, "keydown.enter", "keydown.esc"], ["id", "ci6589", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "country", "name", "country", 3, "keydown.enter", "keydown.esc"], ["id", "ci6590", "dibComponent", "inputText"], ["dibComponent", "timeDatePicker"], ["matInput", "", "formControlName", "updated", "name", "updated", 3, "ngxMatDatetimePicker", "keydown.enter", "keydown.esc"], ["picker6591", ""], ["id", "ci6591", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "updated", "name", "updated", 3, "keydown.enter", "keydown.esc"], ["mat-header-cell", "", 2, "height", "4px"], ["mode", "indeterminate", 4, "ngIf"], ["mode", "indeterminate"], ["mat-header-cell", "", 1, "dib-no-records-found"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-header-row", ""], ["mat-header-row", "", 1, "dib-grid-loader", 3, "ngStyle"], ["mat-row", "", 3, "formGroup", "ngClass", "click"], [3, "ngTemplateOutlet"], [1, "grid-footer"], ["class", "mat-body", "matTooltip", "Clear all", "position", "above", "color", "primary", 3, "checked", "click", 4, "ngIf"], ["mat-button", "", 3, "click", 4, "ngIf"], [2, "flex", "1 1 auto"], ["style", "background: none", 3, "length", "pageSize", "pageSizeOptions", "page", 4, "ngIf"], ["matTooltip", "Clear all", "position", "above", "color", "primary", 1, "mat-body", 3, "checked", "click"], ["mat-button", "", 3, "click"], [2, "background", "none", 3, "length", "pageSize", "pageSizeOptions", "page"], ["paginator", ""], ["mat-table", "", 1, "", 2, "margin-top", "1rem", 3, "dataSource"], ["mat-cell", "", "style", "width:80px", 4, "matCellDef"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-row", "", 3, "ngClass", "click", 4, "matRowDef", "matRowDefColumns"], ["matInput", "", "type", "number", "formControlName", "id", "name", "id", 3, "keydown.enter", "keydown.esc"], ["color", "primary", 3, "checked", "indeterminate", "change"], ["mat-cell", "", 2, "width", "80px"], ["mat-header-cell", ""], ["mat-row", "", 3, "ngClass", "click"]], template: function dibexActionReloadContainerComponent_Template(rf, ctx) { if (rf & 1) {
                        i0.ɵɵelementStart(0, "form", 0);
                        i0.ɵɵlistener("ngSubmit", function dibexActionReloadContainerComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });
                        i0.ɵɵelementStart(1, "div", 1)(2, "div", 2);
                        i0.ɵɵelementContainer(3, 3);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(4, "mat-card", 4)(5, "mat-card-header")(6, "mat-card-title");
                        i0.ɵɵtext(7, "Reload Container Buttons");
                        i0.ɵɵelementEnd()();
                        i0.ɵɵelementStart(8, "mat-card-content", 5)(9, "button", 6)(10, "span", 7);
                        i0.ɵɵtext(11, "Server-side Button");
                        i0.ɵɵelementEnd()();
                        i0.ɵɵelementStart(12, "button", 8)(13, "span", 7);
                        i0.ɵɵtext(14, "Client-side Button");
                        i0.ɵɵelementEnd()()()();
                        i0.ɵɵelementStart(15, "div", 9);
                        i0.ɵɵelementContainerStart(16, 10);
                        i0.ɵɵelementStart(17, "button", 11);
                        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_Template_button_click_17_listener() { return ctx.reloadContainer(); });
                        i0.ɵɵelement(18, "dib-icon", 12);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(19, "button", 13);
                        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_Template_button_click_19_listener() { return ctx.deleteSelected(); });
                        i0.ɵɵelement(20, "dib-icon", 14);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(21, "button", 15)(22, "span", 7);
                        i0.ɵɵtext(23, "Do Nothing");
                        i0.ɵɵelementEnd()();
                        i0.ɵɵelementStart(24, "button", 16)(25, "span", 7);
                        i0.ɵɵtext(26, "Do Nothing");
                        i0.ɵɵelementEnd()();
                        i0.ɵɵelement(27, "span", 17);
                        i0.ɵɵpipe(28, "safeHtml");
                        i0.ɵɵelementStart(29, "button", 18);
                        i0.ɵɵlistener("click", function dibexActionReloadContainerComponent_Template_button_click_29_listener() { return ctx.toggleSearch(); });
                        i0.ɵɵelement(30, "dib-icon", 19);
                        i0.ɵɵelementEnd();
                        i0.ɵɵtemplate(31, dibexActionReloadContainerComponent_button_31_Template, 2, 4, "button", 20);
                        i0.ɵɵtemplate(32, dibexActionReloadContainerComponent_button_32_Template, 2, 4, "button", 21);
                        i0.ɵɵelement(33, "span", 22);
                        i0.ɵɵtemplate(34, dibexActionReloadContainerComponent_div_34_Template, 5, 3, "div", 23);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(35, "mat-card", 24)(36, "mat-card-content", 25);
                        i0.ɵɵelementContainerStart(37, 10);
                        i0.ɵɵelementStart(38, "div", 26, 27)(40, "form", 28);
                        i0.ɵɵelementContainerStart(41, 29);
                        i0.ɵɵelementStart(42, "table", 30);
                        i0.ɵɵelementContainerStart(43, 31);
                        i0.ɵɵtemplate(44, dibexActionReloadContainerComponent_th_44_Template, 2, 2, "th", 32);
                        i0.ɵɵtemplate(45, dibexActionReloadContainerComponent_td_45_Template, 2, 1, "td", 33);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(46, 34);
                        i0.ɵɵtemplate(47, dibexActionReloadContainerComponent_td_47_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(48, dibexActionReloadContainerComponent_th_48_Template, 1, 0, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(49, 37);
                        i0.ɵɵtemplate(50, dibexActionReloadContainerComponent_td_50_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(51, dibexActionReloadContainerComponent_th_51_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(52, 38);
                        i0.ɵɵtemplate(53, dibexActionReloadContainerComponent_td_53_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(54, dibexActionReloadContainerComponent_th_54_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(55, 39);
                        i0.ɵɵtemplate(56, dibexActionReloadContainerComponent_td_56_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(57, dibexActionReloadContainerComponent_th_57_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(58, 40);
                        i0.ɵɵtemplate(59, dibexActionReloadContainerComponent_td_59_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(60, dibexActionReloadContainerComponent_th_60_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(61, 41);
                        i0.ɵɵtemplate(62, dibexActionReloadContainerComponent_td_62_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(63, dibexActionReloadContainerComponent_th_63_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(64, 42);
                        i0.ɵɵtemplate(65, dibexActionReloadContainerComponent_td_65_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(66, dibexActionReloadContainerComponent_th_66_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(67, 43);
                        i0.ɵɵtemplate(68, dibexActionReloadContainerComponent_td_68_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(69, dibexActionReloadContainerComponent_th_69_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(70, 44);
                        i0.ɵɵtemplate(71, dibexActionReloadContainerComponent_td_71_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(72, dibexActionReloadContainerComponent_th_72_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(73, 45);
                        i0.ɵɵtemplate(74, dibexActionReloadContainerComponent_td_74_Template, 2, 2, "td", 35);
                        i0.ɵɵtemplate(75, dibexActionReloadContainerComponent_th_75_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(76, 46);
                        i0.ɵɵtemplate(77, dibexActionReloadContainerComponent_th_77_Template, 2, 2, "th", 47);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(78, 48);
                        i0.ɵɵtemplate(79, dibexActionReloadContainerComponent_th_79_Template, 2, 2, "th", 49);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵtemplate(80, dibexActionReloadContainerComponent_ng_container_80_Template, 3, 3, "ng-container", 50);
                        i0.ɵɵtemplate(81, dibexActionReloadContainerComponent_tr_81_Template, 1, 3, "tr", 51);
                        i0.ɵɵtemplate(82, dibexActionReloadContainerComponent_tr_82_Template, 1, 3, "tr", 51);
                        i0.ɵɵtemplate(83, dibexActionReloadContainerComponent_tr_83_Template, 1, 4, "tr", 52);
                        i0.ɵɵpipe(84, "async");
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementEnd();
                        i0.ɵɵtemplate(85, dibexActionReloadContainerComponent_85_Template, 1, 1, null, 53);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(86, "div", null, 54);
                        i0.ɵɵtemplate(88, dibexActionReloadContainerComponent_mat_toolbar_88_Template, 6, 3, "mat-toolbar", 53);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementEnd()()()();
                        i0.ɵɵtemplate(89, dibexActionReloadContainerComponent_ng_template_89_Template, 40, 4, "ng-template", null, 55, i0.ɵɵtemplateRefExtractor);
                    } if (rf & 2) {
                        const _r33 = i0.ɵɵreference(87);
                        i0.ɵɵproperty("formGroup", ctx.model.$formGroup)("ngClass", i0.ɵɵpureFunction1(41, _c3, ctx.view.debug));
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("dibPort", "6592");
                        i0.ɵɵadvance(6);
                        i0.ɵɵproperty("containerPortId", ctx.containerActionReference());
                        i0.ɵɵattribute("aria-label", "Server-side Button");
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("containerPortId", ctx.containerActionReference());
                        i0.ɵɵattribute("aria-label", "Client-side Button");
                        i0.ɵɵadvance(4);
                        i0.ɵɵproperty("dibPort", "6569");
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matTooltip", "Reload Record(s)")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("matTooltip", "Delete selected record(s)")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
                        i0.ɵɵadvance(2);
                        i0.ɵɵattribute("aria-label", "Do Nothing");
                        i0.ɵɵadvance(3);
                        i0.ɵɵattribute("aria-label", "Do Nothing");
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("innerHtml", i0.ɵɵpipeBind1(28, 37, ctx.getHtml("spanGap")), i0.ɵɵsanitizeHtml);
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("matTooltip", "Display headers for filtering records")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("ngIf", ctx.showSearch);
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("ngIf", ctx.showSearch);
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("ngIf", ctx.page.fromRecord > -1);
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("dibPort", "6580");
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("additionalSpace", 5)("footerElement", _r33);
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("formGroup", ctx.gridForm);
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("dataSource", ctx.tableDataSource);
                        i0.ɵɵadvance(38);
                        i0.ɵɵproperty("ngForOf", ctx.columnHeaders.getKeys());
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matHeaderRowDef", i0.ɵɵpureFunction0(43, _c4));
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matHeaderRowDef", i0.ɵɵpureFunction0(44, _c5));
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matRowDefColumns", i0.ɵɵpipeBind1(84, 39, ctx.columnsToDisplay.items$));
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("ngIf", ctx.gridShowClipboardDefault);
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("ngIf", ctx.gridMultiselect || true);
                    } }, dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i4.NgTemplateOutlet, i4.NgStyle, i5.DefaultClassDirective, i5.DefaultStyleDirective, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormArrayName, i2.DibIconComponent, i2.DibPortDirective, i2.DibListenersDirective, i2.DibFillHeightDirective, i2.DibRemoveFocusDirective, i6.NgxMatDatetimepicker, i6.NgxMatDatepickerInput, i7.MatButton, i7.MatMiniFabButton, i8.MatCheckbox, i9.MatDatepicker, i9.MatDatepickerInput, i9.MatDatepickerToggle, i10.MatFormField, i10.MatLabel, i10.MatPrefix, i10.MatSuffix, i11.MatIcon, i12.MatInput, i13.MatProgressBar, i14.MatToolbar, i14.MatToolbarRow, i15.MatTooltip, i16.MatCard, i16.MatCardContent, i16.MatCardHeader, i16.MatCardTitle, i17.MatTable, i17.MatHeaderCellDef, i17.MatHeaderRowDef, i17.MatColumnDef, i17.MatCellDef, i17.MatRowDef, i17.MatHeaderCell, i17.MatCell, i17.MatHeaderRow, i17.MatRow, i18.MatSort, i18.MatSortHeader, i19.MatPaginator, i4.AsyncPipe, i2.SafeHtmlPipe], encapsulation: 2 });
            };
            tslib_1.__decorate([
                shared_2.EventHandler('reloaddibexActionReloadContainer'),
                tslib_1.__metadata("design:type", Function),
                tslib_1.__metadata("design:paramtypes", [Object]),
                tslib_1.__metadata("design:returntype", void 0)
            ], dibexActionReloadContainerComponent.prototype, "reloadContainer", null);
            exports_1("dibexActionReloadContainerComponent", dibexActionReloadContainerComponent);
            (function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(dibexActionReloadContainerComponent, [{
                    type: core_2.Component,
                    args: [{ selector: 'dibex-action-reload-container', template: `
<form style="display:flex; flex-direction:column; align-items:stretch"  [formGroup]="model.$formGroup" (ngSubmit)="onSubmit()" [ngClass]="{ 'dib-editor' : view.debug }"  ><div style="display:flex; flex-direction:column; align-items:stretch"><div   style="  flex: 1 1 0%;  " id=ci6592 dibComponent=subcontainer   ><ng-container [dibPort]="'6592'" parentContainerName=dibexActionReloadContainer  subContainerName=dibDocsExampleHtml  subContainerId=172  dropinName=iframe ></ng-container></div><mat-card   style="  width:500px !important;   flex: 1 1 0%;  " id=ci6593 dibComponent=section  ><mat-card-header ><mat-card-title >Reload Container Buttons</mat-card-title></mat-card-header><mat-card-content   style="  display:flex; flex-direction: row;  gap: 15px;"  ><button  mat-raised-button color=primary  id=ci6595 dibComponent=button  dibListeners eventList="  click " [containerPortId]="containerActionReference()" actionId=btnServerside   style="  width:200px !important;   "  [attr.aria-label]="'Server-side Button'"  type=button  ><span class=dibButtonCaption >Server-side Button</span></button><button  mat-raised-button color=primary  id=ci6594 dibComponent=button  dibListeners eventList="  click " [containerPortId]="containerActionReference()" actionId=btnClientside   style="  width:200px !important;   "  [attr.aria-label]="'Client-side Button'"  type=button  ><span class=dibButtonCaption >Client-side Button</span></button></mat-card-content></mat-card><div   style="  display:flex; flex-direction: row;  justify-content: flex-start;  align-items: center;  gap: 10px 10px;  flex-wrap: wrap; align-content: flex-start;  " id=ci6569 dibComponent=row   dib-inject-content=replace  ><ng-container [dibPort]="'6569'" ><button   mat-mini-fab color=primary  id=ci6579 dibComponent=btnReload   style="  " aria-label="Reload Record(s)"  [matTooltip]="'Reload Record(s)'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   (click)="reloadContainer()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/reload.svg"></dib-icon></button><button mat-mini-fab color=accent  id=ci6578 dibComponent=btnGridDelete   style="  " aria-label="Delete selected record(s)"  [matTooltip]="'Delete selected record(s)'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   (click)="deleteSelected()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/delete.svg"></dib-icon></button><button  mat-raised-button color=primary  id=ci6573 dibComponent=button   style="  "  [attr.aria-label]="'Do Nothing'"  type=button  ><span class=dibButtonCaption >Do Nothing</span></button><button  mat-raised-button color=primary  id=ci6574 dibComponent=button   style="  "  [attr.aria-label]="'Do Nothing'"  type=button  ><span class=dibButtonCaption >Do Nothing</span></button><span  id=ci6572 dibComponent=span   style="  flex: 0 1 200px;  "  [innerHtml]="getHtml('spanGap') | safeHtml" ></span><button mat-mini-fab color=accent  id=ci6575 dibComponent=btnFilterOpen   style="  " aria-label="Display headers for filtering records"  [matTooltip]="'Display headers for filtering records'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   (click)="toggleSearch()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/search.svg"></dib-icon></button><button mat-mini-fab color=accent  id=ci6576 dibComponent=btnFilterApply   style="  " aria-label="Apply filter criteria specified in column headers"  [matTooltip]="'Apply filter criteria specified in column headers'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   *ngIf=showSearch  (click)="searchGrid()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/applyFilters.svg"></dib-icon></button><button mat-mini-fab color=accent  id=ci6577 dibComponent=btnFilterClear   style="  " aria-label="Show all records and clear filter criteria"  [matTooltip]="'Show all records and clear filter criteria'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   *ngIf=showSearch  (click)="clearSearch()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/cancelFilters.svg"></dib-icon></button><span  id=ci6570 dibComponent=spacer   style="  flex: 1 1 0%;  " ></span><div  id=ci6571 dibComponent=gridTotals   style="  display:flex; flex-direction: row;  flex-wrap: nowrap;  "  *ngIf="page.fromRecord > -1" > Action: reload-container: {{page.fromRecord}}<span *ngIf='page.fromRecord>0'>&nbsp;to&nbsp;{{page.toRecord}}&nbsp;of&nbsp;{{page.records}}</span>&nbsp;<span *ngIf='page.totalRecords!=page.records'>(Total: {{page.totalRecords}})</span></div></ng-container></div><mat-card   style="  flex: 1 1 0%;  " id=ci6580 dibComponent=card  ><mat-card-content   style="  display:flex; flex-direction: column;  flex-wrap: nowrap;"  ><ng-container [dibPort]="'6580'" ><!-- <div dib-scroll-pager scrollOffset=50 (nextPage)="nextPage()"> --><div #gridScroll fill-height debounceTime=300  [additionalSpace]=5 [footerElement]="footerdibexActionReloadContainer" ><form [formGroup]="gridForm" autocomplete=off ><ng-container formArrayName=gridRows ><table mat-table [dataSource]="tableDataSource" matSort class="dib-inline-editing "><ng-container matColumnDef=_select ><th mat-header-cell *matHeaderCellDef style = "width:80px"><mat-checkbox  color=primary   (click)="$event.preventDefault();masterToggle()"  [checked]="masterIsChecked"  [indeterminate]="masterIsIndeterminate"  ></mat-checkbox></th><td mat-cell *matCellDef="let row"><mat-checkbox  color=primary   (click)="$event.stopPropagation()"  (change)="$event ? selection.toggle(row) : null"  [checked]="isHighlighted(row)"  ></mat-checkbox></td></ng-container><ng-container matColumnDef=hdrActions  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><div   style="  flex: 1 1 0%;  " dibComponent=columnHeader  ><ng-container [dibPort]="'6582'" ></ng-container></div></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ></th></ng-container><ng-container matColumnDef=id  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'id','none','number')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field  dibComponent=inputNumber   style="  " ><input   matInput  type=number   formControlName=id   name=id   [attr.aria-label]="'Id'" ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('id', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('id', rowForm)" matSuffix >done_all</mat-icon><mat-icon class=dib_form_input_priority_high  *ngIf="isInvalid('id', rowForm)" matSuffix >priority_high</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Id  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Id</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6583 dibComponent=inputText   style="  " ><mat-label >Id</mat-label><input   matInput  type=text   formControlName=id   name=id   [attr.aria-label]="'Id'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('id', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('id', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=name  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'name','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=name   name=name   [attr.aria-label]="'Name'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('name', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('name', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Name  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Name</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6584 dibComponent=inputText   style="  " ><mat-label >Name</mat-label><input   matInput  type=text   formControlName=name   name=name   [attr.aria-label]="'Name'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('name', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('name', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=start_date  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'start_date','none','date')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field  dibComponent=datePicker   style="  " ><input   matInput [matDatepicker]="datePicker6585"   formControlName=start_date   name=start_date   [attr.aria-label]="'Start Date'"  (focus)="datePicker6585.open()"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()'  ><mat-datepicker-toggle matPrefix [for]="datePicker6585" ></mat-datepicker-toggle><mat-datepicker #datePicker6585 ></mat-datepicker><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('start_date', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('start_date', rowForm)" matSuffix >done_all</mat-icon></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Start Date  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Start Date</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6585 dibComponent=inputText   style="  " ><mat-label >Start Date</mat-label><input   matInput  type=text   formControlName=start_date   name=start_date   [attr.aria-label]="'Start Date'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('start_date', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('start_date', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=phone  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'phone','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=phone   name=phone   [attr.aria-label]="'Phone'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('phone', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('phone', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Phone  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Phone</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6586 dibComponent=inputText   style="  " ><mat-label >Phone</mat-label><input   matInput  type=text   formControlName=phone   name=phone   [attr.aria-label]="'Phone'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('phone', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('phone', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=email  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'email','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=email   name=email   [attr.aria-label]="'Email'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('email', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('email', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Email  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Email</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6587 dibComponent=inputText   style="  " ><mat-label >Email</mat-label><input   matInput  type=text   formControlName=email   name=email   [attr.aria-label]="'Email'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('email', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('email', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=address  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'address','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=address   name=address   [attr.aria-label]="'Address'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('address', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('address', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Address  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Address</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6588 dibComponent=inputText   style="  " ><mat-label >Address</mat-label><input   matInput  type=text   formControlName=address   name=address   [attr.aria-label]="'Address'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('address', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('address', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=city_town  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'city_town','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=city_town   name=city_town   [attr.aria-label]="'City Town'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('city_town', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('city_town', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> City Town  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >City Town</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6589 dibComponent=inputText   style="  " ><mat-label >City Town</mat-label><input   matInput  type=text   formControlName=city_town   name=city_town   [attr.aria-label]="'City Town'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('city_town', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('city_town', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=country  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'country','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=country   name=country   [attr.aria-label]="'Country'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('country', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('country', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Country  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Country</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6590 dibComponent=inputText   style="  " ><mat-label >Country</mat-label><input   matInput  type=text   formControlName=country   name=country   [attr.aria-label]="'Country'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('country', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('country', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=updated  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'updated','none','datetime')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field  dibComponent=timeDatePicker   style="  " ><mat-datepicker-toggle matPrefix [for]="picker6591"></mat-datepicker-toggle><input   matInput   [ngxMatDatetimePicker]="picker6591"   formControlName=updated   name=updated   [attr.aria-label]="'Updated'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()'  ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('updated', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('updated', rowForm)" matSuffix >done_all</mat-icon><ngx-mat-datetime-picker #picker6591></ngx-mat-datetime-picker></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Updated  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Updated</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6591 dibComponent=inputText   style="  " ><mat-label >Updated</mat-label><input   matInput  type=text   formControlName=updated   name=updated   [attr.aria-label]="'Updated'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('updated', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('updated', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=_dibBusy ><th mat-header-cell *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length" style="height:4px"><mat-progress-bar *ngIf=busy  mode=indeterminate ></mat-progress-bar></th></ng-container><ng-container matColumnDef=_dibNoRecords ><th mat-header-cell class=dib-no-records-found  *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length"><span *ngIf="!busy && tableDataSource.data.length == 0">{{translate('global.norecordsfound','No Records Found')}}</span></th></ng-container><ng-container *ngFor="let column of columnHeaders.getKeys()"><tr mat-header-row *matHeaderRowDef="(columnHeaders.getArray(column).items$ | async);"></tr></ng-container><tr mat-header-row [ngStyle]="{visibility : busy? 'visible' : 'hidden'}" class=dib-grid-loader  *matHeaderRowDef="['_dibBusy']"></tr><tr mat-header-row [ngStyle]="{visibility : tableDataSource.data.length == 0? 'visible' : 'hidden'}" class=dib-grid-loader  *matHeaderRowDef="['_dibNoRecords']"></tr><tr [formGroup]="model.$formGroup" mat-row [ngClass]="{'dib-grid-selected': isHighlighted(row)}" *matRowDef="let row; columns: (columnsToDisplay.items$ | async); let rowIndex = index;" (click)="rowClick(row, $event)"></tr></table></ng-container></form><ng-template [ngTemplateOutlet]="_selectedTable" *ngIf=gridShowClipboardDefault ></ng-template></div><div #footerdibexActionReloadContainer><mat-toolbar *ngIf="gridMultiselect || true"><mat-toolbar-row class = "grid-footer"><mat-checkbox  class = "mat-body"  matTooltip = "Clear all"  position = "above"  *ngIf=numberOfSelectedItems    color=primary   (click)="$event.preventDefault();clearAll()"  [checked]="true"  > {{numberOfSelectedItems + " "}}item{{numberOfSelectedItems>1?"s ":" "}}selected  </mat-checkbox><button  *ngIf="selectedDataNotInPage().length>0"  mat-button  (click)="gridShowClipboardDefault = !gridShowClipboardDefault; gridShowClipboardDefault&&scrollToBottom()"  ><mat-icon *ngIf="!gridShowClipboardDefault">visibility</mat-icon><mat-icon *ngIf=gridShowClipboardDefault >visibility_off</mat-icon> {{gridShowClipboardDefault?"hide":"show"}}</button><span style ="flex: 1 1 auto"></span><mat-paginator *ngIf=true  #paginator [length]="page.totalRecords" (page)="changePage($event)" style = "background: none"  [pageSize]="page.pageSize"  [pageSizeOptions]="[10, 20, 50, 100]" ></mat-paginator></mat-toolbar-row></mat-toolbar></div></ng-container></mat-card-content></mat-card></div></form><ng-template #_selectedTable ><table style ="margin-top:1rem" mat-table [dataSource]="selectionDataSource" class=""><ng-container matColumnDef=hdrActions  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><div   style="  flex: 1 1 0%;  " dibComponent=columnHeader  ><ng-container [dibPort]="'6582'" ></ng-container></div></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ></th></ng-container><ng-container matColumnDef=id  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'id','none','number')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field  dibComponent=inputNumber   style="  " ><input   matInput  type=number   formControlName=id   name=id   [attr.aria-label]="'Id'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('id', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('id', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Id  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Id</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6583 dibComponent=inputText   style="  " ><mat-label >Id</mat-label><input   matInput  type=text   formControlName=id   name=id   [attr.aria-label]="'Id'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('id', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('id', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=name  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'name','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=name   name=name   [attr.aria-label]="'Name'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('name', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('name', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Name  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Name</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6584 dibComponent=inputText   style="  " ><mat-label >Name</mat-label><input   matInput  type=text   formControlName=name   name=name   [attr.aria-label]="'Name'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('name', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('name', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=start_date  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'start_date','none','date')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field  dibComponent=datePicker   style="  " ><input   matInput [matDatepicker]="datePicker6585"   formControlName=start_date   name=start_date   [attr.aria-label]="'Start Date'"  (focus)="datePicker6585.open()"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()'  ><mat-datepicker-toggle matPrefix [for]="datePicker6585" ></mat-datepicker-toggle><mat-datepicker #datePicker6585 ></mat-datepicker><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('start_date', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('start_date', rowForm)" matSuffix >done_all</mat-icon></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Start Date  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Start Date</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6585 dibComponent=inputText   style="  " ><mat-label >Start Date</mat-label><input   matInput  type=text   formControlName=start_date   name=start_date   [attr.aria-label]="'Start Date'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('start_date', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('start_date', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=phone  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'phone','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=phone   name=phone   [attr.aria-label]="'Phone'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('phone', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('phone', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Phone  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Phone</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6586 dibComponent=inputText   style="  " ><mat-label >Phone</mat-label><input   matInput  type=text   formControlName=phone   name=phone   [attr.aria-label]="'Phone'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('phone', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('phone', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=email  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'email','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=email   name=email   [attr.aria-label]="'Email'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('email', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('email', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Email  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Email</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6587 dibComponent=inputText   style="  " ><mat-label >Email</mat-label><input   matInput  type=text   formControlName=email   name=email   [attr.aria-label]="'Email'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('email', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('email', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=address  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'address','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=address   name=address   [attr.aria-label]="'Address'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('address', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('address', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Address  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Address</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6588 dibComponent=inputText   style="  " ><mat-label >Address</mat-label><input   matInput  type=text   formControlName=address   name=address   [attr.aria-label]="'Address'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('address', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('address', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=city_town  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'city_town','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=city_town   name=city_town   [attr.aria-label]="'City Town'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('city_town', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('city_town', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> City Town  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >City Town</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6589 dibComponent=inputText   style="  " ><mat-label >City Town</mat-label><input   matInput  type=text   formControlName=city_town   name=city_town   [attr.aria-label]="'City Town'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('city_town', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('city_town', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=country  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'country','none','text')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field dibComponent=inputText   style="  " ><input   matInput  type=text   formControlName=country   name=country   [attr.aria-label]="'Country'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('country', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('country', rowForm)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Country  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Country</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6590 dibComponent=inputText   style="  " ><mat-label >Country</mat-label><input   matInput  type=text   formControlName=country   name=country   [attr.aria-label]="'Country'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('country', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('country', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=updated  ><td mat-cell *matCellDef="let rowForm; let rowIndex = index;" [formGroup]="rowForm"  style="padding: 2px; " ><ng-container *ngIf="rowForm.getRawValue() as row"><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch;"><span class=dib-cell    style="   "  ><span style="flex: 1 1 0%" *ngIf="excelEditing == false && rowForm.get('__edit').value === false">   {{findColumnDisplayValue(rowIndex, 'updated','none','datetime')}}</span><span style="flex: 1 1 0%" *ngIf="excelEditing == true || rowForm.get('__edit').value === true"><mat-form-field  dibComponent=timeDatePicker   style="  " ><mat-datepicker-toggle matPrefix [for]="picker6591"></mat-datepicker-toggle><input   matInput   [ngxMatDatetimePicker]="picker6591"   formControlName=updated   name=updated   [attr.aria-label]="'Updated'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()'  ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('updated', rowForm)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('updated', rowForm)" matSuffix >done_all</mat-icon><ngx-mat-datetime-picker #picker6591></ngx-mat-datetime-picker></mat-form-field></span></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></ng-container></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Updated  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Updated</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6591 dibComponent=inputText   style="  " ><mat-label >Updated</mat-label><input   matInput  type=text   formControlName=updated   name=updated   [attr.aria-label]="'Updated'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><mat-icon class=dib_form_input_done  (click)="onSubmit()" *ngIf="view.recordStatus=='update' && notSaved('updated', model.$formGroup)" matSuffix >done</mat-icon><mat-icon class=dib_form_input_done_all  *ngIf="view.recordStatus=='update' && isSaved('updated', model.$formGroup)" matSuffix >done_all</mat-icon><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=_select ><th mat-header-cell *matHeaderCellDef style = "width:80px"><mat-checkbox  color=primary   (change)="$event ? masterToggle($event) : null"  [checked]="masterIsChecked"  [indeterminate]="masterIsIndeterminate"  ></mat-checkbox></th><td mat-cell *matCellDef="let row" style = "width:80px"><mat-checkbox  color=primary   (click)="$event.stopPropagation()"  (change)="$event ? selection.toggle(row) : null"  [checked]="isHighlighted(row)"  ></mat-checkbox></td></ng-container><ng-container matColumnDef=_dibBusy ><th mat-header-cell *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length"><mat-progress-bar *ngIf=busy  mode=indeterminate ></mat-progress-bar></th></ng-container><ng-container matColumnDef=_dibNoRecords ><th mat-header-cell class=dib-no-records-found  *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length"><span *ngIf="!busy && tableDataSource.data.length == 0">{{translate('global.norecordsfound','No Records Found')}}</span></th></ng-container><tr mat-row [ngClass]="{'dib-grid-selected': isHighlighted(row)}" *matRowDef="let row; columns: (columnsToDisplay.items$ | async)" (click)="rowClick(row, $event)"></tr></table></ng-template>
` }]
                }], function () { return [{ type: i0.Injector }, { type: i1.HttpClient }, { type: i0.ChangeDetectorRef }, { type: i2.CrudService }, { type: i0.ViewContainerRef }, { type: i2.ScrollDispatcher }, { type: i0.ChangeDetectorRef }, { type: i3.FormBuilder }]; }, { reloadContainer: [] }); })();
            containerModules = [button_1.MatButtonModule, icon_1.MatIconModule, card_1.MatCardModule, datepicker_1.MatDatepickerModule, core_5.MatNativeDateModule];
            dibexActionReloadContainerModule = class dibexActionReloadContainerModule {
                static entry = dibexActionReloadContainerComponent;
                static ɵfac = function dibexActionReloadContainerModule_Factory(t) { return new (t || dibexActionReloadContainerModule)(); };
                static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: dibexActionReloadContainerModule });
                static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [{ provide: core_3.DateAdapter, useClass: shared_6.DateFnsDateAdapter, deps: [core_3.MAT_DATE_LOCALE] }, { provide: core_3.MAT_DATE_FORMATS, useValue: shared_6.DATEPICKER_FORMATS }], imports: [common_1.CommonModule, shared_5.SharedModule, containerModules, table_2.MatTableModule, sort_1.MatSortModule, paginator_1.MatPaginatorModule] });
            };
            exports_1("default", dibexActionReloadContainerModule);
            (function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(dibexActionReloadContainerModule, [{
                    type: core_4.NgModule,
                    args: [{ imports: [common_1.CommonModule, shared_5.SharedModule, ...containerModules, table_2.MatTableModule, sort_1.MatSortModule, paginator_1.MatPaginatorModule], providers: [{ provide: core_3.DateAdapter, useClass: shared_6.DateFnsDateAdapter, deps: [core_3.MAT_DATE_LOCALE] }, { provide: core_3.MAT_DATE_FORMATS, useValue: shared_6.DATEPICKER_FORMATS }], declarations: [dibexActionReloadContainerComponent], exports: [] }]
                }], null, null); })();
            (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(dibexActionReloadContainerModule, { declarations: [dibexActionReloadContainerComponent], imports: [common_1.CommonModule, shared_5.SharedModule, button_1.MatButtonModule, icon_1.MatIconModule, card_1.MatCardModule, datepicker_1.MatDatepickerModule, core_5.MatNativeDateModule, table_2.MatTableModule, sort_1.MatSortModule, paginator_1.MatPaginatorModule] }); })();
        }
    };
});
