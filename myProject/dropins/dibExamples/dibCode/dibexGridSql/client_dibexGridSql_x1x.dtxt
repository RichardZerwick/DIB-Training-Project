System.register(["tslib", "@angular/core", "@angular/material/table", "shared", "@angular/common/http", "@angular/forms", "@angular/material/core", "rxjs", "rxjs/operators", "@angular/material/sort", "@angular/material/paginator", "@angular/common", "@angular/material/button", "@angular/material/icon", "@angular/material/card", "@angular/material/checkbox", "@ngbracket/ngx-layout/extended", "@angular/material/form-field", "@angular/material/input", "@angular/material/progress-bar", "@angular/material/toolbar", "@angular/material/tooltip"], function (exports_1, context_1) {
    "use strict";
    var tslib_1, core_1, table_1, shared_1, core_2, shared_2, shared_3, http_1, forms_1, core_3, shared_4, rxjs_1, operators_1, table_2, sort_1, paginator_1, core_4, common_1, shared_5, shared_6, button_1, icon_1, card_1, checkbox_1, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, _c0, _c1, _c2, _c3, _c4, _c5, _c6, importsRequired, dibexGridSqlComponent, containerModules, dibexGridSqlModule;
    var __moduleName = context_1 && context_1.id;
    function dibexGridSqlComponent_button_12_Template(rf, ctx) { if (rf & 1) {
        const _r42 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 53);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_button_12_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r42); const ctx_r41 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r41.searchGrid()); });
        i0.ɵɵelement(1, "dib-icon", 54);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("matTooltip", "Apply filter criteria specified in column headers")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
    } }
    function dibexGridSqlComponent_button_13_Template(rf, ctx) { if (rf & 1) {
        const _r44 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 55);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_button_13_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r44); const ctx_r43 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r43.clearSearch()); });
        i0.ɵɵelement(1, "dib-icon", 56);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("matTooltip", "Show all records and clear filter criteria")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
    } }
    function dibexGridSqlComponent_div_15_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r45 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate2("\u00A0to\u00A0", ctx_r45.page.toRecord, "\u00A0of\u00A0", ctx_r45.page.records, "");
    } }
    function dibexGridSqlComponent_div_15_span_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r46 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1("(Total: ", ctx_r46.page.totalRecords, ")");
    } }
    function dibexGridSqlComponent_div_15_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 57);
        i0.ɵɵtext(1);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_div_15_span_2_Template, 2, 2, "span", 50);
        i0.ɵɵtext(3, "\u00A0");
        i0.ɵɵtemplate(4, dibexGridSqlComponent_div_15_span_4_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r2 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" SQL Grid: ", ctx_r2.page.fromRecord, "");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r2.page.fromRecord > 0);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r2.page.totalRecords != ctx_r2.page.records);
    } }
    function dibexGridSqlComponent_th_23_Template(rf, ctx) { if (rf & 1) {
        const _r48 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "th", 58)(1, "mat-checkbox", 59);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_th_23_Template_mat_checkbox_click_1_listener($event) { i0.ɵɵrestoreView(_r48); const ctx_r47 = i0.ɵɵnextContext(); $event.preventDefault(); return i0.ɵɵresetView(ctx_r47.masterToggle()); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r4 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r4.masterIsChecked)("indeterminate", ctx_r4.masterIsIndeterminate);
    } }
    function dibexGridSqlComponent_td_24_Template(rf, ctx) { if (rf & 1) {
        const _r52 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 60)(1, "mat-checkbox", 61);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_td_24_Template_mat_checkbox_click_1_listener($event) { return $event.stopPropagation(); })("change", function dibexGridSqlComponent_td_24_Template_mat_checkbox_change_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r52); const row_r49 = restoredCtx.$implicit; const ctx_r51 = i0.ɵɵnextContext(); return i0.ɵɵresetView($event ? ctx_r51.selection.toggle(row_r49) : null); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r49 = ctx.$implicit;
        const ctx_r5 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r5.selection.isSelected(row_r49));
    } }
    function dibexGridSqlComponent_td_26_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r53 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r53.client_id_display_value, "");
    } }
    function dibexGridSqlComponent_td_26_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r53 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r53.client_id, "");
    } }
    function dibexGridSqlComponent_td_26_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 63);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_td_26_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_td_26_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r53 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r53 && !!row_r53.client_id_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r53 && !row_r53.client_id_display_value);
    } }
    function dibexGridSqlComponent_th_27_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Client ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_27_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Client");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_27_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r63 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 72)(2, "mat-label");
        i0.ɵɵtext(3, "Client");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 73);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_27_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r63); const ctx_r62 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r62.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_27_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r63); const ctx_r64 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r64.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r61 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r61.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Client");
    } }
    function dibexGridSqlComponent_th_27_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_27_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_27_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_27_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r7 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r7.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r7.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r7.showSearch);
    } }
    function dibexGridSqlComponent_td_29_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r65 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r65.name_display_value, "");
    } }
    function dibexGridSqlComponent_td_29_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r65 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r65.name, "");
    } }
    function dibexGridSqlComponent_td_29_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 74);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_td_29_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_td_29_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r65 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("hidden", row_r65.client_id == 3);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r65 && !!row_r65.name_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r65 && !row_r65.name_display_value);
    } }
    function dibexGridSqlComponent_th_30_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Company ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_30_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Company");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_30_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r75 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 75)(2, "mat-label");
        i0.ɵɵtext(3, "Company");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 76);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_30_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r75); const ctx_r74 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r74.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_30_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r75); const ctx_r76 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r76.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r73 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r73.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Company");
    } }
    function dibexGridSqlComponent_th_30_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_30_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_30_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_30_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r9 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r9.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r9.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r9.showSearch);
    } }
    function dibexGridSqlComponent_td_32_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r77 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r77.start_date_display_value, "");
    } }
    function dibexGridSqlComponent_td_32_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r77 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r77.start_date, "");
    } }
    function dibexGridSqlComponent_td_32_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 77);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_td_32_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_td_32_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r77 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r77 && !!row_r77.start_date_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r77 && !row_r77.start_date_display_value);
    } }
    function dibexGridSqlComponent_th_33_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Start Date ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_33_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Start Date");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_33_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r87 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 78)(2, "mat-label");
        i0.ɵɵtext(3, "Start Date");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 79);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_33_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r87); const ctx_r86 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r86.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_33_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r87); const ctx_r88 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r88.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r85 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r85.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Start Date");
    } }
    function dibexGridSqlComponent_th_33_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_33_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_33_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_33_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r11 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r11.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r11.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r11.showSearch);
    } }
    function dibexGridSqlComponent_td_35_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r89 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r89.email_display_value, "");
    } }
    function dibexGridSqlComponent_td_35_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r89 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r89.email, "");
    } }
    function dibexGridSqlComponent_td_35_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_td_35_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_td_35_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r89 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r89 && !!row_r89.email_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r89 && !row_r89.email_display_value);
    } }
    function dibexGridSqlComponent_th_36_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Email ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_36_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Email");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_36_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r99 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 81)(2, "mat-label");
        i0.ɵɵtext(3, "Email");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 82);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_36_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r99); const ctx_r98 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r98.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_36_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r99); const ctx_r100 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r100.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r97 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r97.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Email");
    } }
    function dibexGridSqlComponent_th_36_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_36_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_36_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_36_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r13 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r13.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r13.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r13.showSearch);
    } }
    function dibexGridSqlComponent_td_38_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r101 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r101.count_of_projects_display_value, "");
    } }
    function dibexGridSqlComponent_td_38_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r101 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r101.count_of_projects, "");
    } }
    function dibexGridSqlComponent_td_38_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 83);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_td_38_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_td_38_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r101 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r101 && !!row_r101.count_of_projects_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r101 && !row_r101.count_of_projects_display_value);
    } }
    function dibexGridSqlComponent_th_39_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Count Of Projects ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_39_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Count Of Projects");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_39_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r111 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 84)(2, "mat-label");
        i0.ɵɵtext(3, "Count Of Projects");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 85);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_39_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r111); const ctx_r110 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r110.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_39_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r111); const ctx_r112 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r112.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r109 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r109.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Count Of Projects");
    } }
    function dibexGridSqlComponent_th_39_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_39_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_39_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_39_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r15 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r15.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r15.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r15.showSearch);
    } }
    function dibexGridSqlComponent_td_41_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r113 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r113.project_last_updated_display_value, "");
    } }
    function dibexGridSqlComponent_td_41_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r113 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r113.project_last_updated, "");
    } }
    function dibexGridSqlComponent_td_41_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 86);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_td_41_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_td_41_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r113 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r113 && !!row_r113.project_last_updated_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r113 && !row_r113.project_last_updated_display_value);
    } }
    function dibexGridSqlComponent_th_42_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Project Last Updated ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_42_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Project Last Updated");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_42_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r123 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 87)(2, "mat-label");
        i0.ɵɵtext(3, "Project Last Updated");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 88);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_42_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r123); const ctx_r122 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r122.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_42_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r123); const ctx_r124 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r124.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r121 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r121.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Project Last Updated");
    } }
    function dibexGridSqlComponent_th_42_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_42_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_42_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_42_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r17 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r17.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r17.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r17.showSearch);
    } }
    function dibexGridSqlComponent_td_44_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 89)(2, "div", 90);
        i0.ɵɵelementContainerStart(3, 5);
        i0.ɵɵelementStart(4, "button", 91);
        i0.ɵɵelement(5, "dib-icon", 92);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(6, "button", 93);
        i0.ɵɵelement(7, "dib-icon", 94);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("dibPort", "5120");
    } }
    function dibexGridSqlComponent_th_45_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65)(2, "div");
        i0.ɵɵtext(3, " Edit ");
        i0.ɵɵelementEnd()()();
    } }
    function dibexGridSqlComponent_td_47_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "button", 91);
        i0.ɵɵelement(2, "dib-icon", 92);
        i0.ɵɵelementEnd()();
    } }
    function dibexGridSqlComponent_th_48_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "th", 64);
    } }
    function dibexGridSqlComponent_td_50_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "button", 93);
        i0.ɵɵelement(2, "dib-icon", 94);
        i0.ɵɵelementEnd()();
    } }
    function dibexGridSqlComponent_th_51_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "th", 64);
    } }
    function dibexGridSqlComponent_td_53_span_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexGridSqlComponent_td_53_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 95)(1, "span", 96)(2, "span", 97);
        i0.ɵɵelement(3, "div", 98);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(4, dibexGridSqlComponent_td_53_span_4_Template, 1, 0, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r131 = ctx.$implicit;
        const ctx_r24 = i0.ɵɵnextContext();
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(2, _c0, row_r131.vip == 1));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r24.excelEditing == false && ctx_r24.rowForm.get("__edit").value === false);
    } }
    function dibexGridSqlComponent_th_54_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " VIP ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_54_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "VIP");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_54_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r138 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 100)(2, "mat-label");
        i0.ɵɵtext(3, "VIP");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 101);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_54_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r138); const ctx_r137 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r137.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_54_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r138); const ctx_r139 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r139.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r136 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r136.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "VIP");
    } }
    function dibexGridSqlComponent_th_54_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 99)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_54_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_54_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_54_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r25 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r25.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r25.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r25.showSearch);
    } }
    function dibexGridSqlComponent_td_56_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r140 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r140.client_contact_id_display_value, "");
    } }
    function dibexGridSqlComponent_td_56_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r140 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r140.client_contact_id, "");
    } }
    function dibexGridSqlComponent_td_56_Template(rf, ctx) { if (rf & 1) {
        const _r147 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 102)(1, "div", 103);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_td_56_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_td_56_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementStart(4, "button", 104);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_td_56_Template_button_click_4_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r147); const row_r140 = restoredCtx.$implicit; const ctx_r146 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r146.goToForDropdowns("dibexTestClientContactFormPopup", "", true, "client_contact_id", "id", ctx_r146.model, row_r140, $event)); });
        i0.ɵɵelement(5, "dib-icon", 105);
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const row_r140 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r140 && !!row_r140.client_contact_id_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r140 && !row_r140.client_contact_id_display_value);
    } }
    function dibexGridSqlComponent_th_57_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Client Contact ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_57_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Client Contact");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_th_57_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r152 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 107)(2, "mat-label");
        i0.ɵɵtext(3, "Client Contact");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 108);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_th_57_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r152); const ctx_r151 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r151.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_th_57_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r152); const ctx_r153 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r153.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r150 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("formGroup", ctx_r150.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Client Contact");
    } }
    function dibexGridSqlComponent_th_57_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 106)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_th_57_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_th_57_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_th_57_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r27 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r27.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r27.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r27.showSearch);
    } }
    function dibexGridSqlComponent_td_59_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 109);
        i0.ɵɵelement(1, "div", 110);
        i0.ɵɵpipe(2, "safeHtml");
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r154 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("innerHtml", i0.ɵɵpipeBind1(2, 1, row_r154.safeHtmlProjectCount), i0.ɵɵsanitizeHtml);
    } }
    function dibexGridSqlComponent_th_60_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 111)(1, "div", 65)(2, "div");
        i0.ɵɵtext(3, " Safe HTML Project Count ");
        i0.ɵɵelementEnd()()();
    } }
    function dibexGridSqlComponent_th_62_mat_progress_bar_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "mat-progress-bar", 114);
    } }
    function dibexGridSqlComponent_th_62_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 112);
        i0.ɵɵtemplate(1, dibexGridSqlComponent_th_62_mat_progress_bar_1_Template, 1, 0, "mat-progress-bar", 113);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r30 = i0.ɵɵnextContext();
        i0.ɵɵattribute("colspan", ctx_r30.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r30.busy);
    } }
    function dibexGridSqlComponent_th_64_span_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r157 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r157.translate("global.norecordsfound", "No Records Found"));
    } }
    function dibexGridSqlComponent_th_64_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 115);
        i0.ɵɵtemplate(1, dibexGridSqlComponent_th_64_span_1_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r31 = i0.ɵɵnextContext();
        i0.ɵɵattribute("colspan", ctx_r31.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r31.busy && ctx_r31.tableDataSource.data.length == 0);
    } }
    function dibexGridSqlComponent_ng_container_65_tr_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "tr", 117);
    } }
    function dibexGridSqlComponent_ng_container_65_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementContainerStart(0);
        i0.ɵɵtemplate(1, dibexGridSqlComponent_ng_container_65_tr_1_Template, 1, 0, "tr", 116);
        i0.ɵɵpipe(2, "async");
        i0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        const column_r158 = ctx.$implicit;
        const ctx_r32 = i0.ɵɵnextContext();
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("matHeaderRowDef", i0.ɵɵpipeBind1(2, 1, ctx_r32.columnHeaders.getArray(column_r158).items$));
    } }
    function dibexGridSqlComponent_tr_66_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "tr", 118);
    } if (rf & 2) {
        const ctx_r33 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction1(1, _c1, ctx_r33.busy ? "visible" : "hidden"));
    } }
    function dibexGridSqlComponent_tr_67_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "tr", 118);
    } if (rf & 2) {
        const ctx_r34 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction1(1, _c1, ctx_r34.tableDataSource.data.length == 0 ? "visible" : "hidden"));
    } }
    function dibexGridSqlComponent_tr_68_Template(rf, ctx) { if (rf & 1) {
        const _r162 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "tr", 119);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_tr_68_Template_tr_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r162); const row_r160 = restoredCtx.$implicit; const ctx_r161 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r161.rowClick(row_r160, $event)); });
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r160 = ctx.$implicit;
        const ctx_r35 = i0.ɵɵnextContext();
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(1, _c2, ctx_r35.isHighlighted(row_r160)));
    } }
    function dibexGridSqlComponent_70_ng_template_0_Template(rf, ctx) { }
    function dibexGridSqlComponent_70_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, dibexGridSqlComponent_70_ng_template_0_Template, 0, 0, "ng-template", 120);
    } if (rf & 2) {
        i0.ɵɵnextContext();
        const _r39 = i0.ɵɵreference(75);
        i0.ɵɵproperty("ngTemplateOutlet", _r39);
    } }
    function dibexGridSqlComponent_mat_toolbar_73_mat_checkbox_2_Template(rf, ctx) { if (rf & 1) {
        const _r168 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-checkbox", 126);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_mat_toolbar_73_mat_checkbox_2_Template_mat_checkbox_click_0_listener($event) { i0.ɵɵrestoreView(_r168); const ctx_r167 = i0.ɵɵnextContext(2); $event.preventDefault(); return i0.ɵɵresetView(ctx_r167.clearAll()); });
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r164 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("checked", true);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate2(" ", ctx_r164.numberOfSelectedItems + " ", "item", ctx_r164.numberOfSelectedItems > 1 ? "s " : " ", "selected ");
    } }
    function dibexGridSqlComponent_mat_toolbar_73_button_3_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon");
        i0.ɵɵtext(1, "visibility");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_mat_toolbar_73_button_3_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-icon");
        i0.ɵɵtext(1, "visibility_off");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_mat_toolbar_73_button_3_Template(rf, ctx) { if (rf & 1) {
        const _r172 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "button", 127);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_mat_toolbar_73_button_3_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r172); const ctx_r171 = i0.ɵɵnextContext(2); ctx_r171.gridShowClipboardDefault = !ctx_r171.gridShowClipboardDefault; return i0.ɵɵresetView(ctx_r171.gridShowClipboardDefault && ctx_r171.scrollToBottom()); });
        i0.ɵɵtemplate(1, dibexGridSqlComponent_mat_toolbar_73_button_3_mat_icon_1_Template, 2, 0, "mat-icon", 50);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_mat_toolbar_73_button_3_mat_icon_2_Template, 2, 0, "mat-icon", 50);
        i0.ɵɵtext(3);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r165 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r165.gridShowClipboardDefault);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r165.gridShowClipboardDefault);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", ctx_r165.gridShowClipboardDefault ? "hide" : "show", "");
    } }
    function dibexGridSqlComponent_mat_toolbar_73_mat_paginator_5_Template(rf, ctx) { if (rf & 1) {
        const _r175 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "mat-paginator", 128, 129);
        i0.ɵɵlistener("page", function dibexGridSqlComponent_mat_toolbar_73_mat_paginator_5_Template_mat_paginator_page_0_listener($event) { i0.ɵɵrestoreView(_r175); const ctx_r174 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r174.changePage($event)); });
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r166 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("length", ctx_r166.page.totalRecords)("pageSize", ctx_r166.page.pageSize)("pageSizeOptions", i0.ɵɵpureFunction0(3, _c3));
    } }
    function dibexGridSqlComponent_mat_toolbar_73_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "mat-toolbar")(1, "mat-toolbar-row", 121);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_mat_toolbar_73_mat_checkbox_2_Template, 2, 3, "mat-checkbox", 122);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_mat_toolbar_73_button_3_Template, 4, 3, "button", 123);
        i0.ɵɵelement(4, "span", 124);
        i0.ɵɵtemplate(5, dibexGridSqlComponent_mat_toolbar_73_mat_paginator_5_Template, 2, 4, "mat-paginator", 125);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r38 = i0.ɵɵnextContext();
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx_r38.numberOfSelectedItems);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r38.selectedDataNotInPage().length > 0);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", true);
    } }
    function dibexGridSqlComponent_ng_template_74_td_2_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r205 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r205.client_id_display_value, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_2_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r205 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r205.client_id, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 63);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_2_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_td_2_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r205 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r205 && !!row_r205.client_id_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r205 && !row_r205.client_id_display_value);
    } }
    function dibexGridSqlComponent_ng_template_74_th_3_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Client ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_3_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Client");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_3_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r215 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 72)(2, "mat-label");
        i0.ɵɵtext(3, "Client");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 73);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_3_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r215); const ctx_r214 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r214.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_3_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r215); const ctx_r216 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r216.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r213 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r213.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Client");
    } }
    function dibexGridSqlComponent_ng_template_74_th_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_3_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_3_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_3_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r177 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r177.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r177.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r177.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_5_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r217 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r217.name_display_value, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_5_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r217 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r217.name, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_5_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 74);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_5_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_td_5_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r217 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("hidden", row_r217.client_id == 3);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r217 && !!row_r217.name_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r217 && !row_r217.name_display_value);
    } }
    function dibexGridSqlComponent_ng_template_74_th_6_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Company ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_6_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Company");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_6_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r227 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 75)(2, "mat-label");
        i0.ɵɵtext(3, "Company");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 76);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_6_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r227); const ctx_r226 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r226.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_6_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r227); const ctx_r228 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r228.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r225 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r225.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Company");
    } }
    function dibexGridSqlComponent_ng_template_74_th_6_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_6_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_6_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_6_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r179 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r179.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r179.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r179.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_8_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r229 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r229.start_date_display_value, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_8_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r229 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r229.start_date, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_8_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 77);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_8_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_td_8_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r229 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r229 && !!row_r229.start_date_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r229 && !row_r229.start_date_display_value);
    } }
    function dibexGridSqlComponent_ng_template_74_th_9_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Start Date ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_9_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Start Date");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_9_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r239 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 78)(2, "mat-label");
        i0.ɵɵtext(3, "Start Date");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 79);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_9_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r239); const ctx_r238 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r238.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_9_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r239); const ctx_r240 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r240.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r237 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r237.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Start Date");
    } }
    function dibexGridSqlComponent_ng_template_74_th_9_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_9_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_9_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_9_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r181 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r181.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r181.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r181.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_11_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r241 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r241.email_display_value, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_11_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r241 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r241.email, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_11_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 80);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_11_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_td_11_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r241 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r241 && !!row_r241.email_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r241 && !row_r241.email_display_value);
    } }
    function dibexGridSqlComponent_ng_template_74_th_12_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Email ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_12_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Email");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_12_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r251 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 81)(2, "mat-label");
        i0.ɵɵtext(3, "Email");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 82);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_12_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r251); const ctx_r250 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r250.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_12_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r251); const ctx_r252 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r252.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r249 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r249.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Email");
    } }
    function dibexGridSqlComponent_ng_template_74_th_12_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_12_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_12_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_12_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r183 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r183.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r183.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r183.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_14_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r253 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r253.count_of_projects_display_value, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_14_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r253 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r253.count_of_projects, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_14_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 83);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_14_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_td_14_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r253 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r253 && !!row_r253.count_of_projects_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r253 && !row_r253.count_of_projects_display_value);
    } }
    function dibexGridSqlComponent_ng_template_74_th_15_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Count Of Projects ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_15_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Count Of Projects");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_15_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r263 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 84)(2, "mat-label");
        i0.ɵɵtext(3, "Count Of Projects");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 85);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_15_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r263); const ctx_r262 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r262.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_15_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r263); const ctx_r264 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r264.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r261 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r261.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Count Of Projects");
    } }
    function dibexGridSqlComponent_ng_template_74_th_15_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_15_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_15_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_15_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r185 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r185.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r185.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r185.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_17_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r265 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r265.project_last_updated_display_value, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_17_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r265 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r265.project_last_updated, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_17_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 86);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_17_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_td_17_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r265 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r265 && !!row_r265.project_last_updated_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r265 && !row_r265.project_last_updated_display_value);
    } }
    function dibexGridSqlComponent_ng_template_74_th_18_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Project Last Updated ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_18_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Project Last Updated");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_18_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r275 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 87)(2, "mat-label");
        i0.ɵɵtext(3, "Project Last Updated");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 88);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_18_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r275); const ctx_r274 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r274.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_18_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r275); const ctx_r276 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r276.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r273 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r273.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Project Last Updated");
    } }
    function dibexGridSqlComponent_ng_template_74_th_18_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_18_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_18_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_18_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r187 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r187.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r187.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r187.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_20_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "div", 89)(2, "div", 90);
        i0.ɵɵelementContainerStart(3, 5);
        i0.ɵɵelementStart(4, "button", 91);
        i0.ɵɵelement(5, "dib-icon", 92);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(6, "button", 93);
        i0.ɵɵelement(7, "dib-icon", 94);
        i0.ɵɵelementEnd();
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("dibPort", "5120");
    } }
    function dibexGridSqlComponent_ng_template_74_th_21_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 64)(1, "div", 65)(2, "div");
        i0.ɵɵtext(3, " Edit ");
        i0.ɵɵelementEnd()()();
    } }
    function dibexGridSqlComponent_ng_template_74_td_23_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "button", 91);
        i0.ɵɵelement(2, "dib-icon", 92);
        i0.ɵɵelementEnd()();
    } }
    function dibexGridSqlComponent_ng_template_74_th_24_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "th", 64);
    } }
    function dibexGridSqlComponent_ng_template_74_td_26_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 62)(1, "button", 93);
        i0.ɵɵelement(2, "dib-icon", 94);
        i0.ɵɵelementEnd()();
    } }
    function dibexGridSqlComponent_ng_template_74_th_27_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "th", 64);
    } }
    function dibexGridSqlComponent_ng_template_74_td_29_span_4_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "span");
    } }
    function dibexGridSqlComponent_ng_template_74_td_29_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 95)(1, "span", 96)(2, "span", 97);
        i0.ɵɵelement(3, "div", 98);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_td_29_span_4_Template, 1, 0, "span", 50);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r283 = ctx.$implicit;
        const ctx_r194 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(2, _c0, row_r283.vip == 1));
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r194.excelEditing == false && ctx_r194.rowForm.get("__edit").value === false);
    } }
    function dibexGridSqlComponent_ng_template_74_th_30_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " VIP ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_30_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "VIP");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_30_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r290 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 100)(2, "mat-label");
        i0.ɵɵtext(3, "VIP");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 101);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_30_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r290); const ctx_r289 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r289.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_30_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r290); const ctx_r291 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r291.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r288 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r288.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "VIP");
    } }
    function dibexGridSqlComponent_ng_template_74_th_30_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 99)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_30_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_30_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_30_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r195 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r195.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r195.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r195.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_32_span_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r292 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r292.client_contact_id_display_value, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_32_span_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r292 = i0.ɵɵnextContext().$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate1(" ", row_r292.client_contact_id, "");
    } }
    function dibexGridSqlComponent_ng_template_74_td_32_Template(rf, ctx) { if (rf & 1) {
        const _r299 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 102)(1, "div", 103);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_32_span_2_Template, 2, 1, "span", 50);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_td_32_span_3_Template, 2, 1, "span", 50);
        i0.ɵɵelementStart(4, "button", 104);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_ng_template_74_td_32_Template_button_click_4_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r299); const row_r292 = restoredCtx.$implicit; const ctx_r298 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r298.goToForDropdowns("dibexTestClientContactFormPopup", "", true, "client_contact_id", "id", ctx_r298.model, row_r292, $event)); });
        i0.ɵɵelement(5, "dib-icon", 105);
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const row_r292 = ctx.$implicit;
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !!row_r292 && !!row_r292.client_contact_id_display_value);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !!row_r292 && !row_r292.client_contact_id_display_value);
    } }
    function dibexGridSqlComponent_ng_template_74_th_33_div_2_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 69);
        i0.ɵɵtext(1, " Client Contact ");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_33_div_3_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 70);
        i0.ɵɵtext(1, "Client Contact");
        i0.ɵɵelementEnd();
    } }
    function dibexGridSqlComponent_ng_template_74_th_33_div_4_Template(rf, ctx) { if (rf & 1) {
        const _r304 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "div", 71)(1, "mat-form-field", 107)(2, "mat-label");
        i0.ɵɵtext(3, "Client Contact");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(4, "input", 108);
        i0.ɵɵlistener("keydown.enter", function dibexGridSqlComponent_ng_template_74_th_33_div_4_Template_input_keydown_enter_4_listener() { i0.ɵɵrestoreView(_r304); const ctx_r303 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r303.searchGrid(false)); })("keydown.esc", function dibexGridSqlComponent_ng_template_74_th_33_div_4_Template_input_keydown_esc_4_listener() { i0.ɵɵrestoreView(_r304); const ctx_r305 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r305.clearSearch()); });
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        const ctx_r302 = i0.ɵɵnextContext(3);
        i0.ɵɵproperty("formGroup", ctx_r302.model.$formGroup);
        i0.ɵɵadvance(4);
        i0.ɵɵattribute("aria-label", "Client Contact");
    } }
    function dibexGridSqlComponent_ng_template_74_th_33_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 106)(1, "div", 65);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_th_33_div_2_Template, 2, 0, "div", 66);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_33_div_3_Template, 2, 0, "div", 67);
        i0.ɵɵtemplate(4, dibexGridSqlComponent_ng_template_74_th_33_div_4_Template, 5, 2, "div", 68);
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r197 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", !ctx_r197.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r197.showSearch);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r197.showSearch);
    } }
    function dibexGridSqlComponent_ng_template_74_td_35_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "td", 109);
        i0.ɵɵelement(1, "div", 110);
        i0.ɵɵpipe(2, "safeHtml");
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r306 = ctx.$implicit;
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("innerHtml", i0.ɵɵpipeBind1(2, 1, row_r306.safeHtmlProjectCount), i0.ɵɵsanitizeHtml);
    } }
    function dibexGridSqlComponent_ng_template_74_th_36_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 111)(1, "div", 65)(2, "div");
        i0.ɵɵtext(3, " Safe HTML Project Count ");
        i0.ɵɵelementEnd()()();
    } }
    function dibexGridSqlComponent_ng_template_74_th_38_Template(rf, ctx) { if (rf & 1) {
        const _r309 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "th", 58)(1, "mat-checkbox", 132);
        i0.ɵɵlistener("change", function dibexGridSqlComponent_ng_template_74_th_38_Template_mat_checkbox_change_1_listener($event) { i0.ɵɵrestoreView(_r309); const ctx_r308 = i0.ɵɵnextContext(2); return i0.ɵɵresetView($event ? ctx_r308.masterToggle($event) : null); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const ctx_r200 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r200.masterIsChecked)("indeterminate", ctx_r200.masterIsIndeterminate);
    } }
    function dibexGridSqlComponent_ng_template_74_td_39_Template(rf, ctx) { if (rf & 1) {
        const _r313 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "td", 133)(1, "mat-checkbox", 61);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_ng_template_74_td_39_Template_mat_checkbox_click_1_listener($event) { return $event.stopPropagation(); })("change", function dibexGridSqlComponent_ng_template_74_td_39_Template_mat_checkbox_change_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r313); const row_r310 = restoredCtx.$implicit; const ctx_r312 = i0.ɵɵnextContext(2); return i0.ɵɵresetView($event ? ctx_r312.selection.toggle(row_r310) : null); });
        i0.ɵɵelementEnd()();
    } if (rf & 2) {
        const row_r310 = ctx.$implicit;
        const ctx_r201 = i0.ɵɵnextContext(2);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("checked", ctx_r201.selection.isSelected(row_r310));
    } }
    function dibexGridSqlComponent_ng_template_74_th_41_mat_progress_bar_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "mat-progress-bar", 114);
    } }
    function dibexGridSqlComponent_ng_template_74_th_41_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 112);
        i0.ɵɵtemplate(1, dibexGridSqlComponent_ng_template_74_th_41_mat_progress_bar_1_Template, 1, 0, "mat-progress-bar", 113);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r202 = i0.ɵɵnextContext(2);
        i0.ɵɵattribute("colspan", ctx_r202.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx_r202.busy);
    } }
    function dibexGridSqlComponent_ng_template_74_th_43_span_1_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "span");
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r315 = i0.ɵɵnextContext(3);
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx_r315.translate("global.norecordsfound", "No Records Found"));
    } }
    function dibexGridSqlComponent_ng_template_74_th_43_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "th", 115);
        i0.ɵɵtemplate(1, dibexGridSqlComponent_ng_template_74_th_43_span_1_Template, 2, 1, "span", 50);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r203 = i0.ɵɵnextContext(2);
        i0.ɵɵattribute("colspan", ctx_r203.columnsToDisplay.get().length);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", !ctx_r203.busy && ctx_r203.tableDataSource.data.length == 0);
    } }
    function dibexGridSqlComponent_ng_template_74_tr_44_Template(rf, ctx) { if (rf & 1) {
        const _r318 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "tr", 119);
        i0.ɵɵlistener("click", function dibexGridSqlComponent_ng_template_74_tr_44_Template_tr_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r318); const row_r316 = restoredCtx.$implicit; const ctx_r317 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r317.rowClick(row_r316, $event)); });
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const row_r316 = ctx.$implicit;
        const ctx_r204 = i0.ɵɵnextContext(2);
        i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(1, _c2, ctx_r204.isHighlighted(row_r316)));
    } }
    function dibexGridSqlComponent_ng_template_74_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "table", 130);
        i0.ɵɵelementContainerStart(1, 23);
        i0.ɵɵtemplate(2, dibexGridSqlComponent_ng_template_74_td_2_Template, 4, 2, "td", 24);
        i0.ɵɵtemplate(3, dibexGridSqlComponent_ng_template_74_th_3_Template, 5, 3, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(4, 26);
        i0.ɵɵtemplate(5, dibexGridSqlComponent_ng_template_74_td_5_Template, 4, 3, "td", 24);
        i0.ɵɵtemplate(6, dibexGridSqlComponent_ng_template_74_th_6_Template, 5, 3, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(7, 27);
        i0.ɵɵtemplate(8, dibexGridSqlComponent_ng_template_74_td_8_Template, 4, 2, "td", 24);
        i0.ɵɵtemplate(9, dibexGridSqlComponent_ng_template_74_th_9_Template, 5, 3, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(10, 28);
        i0.ɵɵtemplate(11, dibexGridSqlComponent_ng_template_74_td_11_Template, 4, 2, "td", 24);
        i0.ɵɵtemplate(12, dibexGridSqlComponent_ng_template_74_th_12_Template, 5, 3, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(13, 29);
        i0.ɵɵtemplate(14, dibexGridSqlComponent_ng_template_74_td_14_Template, 4, 2, "td", 24);
        i0.ɵɵtemplate(15, dibexGridSqlComponent_ng_template_74_th_15_Template, 5, 3, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(16, 30);
        i0.ɵɵtemplate(17, dibexGridSqlComponent_ng_template_74_td_17_Template, 4, 2, "td", 24);
        i0.ɵɵtemplate(18, dibexGridSqlComponent_ng_template_74_th_18_Template, 5, 3, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(19, 31);
        i0.ɵɵtemplate(20, dibexGridSqlComponent_ng_template_74_td_20_Template, 8, 1, "td", 24);
        i0.ɵɵtemplate(21, dibexGridSqlComponent_ng_template_74_th_21_Template, 4, 0, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(22, 32);
        i0.ɵɵtemplate(23, dibexGridSqlComponent_ng_template_74_td_23_Template, 3, 0, "td", 24);
        i0.ɵɵtemplate(24, dibexGridSqlComponent_ng_template_74_th_24_Template, 1, 0, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(25, 33);
        i0.ɵɵtemplate(26, dibexGridSqlComponent_ng_template_74_td_26_Template, 3, 0, "td", 24);
        i0.ɵɵtemplate(27, dibexGridSqlComponent_ng_template_74_th_27_Template, 1, 0, "th", 25);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(28, 34);
        i0.ɵɵtemplate(29, dibexGridSqlComponent_ng_template_74_td_29_Template, 5, 4, "td", 35);
        i0.ɵɵtemplate(30, dibexGridSqlComponent_ng_template_74_th_30_Template, 5, 3, "th", 36);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(31, 37);
        i0.ɵɵtemplate(32, dibexGridSqlComponent_ng_template_74_td_32_Template, 6, 2, "td", 38);
        i0.ɵɵtemplate(33, dibexGridSqlComponent_ng_template_74_th_33_Template, 5, 3, "th", 39);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(34, 40);
        i0.ɵɵtemplate(35, dibexGridSqlComponent_ng_template_74_td_35_Template, 3, 3, "td", 41);
        i0.ɵɵtemplate(36, dibexGridSqlComponent_ng_template_74_th_36_Template, 4, 0, "th", 42);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(37, 20);
        i0.ɵɵtemplate(38, dibexGridSqlComponent_ng_template_74_th_38_Template, 2, 2, "th", 21);
        i0.ɵɵtemplate(39, dibexGridSqlComponent_ng_template_74_td_39_Template, 2, 1, "td", 131);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(40, 43);
        i0.ɵɵtemplate(41, dibexGridSqlComponent_ng_template_74_th_41_Template, 2, 2, "th", 44);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵelementContainerStart(42, 45);
        i0.ɵɵtemplate(43, dibexGridSqlComponent_ng_template_74_th_43_Template, 2, 2, "th", 46);
        i0.ɵɵelementContainerEnd();
        i0.ɵɵtemplate(44, dibexGridSqlComponent_ng_template_74_tr_44_Template, 1, 3, "tr", 49);
        i0.ɵɵpipe(45, "async");
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        const ctx_r40 = i0.ɵɵnextContext();
        i0.ɵɵproperty("dataSource", ctx_r40.selectionDataSource);
        i0.ɵɵadvance(44);
        i0.ɵɵproperty("matRowDefColumns", i0.ɵɵpipeBind1(45, 2, ctx_r40.columnsToDisplay.items$));
    } }
    async function importFiles() { for (const fileLocation of importsRequired) {
        await SystemJS.import(fileLocation);
    } }
    return {
        setters: [
            function (tslib_1_1) {
                tslib_1 = tslib_1_1;
            },
            function (core_1_1) {
                core_1 = core_1_1;
                core_2 = core_1_1;
                core_4 = core_1_1;
                i0 = core_1_1;
            },
            function (table_1_1) {
                table_1 = table_1_1;
                table_2 = table_1_1;
                i15 = table_1_1;
            },
            function (shared_1_1) {
                shared_1 = shared_1_1;
                shared_2 = shared_1_1;
                shared_3 = shared_1_1;
                shared_4 = shared_1_1;
                shared_5 = shared_1_1;
                shared_6 = shared_1_1;
                i2 = shared_1_1;
            },
            function (http_1_1) {
                http_1 = http_1_1;
                i1 = http_1_1;
            },
            function (forms_1_1) {
                forms_1 = forms_1_1;
                i5 = forms_1_1;
            },
            function (core_3_1) {
                core_3 = core_3_1;
            },
            function (rxjs_1_1) {
                rxjs_1 = rxjs_1_1;
            },
            function (operators_1_1) {
                operators_1 = operators_1_1;
            },
            function (sort_1_1) {
                sort_1 = sort_1_1;
                i16 = sort_1_1;
            },
            function (paginator_1_1) {
                paginator_1 = paginator_1_1;
                i17 = paginator_1_1;
            },
            function (common_1_1) {
                common_1 = common_1_1;
                i3 = common_1_1;
            },
            function (button_1_1) {
                button_1 = button_1_1;
                i6 = button_1_1;
            },
            function (icon_1_1) {
                icon_1 = icon_1_1;
                i9 = icon_1_1;
            },
            function (card_1_1) {
                card_1 = card_1_1;
                i14 = card_1_1;
            },
            function (checkbox_1_1) {
                checkbox_1 = checkbox_1_1;
                i7 = checkbox_1_1;
            },
            function (i4_1) {
                i4 = i4_1;
            },
            function (i8_1) {
                i8 = i8_1;
            },
            function (i10_1) {
                i10 = i10_1;
            },
            function (i11_1) {
                i11 = i11_1;
            },
            function (i12_1) {
                i12 = i12_1;
            },
            function (i13_1) {
                i13 = i13_1;
            }
        ],
        execute: function () {
            _c0 = function (a0) { return { "checked": a0 }; };
            _c1 = function (a0) { return { visibility: a0 }; };
            _c2 = function (a0) { return { "dib-grid-selected": a0 }; };
            _c3 = function () { return [10, 20, 50, 100]; };
            _c4 = function (a0) { return { "dib-editor": a0 }; };
            _c5 = function () { return ["_dibBusy"]; };
            _c6 = function () { return ["_dibNoRecords"]; };
            importsRequired = [];
            dibexGridSqlComponent = class dibexGridSqlComponent extends shared_1.GridComponent {
                httpClient;
                ref;
                crudService;
                sd;
                cd;
                view = { container: { id: 185, name: 'dibexGridSql', subContainerItemAliases: [], allChildContainers: ["dibDocsExampleHtml"], refreshChildContainers: { "_": ['dibDocsExampleHtml*5116'] }, dropin: 'grid', activeFilter: null, configs: {}, keepInMemory: false }, items: {}, primaryKeys: ['client_id'], recordStatus: 'create', debug: false, debugItem: false };
                gridMultiselect = true; //default: false
                gridPersistSelection = true; //default: false
                gridMasterSelectAllFirst = true; //default:true
                gridShowDuplicatesInClipboard = false; //default:false
                gridShowClipboardDefault = false; //default:false
                gridRowClickChangesSelection = true; //default:true
                gridHighlightLastClickedOnly = false; //default:false
                gridClickedLastNullable = false; //default:false
                selection = new shared_1.SelectionModel(this.gridMultiselect, []);
                selectionDataSource = new table_1.MatTableDataSource(this.selection.selected);
                page = { pageSize: 20, pageIndex: 1, };
                columnsToDisplay = new shared_3.DibArray(['hdrActions', 'client_id', 'name', 'start_date', 'vip', 'email', 'client_contact_id', 'safeHtmlProjectCount', 'count_of_projects', 'project_last_updated',]);
                allColumnsToDisplay = new shared_3.DibArray(['hdrActions', 'client_id', 'name', 'start_date', 'vip', 'email', 'client_contact_id', 'safeHtmlProjectCount', 'count_of_projects', 'project_last_updated',]);
                columnHeaders = new shared_3.DibArrayList({ "1": new shared_3.DibArray([]) });
                showSearchDefault = true;
                showSearch = this.showSearchDefault;
                constructor(injector, httpClient, ref, crudService, viewContainerRef, sd, cd) {
                    super(injector, viewContainerRef);
                    this.httpClient = httpClient;
                    this.ref = ref;
                    this.crudService = crudService;
                    this.sd = sd;
                    this.cd = cd;
                    const currentGlobalTheme = this.themeService.getCurrentTheme();
                    if (currentGlobalTheme === null) {
                        this.setActiveTheme('deeppurple-amber', false);
                    }
                    else {
                        this.setActiveTheme(currentGlobalTheme.name, currentGlobalTheme.darkness);
                    }
                }
                ngOnInit() {
                    this.model = new shared_3.DibContainerModel(this.injector, 'dibexGridSql');
                    this.containerName = 'dibexGridSql'; // Need to add a shortcut to get the containerName
                    this.model.modelItems = { client_id: { itemId: 4616, type: 'text', fieldAlias: 'client_id', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, name: { itemId: 4617, type: 'text', fieldAlias: 'name', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, start_date: { itemId: 4618, type: 'text', fieldAlias: 'start_date', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, email: { itemId: 4619, type: 'text', fieldAlias: 'email', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, count_of_projects: { itemId: 4620, type: 'text', fieldAlias: 'count_of_projects', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, project_last_updated: { itemId: 4621, type: 'text', fieldAlias: 'project_last_updated', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, vip: { itemId: 5811, type: 'boolean', fieldAlias: 'vip', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'change' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'boolean', contentType: 'tick', changeUrl: false }, client_contact_id: { itemId: 6264, type: 'text', fieldAlias: 'client_contact_id', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, safeHtmlProjectCount: { itemId: 6677, type: 'text', fieldAlias: 'safeHtmlProjectCount', formControl: new forms_1.FormControl({ value: '', disabled: false }, { validators: [], updateOn: 'blur' }), create: true, update: true, required: false, itemAlias: null, default: '', dataType: 'text', contentType: 'text', changeUrl: false }, };
                    this.model.$formGroup.addControl('client_id', this.model.modelItems.client_id.formControl);
                    this.model.$formGroup.addControl('name', this.model.modelItems.name.formControl);
                    this.model.$formGroup.addControl('start_date', this.model.modelItems.start_date.formControl);
                    this.model.$formGroup.addControl('email', this.model.modelItems.email.formControl);
                    this.model.$formGroup.addControl('count_of_projects', this.model.modelItems.count_of_projects.formControl);
                    this.model.$formGroup.addControl('project_last_updated', this.model.modelItems.project_last_updated.formControl);
                    this.model.$formGroup.addControl('vip', this.model.modelItems.vip.formControl);
                    this.model.$formGroup.addControl('client_contact_id', this.model.modelItems.client_contact_id.formControl);
                    this.model.$formGroup.addControl('safeHtmlProjectCount', this.model.modelItems.safeHtmlProjectCount.formControl);
                    this.model.$formGroup.valueChanges
                        .pipe(operators_1.takeUntil(this.onDestroy)).subscribe(change => { });
                    super.ngOnInit();
                    this.initClientDataChangeListeners();
                    this.updateClientData();
                    let lists = {};
                    let self = this;
                    lists = this.lists;
                    this.tableDataSource.data = [];
                    this.resetPage();
                    this.setupGridSearchAll();
                    this.tableDataSource
                        .connect().pipe(operators_1.tap(_ => { const selected = this.selection.selected; this.selection._emitChanges = false; this.selection.deselect(...this.selection.selected.filter(s => !!this.tableDataSource.data.find(d => this.compareRows(s, d)))); this.selection.select(...this.tableDataSource.data.filter(d => !!selected.find(s => this.compareRows(s, d)))); this.selection._emitChanges = true; })).subscribe();
                    this.selection.changed.pipe().subscribe(c => {
                        this.updateSelectionClientData(c);
                        if (this.gridShowDuplicatesInClipboard)
                            this.selectionDataSource.data = c.source.selected;
                        else
                            this.selectionDataSource.data = this.selectedDataNotInPage(c.source.selected);
                    });
                    this.columnHeaders.addArray('1', new shared_3.DibArray(['hdrActions', 'client_id', 'name', 'start_date', 'vip', 'email', 'client_contact_id', 'safeHtmlProjectCount', 'count_of_projects', 'project_last_updated']));
                }
                ngAfterViewInit() { super.ngAfterViewInit(); window.dispatchEvent(new Event('resize')); this.setupService(); this.reloadContainer(); this.clientData.selected_self = null; this.updateSearchFromUrl(); this.eventService.on(`${this.view.container.name}selectRow`).pipe(operators_1.takeUntil(this.onDestroy)).subscribe((selectRecord) => { const column = selectRecord['column']; const value = selectRecord['value']; let found = false; this.tableDataSource.data.forEach(row => { if (row[column] == value) {
                    found = true;
                    this.rowSelect(row);
                } }); }); }
                rowClick(row, e) {
                    if (!!e.srcElement.firstChild && !!e.srcElement.firstChild.attributes && !!e.srcElement.firstChild.attributes.type && e.srcElement.firstChild.attributes.type.value == 'checkbox') {
                        return;
                    }
                    if (e.srcElement && ["button", "a", "mat-icon", "dib-icon"].includes(e.srcElement.tagName.toLocaleLowerCase())) {
                        return;
                    }
                    this.rowSelect(row);
                }
                rowSelect(row) {
                    if (this.gridRowClickChangesSelection) {
                        this.selection.toggle(row);
                    }
                    if (this.gridClickedLastNullable && this.clickedLast && this.compareRows(row, this.clickedLast)) {
                        this.clickedLast = null;
                    }
                    else {
                        this.clickedLast = row;
                    }
                    let lastClickValue = {};
                    if (this.clickedLast !== null) {
                        Object.keys(this.model.modelItems).forEach(key => { if (!!this.model.modelItems[key].itemAlias == true) {
                            lastClickValue[key] = this.clickedLast[key];
                        } });
                        this.clientData.clickedLast_self = lastClickValue;
                    }
                    else {
                        this.clientData.clickedLast_self = null;
                    }
                    this.eventService.emit({ name: `clickedLast_dibexGridSql`, value: this.clientData.clickedLast_self });
                }
                updateSelectionClientData(selectionChange) {
                    const { selected } = selectionChange.source || {};
                    const firstSelection = selected ? selected[0] : {};
                    if (!selected[0]) {
                        this.clientData.selected_self = null;
                        this.eventService.emit({ name: `selected_dibexGridSql`, value: this.clientData.selected_self });
                        return;
                    }
                    let cdSelected = this.gridMultiselect ? selected.map(s => { let res = {}; this.view.primaryKeys.forEach((key) => { if (!!s[key]) {
                        res[key] = s[key];
                    } }); return res; }) : this.view.primaryKeys.reduce((res, key) => ({ ...res, [key]: firstSelection[key] }), {});
                    if (Object.keys(cdSelected).length == 0) {
                        cdSelected = selected;
                    }
                    this.clientData.selected_self = cdSelected;
                    this.eventService.emit({ name: `selected_dibexGridSql`, value: cdSelected });
                }
                ;
                setupService() {
                    this.sort.sortChange.pipe(operators_1.takeUntil(this.onDestroy), operators_1.tap((sort) => { this.page$.next(this.page); })).subscribe();
                    this.page$.pipe(operators_1.tap(page => { this.page = page; this.busy = true; }), operators_1.takeUntil(this.onDestroy), operators_1.tap(page => { this.clearClientDataSelection(); if (this.showSearch) {
                        this.clientData.gridFilter_self = this.allClientData.gridFilter;
                        this.eventService.emit({ name: `gridFilter_${this.view.container.name}`, value: this.clientData.gridFilter_self });
                    }
                    else {
                        delete this.clientData.gridFilter_self;
                        this.eventService.emit({ name: `gridFilter_${this.view.container.name}`, value: null });
                    } }), operators_1.switchMap((page) => { const sort = this.sort.direction == '' ? [] : [{ "property": this.sort.active, "direction": this.sort.direction.toUpperCase() }]; return this.crudService.list(this.model.crudUrl, this.view.container.name, { page: { number: page.pageIndex + 1, limit: page.pageSize }, searchText: null, sort: sort, filter: this.filter, clientData: this.clientData, activeFilter: this.view.container.activeFilter }).pipe(operators_1.catchError((err) => rxjs_1.of({ success: false, message: `${err}` }))); }), operators_1.tap((response) => {
                        this.busy = false;
                        window.dispatchEvent(new Event('resize'));
                        if (response.success) {
                            this.tableDataSource.data = [];
                            const data = response.records;
                            if (!!data === true) {
                                this.tableDataSource.data = data;
                                this.page.length = Math.ceil(response.filtertotal / this.page.pageSize);
                                this.page.records = response.filtertotal;
                                this.page.totalRecords = response.total;
                                this.page.fromRecord = this.page.pageIndex == 0 ? 1 : (this.page.pageIndex) * this.page.pageSize;
                                this.page.toRecord = this.page.fromRecord == 1 ? this.page.fromRecord + this.tableDataSource.data.length - 1 : this.page.fromRecord + this.tableDataSource.data.length;
                                if (this.page.toRecord > this.page.totalRecords) {
                                    this.page.toRecord = this.page.totalRecords;
                                    this.page.allRecords = true;
                                }
                            }
                            this.handleSelectionOnPage();
                            this.reloadSubcontainers();
                            this.eventService.processDelayedEventQueue(this.view.container.name);
                        }
                    })).subscribe();
                }
                ;
                ngOnDestroy() {
                    super.ngOnDestroy();
                    if (this.model !== undefined) {
                        this.model.destroy();
                    }
                    this.actionService.dequeueActionsForContainer(this.containerActionReference());
                }
                ;
                reloadContainer(reloadOptions) {
                    super.reloadContainer(reloadOptions);
                    if (!this.canReloadContainer(reloadOptions)) {
                        this.reloadSubcontainers();
                        return;
                    }
                    const self = this;
                    this.model.updateFormDefaults(this, (columnName) => {
                        if (self.columnsToDisplay !== undefined && self.columnsToDisplay.get().indexOf(columnName) !== -1) {
                            return true;
                        }
                        return false;
                    });
                    if (!!this.view.container.activeFilter === true) {
                        this.clientData.activeFilter_self = this.view.container.activeFilter;
                    }
                    this.portService.setUrlDefaults(true, this);
                    this.eventService.emit({ name: 'onReloaddibexGridSql', value: this });
                    this.eventService.emit({ name: 'OnReloadContainer', value: 'dibexGridSql' });
                    this.resetPage();
                    this.page$.next(this.page);
                }
                ;
                resetPage() {
                    this.page = { number: 1, length: 0, pageSize: 20, pageIndex: 0, lastLoad: 1, totalRecords: 0, allRecords: false };
                    this.page.allRecords = false;
                    if (!this.gridPersistSelection) {
                        this.selection.clear();
                    }
                    if (!!this.paginator) {
                        this.paginator._intl.itemsPerPageLabel = '';
                        this.paginator.pageSize = this.page.pageSize;
                        this.paginator.firstPage();
                    }
                }
                ;
                static ɵfac = function dibexGridSqlComponent_Factory(t) { return new (t || dibexGridSqlComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.CrudService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
                static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: dibexGridSqlComponent, selectors: [["dibex-grid-sql"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 76, vars: 34, consts: [[2, "display", "flex", "flex-direction", "column", "align-items", "stretch", 3, "formGroup", "ngClass", "ngSubmit"], [2, "display", "flex", "flex-direction", "column", "align-items", "stretch"], ["id", "ci5116", "dibComponent", "subcontainer", 2, "flex", "1 1 0%"], ["parentContainerName", "dibexGridSql", "subContainerName", "dibDocsExampleHtml", "subContainerId", "172", "dropinName", "iframe", 3, "dibPort"], ["id", "ci4606", "dibComponent", "row", "dib-inject-content", "replace", 2, "padding", "5px 10px 0px !important", "display", "flex", "flex-direction", "row", "justify-content", "flex-start", "align-items", "center", "gap", "10px", "flex-wrap", "nowrap", "flex", "1 1 0%"], [3, "dibPort"], ["mat-mini-fab", "", "color", "accent", "id", "ci4607", "dibComponent", "btnReload", "aria-label", "Reload Record(s)", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/reload.svg"], ["id", "ci4613", "dibComponent", "span", 2, "width", "150px !important", 3, "innerHtml"], ["mat-mini-fab", "", "color", "primary", "id", "ci4611", "dibComponent", "btnFilterOpen", "aria-label", "Display headers for filtering records", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/search.svg"], ["mat-mini-fab", "", "color", "primary", "id", "ci4609", "dibComponent", "btnFilterApply", "style", "  ", "aria-label", "Apply filter criteria specified in column headers", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click", 4, "ngIf"], ["mat-mini-fab", "", "color", "primary", "id", "ci4610", "dibComponent", "btnFilterClear", "style", "  ", "aria-label", "Show all records and clear filter criteria", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click", 4, "ngIf"], ["id", "ci4608", "dibComponent", "spacer", 2, "flex", "1 1 0%"], ["class", "dib-grid-totals", "id", "ci4612", "dibComponent", "gridTotals", "style", "  display:flex; flex-direction: row;  flex-wrap: nowrap;  ", 4, "ngIf"], ["id", "ci4614", "dibComponent", "card", 2, "flex", "1 1 0%"], [2, "display", "flex", "flex-direction", "column", "flex-wrap", "nowrap"], ["fill-height", "", "debounceTime", "300", 3, "additionalSpace", "footerElement"], ["gridScroll", ""], ["mat-table", "", "matSort", "", 1, "", 3, "dataSource"], ["matColumnDef", "_select"], ["mat-header-cell", "", "style", "width:80px", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "client_id"], ["mat-cell", "", "style", "padding: 2px; ", 4, "matCellDef"], ["mat-header-cell", "", "style", "padding:2px; text-align:left; vertical-align:top; ", 4, "matHeaderCellDef"], ["matColumnDef", "name"], ["matColumnDef", "start_date"], ["matColumnDef", "email"], ["matColumnDef", "count_of_projects"], ["matColumnDef", "project_last_updated"], ["matColumnDef", "hdrActions"], ["matColumnDef", "btnDoSomething"], ["matColumnDef", "btnDoSomething2"], ["matColumnDef", "vip"], ["mat-cell", "", "style", "padding: 2px; width:120px; ", 4, "matCellDef"], ["mat-header-cell", "", "style", "padding:2px; text-align:left; vertical-align:top; width:120px; ", 4, "matHeaderCellDef"], ["matColumnDef", "client_contact_id"], ["mat-cell", "", "style", "padding: 2px; width:230px; ", 4, "matCellDef"], ["mat-header-cell", "", "style", "padding:2px; text-align:left; vertical-align:top; width:230px; ", 4, "matHeaderCellDef"], ["matColumnDef", "safeHtmlProjectCount"], ["mat-cell", "", "style", "padding: 2px; width:80px; ", 4, "matCellDef"], ["mat-header-cell", "", "style", "padding:2px; text-align:left; vertical-align:top; width:80px; ", 4, "matHeaderCellDef"], ["matColumnDef", "_dibBusy"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["matColumnDef", "_dibNoRecords"], ["mat-header-cell", "", "class", "dib-no-records-found", 4, "matHeaderCellDef"], [4, "ngFor", "ngForOf"], ["mat-header-row", "", "class", "dib-grid-loader", 3, "ngStyle", 4, "matHeaderRowDef"], ["mat-row", "", 3, "ngClass", "click", 4, "matRowDef", "matRowDefColumns"], [4, "ngIf"], ["footerdibexGridSql", ""], ["_selectedTable", ""], ["mat-mini-fab", "", "color", "primary", "id", "ci4609", "dibComponent", "btnFilterApply", "aria-label", "Apply filter criteria specified in column headers", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/applyFilters.svg"], ["mat-mini-fab", "", "color", "primary", "id", "ci4610", "dibComponent", "btnFilterClear", "aria-label", "Show all records and clear filter criteria", "matTooltipClass", "dib-tooltip", "type", "button", 3, "matTooltip", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipPosition", "click"], ["src", "/files/dropins/setNgxMaterial/shared/img/icons/cancelFilters.svg"], ["id", "ci4612", "dibComponent", "gridTotals", 1, "dib-grid-totals", 2, "display", "flex", "flex-direction", "row", "flex-wrap", "nowrap"], ["mat-header-cell", "", 2, "width", "80px"], ["color", "primary", 3, "checked", "indeterminate", "click"], ["mat-cell", ""], ["color", "primary", 3, "checked", "click", "change"], ["mat-cell", "", 2, "padding", "2px"], ["id", "ci4616", "dibComponent", "sqlText"], ["mat-header-cell", "", 2, "padding", "2px", "text-align", "left", "vertical-align", "top"], [1, "dibGridSearch", 2, "display", "flex", "flex-direction", "column"], ["mat-sort-header", "", 4, "ngIf"], ["mat-sort-header", "", "class", "dibGridSearchTitle", 4, "ngIf"], ["class", "dibGridSearchInput", "dib-edit", "", 3, "formGroup", 4, "ngIf"], ["mat-sort-header", ""], ["mat-sort-header", "", 1, "dibGridSearchTitle"], ["dib-edit", "", 1, "dibGridSearchInput", 3, "formGroup"], ["id", "ci4616", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "client_id", "name", "client_id", 3, "keydown.enter", "keydown.esc"], ["id", "ci4617", "dibComponent", "sqlText", 3, "hidden"], ["id", "ci4617", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "name", "name", "name", 3, "keydown.enter", "keydown.esc"], ["id", "ci4618", "dibComponent", "sqlText"], ["id", "ci4618", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "start_date", "name", "start_date", 3, "keydown.enter", "keydown.esc"], ["id", "ci4619", "dibComponent", "sqlText"], ["id", "ci4619", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "email", "name", "email", 3, "keydown.enter", "keydown.esc"], ["id", "ci4620", "dibComponent", "sqlText"], ["id", "ci4620", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "count_of_projects", "name", "count_of_projects", 3, "keydown.enter", "keydown.esc"], ["id", "ci4621", "dibComponent", "sqlText"], ["id", "ci4621", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "project_last_updated", "name", "project_last_updated", 3, "keydown.enter", "keydown.esc"], ["id", "ci5120", "dibComponent", "columnHeader", 2, "flex", "0 1 0%"], [2, "display", "flex", "flex-direction", "row", "justify-content", "flex-start", "align-items", "flex-start", "gap", "10px", "flex-wrap", "nowrap"], ["mat-mini-fab", "", "color", "primary", "id", "ci5121", "dibComponent", "button", "type", "button"], ["src", "edit"], ["mat-mini-fab", "", "color", "accent", "id", "ci5122", "dibComponent", "button", "type", "button"], ["src", "search"], ["mat-cell", "", 2, "padding", "2px", "width", "120px"], [2, "display", "flex", "flex-direction", "row", "justify-content", "space-between", "align-items", "stretch"], [1, "dib-cell", 2, "width", "120px", "display", "flex", "flex-direction", "row", "justify-content", "center", "flex", "1 1 0%"], [1, "grid-read-only-checkbox", 3, "ngClass"], ["mat-header-cell", "", 2, "padding", "2px", "text-align", "left", "vertical-align", "top", "width", "120px"], ["id", "ci5811", "dibComponent", "inputText"], ["matInput", "", "type", "text", "formControlName", "vip", "name", "vip", 3, "keydown.enter", "keydown.esc"], ["mat-cell", "", 2, "padding", "2px", "width", "230px"], ["id", "ci6264", "dibComponent", "sqlText", 2, "width", "230px !important", "display", "flex", "flex-direction", "row", "justify-content", "space-between", "align-items", "center"], ["type", "button", "aria-label", "Link to page for dibexTestClientContactFormPopup", "mat-icon-button", "", 3, "click"], ["src", "/files/dropins/setNgxMaterial/dibAdmin/images/link.svg"], ["mat-header-cell", "", 2, "padding", "2px", "text-align", "left", "vertical-align", "top", "width", "230px"], ["id", "ci6264", "dibComponent", "inputText", 2, "display", "flex", "flex-direction", "row", "justify-content", "space-between", "align-items", "center"], ["matInput", "", "type", "text", "formControlName", "client_contact_id", "name", "client_contact_id", 3, "keydown.enter", "keydown.esc"], ["mat-cell", "", 2, "padding", "2px", "width", "80px"], ["id", "ci6677", "dibComponent", "gridSafeHtml", 2, "width", "80px !important", "display", "flex", "flex-direction", "column", "justify-content", "flex-start", "align-items", "stretch", 3, "innerHtml"], ["mat-header-cell", "", 2, "padding", "2px", "text-align", "left", "vertical-align", "top", "width", "80px"], ["mat-header-cell", ""], ["mode", "indeterminate", 4, "ngIf"], ["mode", "indeterminate"], ["mat-header-cell", "", 1, "dib-no-records-found"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-header-row", ""], ["mat-header-row", "", 1, "dib-grid-loader", 3, "ngStyle"], ["mat-row", "", 3, "ngClass", "click"], [3, "ngTemplateOutlet"], [1, "grid-footer"], ["class", "mat-body", "matTooltip", "Clear all", "position", "above", "color", "primary", 3, "checked", "click", 4, "ngIf"], ["mat-button", "", 3, "click", 4, "ngIf"], [2, "flex", "1 1 auto"], ["style", "background: none", 3, "length", "pageSize", "pageSizeOptions", "page", 4, "ngIf"], ["matTooltip", "Clear all", "position", "above", "color", "primary", 1, "mat-body", 3, "checked", "click"], ["mat-button", "", 3, "click"], [2, "background", "none", 3, "length", "pageSize", "pageSizeOptions", "page"], ["paginator", ""], ["mat-table", "", 1, "", 2, "margin-top", "1rem", 3, "dataSource"], ["mat-cell", "", "style", "width:80px", 4, "matCellDef"], ["color", "primary", 3, "checked", "indeterminate", "change"], ["mat-cell", "", 2, "width", "80px"]], template: function dibexGridSqlComponent_Template(rf, ctx) { if (rf & 1) {
                        i0.ɵɵelementStart(0, "form", 0);
                        i0.ɵɵlistener("ngSubmit", function dibexGridSqlComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });
                        i0.ɵɵelementStart(1, "div", 1)(2, "div", 2);
                        i0.ɵɵelementContainer(3, 3);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(4, "div", 4);
                        i0.ɵɵelementContainerStart(5, 5);
                        i0.ɵɵelementStart(6, "button", 6);
                        i0.ɵɵlistener("click", function dibexGridSqlComponent_Template_button_click_6_listener() { return ctx.reloadContainer(); });
                        i0.ɵɵelement(7, "dib-icon", 7);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelement(8, "span", 8);
                        i0.ɵɵpipe(9, "safeHtml");
                        i0.ɵɵelementStart(10, "button", 9);
                        i0.ɵɵlistener("click", function dibexGridSqlComponent_Template_button_click_10_listener() { return ctx.toggleSearch(); });
                        i0.ɵɵelement(11, "dib-icon", 10);
                        i0.ɵɵelementEnd();
                        i0.ɵɵtemplate(12, dibexGridSqlComponent_button_12_Template, 2, 4, "button", 11);
                        i0.ɵɵtemplate(13, dibexGridSqlComponent_button_13_Template, 2, 4, "button", 12);
                        i0.ɵɵelement(14, "span", 13);
                        i0.ɵɵtemplate(15, dibexGridSqlComponent_div_15_Template, 5, 3, "div", 14);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(16, "mat-card", 15)(17, "mat-card-content", 16);
                        i0.ɵɵelementContainerStart(18, 5);
                        i0.ɵɵelementStart(19, "div", 17, 18)(21, "table", 19);
                        i0.ɵɵelementContainerStart(22, 20);
                        i0.ɵɵtemplate(23, dibexGridSqlComponent_th_23_Template, 2, 2, "th", 21);
                        i0.ɵɵtemplate(24, dibexGridSqlComponent_td_24_Template, 2, 1, "td", 22);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(25, 23);
                        i0.ɵɵtemplate(26, dibexGridSqlComponent_td_26_Template, 4, 2, "td", 24);
                        i0.ɵɵtemplate(27, dibexGridSqlComponent_th_27_Template, 5, 3, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(28, 26);
                        i0.ɵɵtemplate(29, dibexGridSqlComponent_td_29_Template, 4, 3, "td", 24);
                        i0.ɵɵtemplate(30, dibexGridSqlComponent_th_30_Template, 5, 3, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(31, 27);
                        i0.ɵɵtemplate(32, dibexGridSqlComponent_td_32_Template, 4, 2, "td", 24);
                        i0.ɵɵtemplate(33, dibexGridSqlComponent_th_33_Template, 5, 3, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(34, 28);
                        i0.ɵɵtemplate(35, dibexGridSqlComponent_td_35_Template, 4, 2, "td", 24);
                        i0.ɵɵtemplate(36, dibexGridSqlComponent_th_36_Template, 5, 3, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(37, 29);
                        i0.ɵɵtemplate(38, dibexGridSqlComponent_td_38_Template, 4, 2, "td", 24);
                        i0.ɵɵtemplate(39, dibexGridSqlComponent_th_39_Template, 5, 3, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(40, 30);
                        i0.ɵɵtemplate(41, dibexGridSqlComponent_td_41_Template, 4, 2, "td", 24);
                        i0.ɵɵtemplate(42, dibexGridSqlComponent_th_42_Template, 5, 3, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(43, 31);
                        i0.ɵɵtemplate(44, dibexGridSqlComponent_td_44_Template, 8, 1, "td", 24);
                        i0.ɵɵtemplate(45, dibexGridSqlComponent_th_45_Template, 4, 0, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(46, 32);
                        i0.ɵɵtemplate(47, dibexGridSqlComponent_td_47_Template, 3, 0, "td", 24);
                        i0.ɵɵtemplate(48, dibexGridSqlComponent_th_48_Template, 1, 0, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(49, 33);
                        i0.ɵɵtemplate(50, dibexGridSqlComponent_td_50_Template, 3, 0, "td", 24);
                        i0.ɵɵtemplate(51, dibexGridSqlComponent_th_51_Template, 1, 0, "th", 25);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(52, 34);
                        i0.ɵɵtemplate(53, dibexGridSqlComponent_td_53_Template, 5, 4, "td", 35);
                        i0.ɵɵtemplate(54, dibexGridSqlComponent_th_54_Template, 5, 3, "th", 36);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(55, 37);
                        i0.ɵɵtemplate(56, dibexGridSqlComponent_td_56_Template, 6, 2, "td", 38);
                        i0.ɵɵtemplate(57, dibexGridSqlComponent_th_57_Template, 5, 3, "th", 39);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(58, 40);
                        i0.ɵɵtemplate(59, dibexGridSqlComponent_td_59_Template, 3, 3, "td", 41);
                        i0.ɵɵtemplate(60, dibexGridSqlComponent_th_60_Template, 4, 0, "th", 42);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(61, 43);
                        i0.ɵɵtemplate(62, dibexGridSqlComponent_th_62_Template, 2, 2, "th", 44);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementContainerStart(63, 45);
                        i0.ɵɵtemplate(64, dibexGridSqlComponent_th_64_Template, 2, 2, "th", 46);
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵtemplate(65, dibexGridSqlComponent_ng_container_65_Template, 3, 3, "ng-container", 47);
                        i0.ɵɵtemplate(66, dibexGridSqlComponent_tr_66_Template, 1, 3, "tr", 48);
                        i0.ɵɵtemplate(67, dibexGridSqlComponent_tr_67_Template, 1, 3, "tr", 48);
                        i0.ɵɵtemplate(68, dibexGridSqlComponent_tr_68_Template, 1, 3, "tr", 49);
                        i0.ɵɵpipe(69, "async");
                        i0.ɵɵelementEnd();
                        i0.ɵɵtemplate(70, dibexGridSqlComponent_70_Template, 1, 1, null, 50);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementStart(71, "div", null, 51);
                        i0.ɵɵtemplate(73, dibexGridSqlComponent_mat_toolbar_73_Template, 6, 3, "mat-toolbar", 50);
                        i0.ɵɵelementEnd();
                        i0.ɵɵelementContainerEnd();
                        i0.ɵɵelementEnd()()()();
                        i0.ɵɵtemplate(74, dibexGridSqlComponent_ng_template_74_Template, 46, 4, "ng-template", null, 52, i0.ɵɵtemplateRefExtractor);
                    } if (rf & 2) {
                        const _r37 = i0.ɵɵreference(72);
                        i0.ɵɵproperty("formGroup", ctx.model.$formGroup)("ngClass", i0.ɵɵpureFunction1(30, _c4, ctx.view.debug));
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("dibPort", "5116");
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("dibPort", "4606");
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matTooltip", "Reload Record(s)")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("innerHtml", i0.ɵɵpipeBind1(9, 26, ctx.getHtml("spanGap")), i0.ɵɵsanitizeHtml);
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("matTooltip", "Display headers for filtering records")("matTooltipShowDelay", "300")("matTooltipHideDelay", "300")("matTooltipPosition", "below");
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("ngIf", ctx.showSearch);
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("ngIf", ctx.showSearch);
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("ngIf", ctx.page.fromRecord > -1);
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("dibPort", "4614");
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("additionalSpace", 5)("footerElement", _r37);
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("dataSource", ctx.tableDataSource);
                        i0.ɵɵadvance(44);
                        i0.ɵɵproperty("ngForOf", ctx.columnHeaders.getKeys());
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matHeaderRowDef", i0.ɵɵpureFunction0(32, _c5));
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matHeaderRowDef", i0.ɵɵpureFunction0(33, _c6));
                        i0.ɵɵadvance(1);
                        i0.ɵɵproperty("matRowDefColumns", i0.ɵɵpipeBind1(69, 28, ctx.columnsToDisplay.items$));
                        i0.ɵɵadvance(2);
                        i0.ɵɵproperty("ngIf", ctx.gridShowClipboardDefault);
                        i0.ɵɵadvance(3);
                        i0.ɵɵproperty("ngIf", ctx.gridMultiselect || true);
                    } }, dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet, i3.NgStyle, i4.DefaultClassDirective, i4.DefaultStyleDirective, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i2.DibIconComponent, i2.DibPortDirective, i2.DibFillHeightDirective, i2.DibRemoveFocusDirective, i6.MatButton, i6.MatIconButton, i6.MatMiniFabButton, i7.MatCheckbox, i8.MatFormField, i8.MatLabel, i9.MatIcon, i10.MatInput, i11.MatProgressBar, i12.MatToolbar, i12.MatToolbarRow, i13.MatTooltip, i14.MatCard, i14.MatCardContent, i15.MatTable, i15.MatHeaderCellDef, i15.MatHeaderRowDef, i15.MatColumnDef, i15.MatCellDef, i15.MatRowDef, i15.MatHeaderCell, i15.MatCell, i15.MatHeaderRow, i15.MatRow, i16.MatSort, i16.MatSortHeader, i17.MatPaginator, i3.AsyncPipe, i2.SafeHtmlPipe], encapsulation: 2 });
            };
            tslib_1.__decorate([
                shared_2.EventHandler('reloaddibexGridSql'),
                tslib_1.__metadata("design:type", Function),
                tslib_1.__metadata("design:paramtypes", [Object]),
                tslib_1.__metadata("design:returntype", void 0)
            ], dibexGridSqlComponent.prototype, "reloadContainer", null);
            exports_1("dibexGridSqlComponent", dibexGridSqlComponent);
            (function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(dibexGridSqlComponent, [{
                    type: core_2.Component,
                    args: [{ selector: 'dibex-grid-sql', template: `
<form style="display:flex; flex-direction:column; align-items:stretch"  [formGroup]="model.$formGroup" (ngSubmit)="onSubmit()" [ngClass]="{ 'dib-editor' : view.debug }"  ><div style="display:flex; flex-direction:column; align-items:stretch"><div   style="  flex: 1 1 0%;  " id=ci5116 dibComponent=subcontainer   ><ng-container [dibPort]="'5116'" parentContainerName=dibexGridSql  subContainerName=dibDocsExampleHtml  subContainerId=172  dropinName=iframe ></ng-container></div><div   style="  padding:5px 10px 0px !important;  display:flex; flex-direction: row;  justify-content: flex-start;  align-items: center;  gap: 10px;  flex-wrap: nowrap;  flex: 1 1 0%;  " id=ci4606 dibComponent=row   dib-inject-content=replace  ><ng-container [dibPort]="'4606'" ><button   mat-mini-fab color=accent  id=ci4607 dibComponent=btnReload   style="  " aria-label="Reload Record(s)"  [matTooltip]="'Reload Record(s)'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   (click)="reloadContainer()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/reload.svg"></dib-icon></button><span  id=ci4613 dibComponent=span   style="  width:150px !important;   "  [innerHtml]="getHtml('spanGap') | safeHtml" ></span><button mat-mini-fab color=primary  id=ci4611 dibComponent=btnFilterOpen   style="  " aria-label="Display headers for filtering records"  [matTooltip]="'Display headers for filtering records'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   (click)="toggleSearch()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/search.svg"></dib-icon></button><button mat-mini-fab color=primary  id=ci4609 dibComponent=btnFilterApply   style="  " aria-label="Apply filter criteria specified in column headers"  [matTooltip]="'Apply filter criteria specified in column headers'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   *ngIf=showSearch  (click)="searchGrid()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/applyFilters.svg"></dib-icon></button><button mat-mini-fab color=primary  id=ci4610 dibComponent=btnFilterClear   style="  " aria-label="Show all records and clear filter criteria"  [matTooltip]="'Show all records and clear filter criteria'"  [matTooltipShowDelay]="'300'"  [matTooltipHideDelay]="'300'"  [matTooltipPosition]="'below'"  matTooltipClass=dib-tooltip   *ngIf=showSearch  (click)="clearSearch()"  type=button  ><dib-icon src="/files/dropins/setNgxMaterial/shared/img/icons/cancelFilters.svg"></dib-icon></button><span  id=ci4608 dibComponent=spacer   style="  flex: 1 1 0%;  " ></span><div class=dib-grid-totals  id=ci4612 dibComponent=gridTotals   style="  display:flex; flex-direction: row;  flex-wrap: nowrap;  "  *ngIf="page.fromRecord > -1" > SQL Grid: {{page.fromRecord}}<span *ngIf='page.fromRecord>0'>&nbsp;to&nbsp;{{page.toRecord}}&nbsp;of&nbsp;{{page.records}}</span>&nbsp;<span *ngIf='page.totalRecords!=page.records'>(Total: {{page.totalRecords}})</span></div></ng-container></div><mat-card   style="  flex: 1 1 0%;  " id=ci4614 dibComponent=card  ><mat-card-content   style="  display:flex; flex-direction: column;  flex-wrap: nowrap;"  ><ng-container [dibPort]="'4614'" ><!-- <div dib-scroll-pager scrollOffset=50 (nextPage)="nextPage()"> --><div #gridScroll fill-height debounceTime=300  [additionalSpace]=5 [footerElement]="footerdibexGridSql" ><table mat-table [dataSource]="tableDataSource" matSort class=""><ng-container matColumnDef=_select ><th mat-header-cell *matHeaderCellDef style = "width:80px"><mat-checkbox  color=primary   (click)="$event.preventDefault();masterToggle()"  [checked]="masterIsChecked"  [indeterminate]="masterIsIndeterminate"  ></mat-checkbox></th><td mat-cell *matCellDef="let row"><mat-checkbox  color=primary   (click)="$event.stopPropagation()"  (change)="$event ? selection.toggle(row) : null"  [checked]="selection.isSelected(row)"  ></mat-checkbox></td></ng-container><ng-container matColumnDef=client_id  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4616 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.client_id_display_value"> {{row.client_id_display_value}}</span><span *ngIf="!!row && !row.client_id_display_value"> {{row.client_id}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Client  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Client</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4616 dibComponent=inputText   style="  " ><mat-label >Client</mat-label><input   matInput  type=text   formControlName=client_id   name=client_id   [attr.aria-label]="'Client'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=name  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div [hidden]="row.client_id==3" id=ci4617 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.name_display_value"> {{row.name_display_value}}</span><span *ngIf="!!row && !row.name_display_value"> {{row.name}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Company  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Company</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4617 dibComponent=inputText   style="  " ><mat-label >Company</mat-label><input   matInput  type=text   formControlName=name   name=name   [attr.aria-label]="'Company'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=start_date  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4618 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.start_date_display_value"> {{row.start_date_display_value}}</span><span *ngIf="!!row && !row.start_date_display_value"> {{row.start_date}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Start Date  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Start Date</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4618 dibComponent=inputText   style="  " ><mat-label >Start Date</mat-label><input   matInput  type=text   formControlName=start_date   name=start_date   [attr.aria-label]="'Start Date'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=email  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4619 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.email_display_value"> {{row.email_display_value}}</span><span *ngIf="!!row && !row.email_display_value"> {{row.email}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Email  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Email</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4619 dibComponent=inputText   style="  " ><mat-label >Email</mat-label><input   matInput  type=text   formControlName=email   name=email   [attr.aria-label]="'Email'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=count_of_projects  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4620 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.count_of_projects_display_value"> {{row.count_of_projects_display_value}}</span><span *ngIf="!!row && !row.count_of_projects_display_value"> {{row.count_of_projects}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Count Of Projects  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Count Of Projects</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4620 dibComponent=inputText   style="  " ><mat-label >Count Of Projects</mat-label><input   matInput  type=text   formControlName=count_of_projects   name=count_of_projects   [attr.aria-label]="'Count Of Projects'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=project_last_updated  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4621 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.project_last_updated_display_value"> {{row.project_last_updated_display_value}}</span><span *ngIf="!!row && !row.project_last_updated_display_value"> {{row.project_last_updated}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Project Last Updated  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Project Last Updated</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4621 dibComponent=inputText   style="  " ><mat-label >Project Last Updated</mat-label><input   matInput  type=text   formControlName=project_last_updated   name=project_last_updated   [attr.aria-label]="'Project Last Updated'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=hdrActions  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div   style="  flex: 0 1 0%;  " id=ci5120 dibComponent=columnHeader  ><div   style="  display:flex; flex-direction: row;  justify-content: flex-start;  align-items: flex-start;  gap: 10px;  flex-wrap: nowrap;" ><ng-container [dibPort]="'5120'" ><button  mat-mini-fab color=primary  id=ci5121 dibComponent=button   style="  "  type=button  ><dib-icon src=edit ></dib-icon></button><button  mat-mini-fab color=accent  id=ci5122 dibComponent=button   style="  "  type=button  ><dib-icon src=search ></dib-icon></button></ng-container></div></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div > Edit  </div></div></th></ng-container><ng-container matColumnDef=btnDoSomething  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><button  mat-mini-fab color=primary  id=ci5121 dibComponent=button   style="  "  type=button  ><dib-icon src=edit ></dib-icon></button></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ></th></ng-container><ng-container matColumnDef=btnDoSomething2  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><button  mat-mini-fab color=accent  id=ci5122 dibComponent=button   style="  "  type=button  ><dib-icon src=search ></dib-icon></button></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ></th></ng-container><ng-container matColumnDef=vip  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; width:120px; " ><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch"><span class=dib-cell   style="width:120px;   display:flex; flex-direction:row; justify-content:center; flex:1 1 0%;"  ><div class=grid-read-only-checkbox  [ngClass]="{'checked': row.vip == 1}"></div></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; width:120px; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> VIP  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >VIP</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci5811 dibComponent=inputText   style="  " ><mat-label >VIP</mat-label><input   matInput  type=text   formControlName=vip   name=vip   [attr.aria-label]="'VIP'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=client_contact_id  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; width:230px; " ><div  id=ci6264 dibComponent=sqlText   style="  width:230px !important;   display:flex; flex-direction: row;  justify-content: space-between;  align-items: center;  " ><span *ngIf="!!row && !!row.client_contact_id_display_value"> {{row.client_contact_id_display_value}}</span><span *ngIf="!!row && !row.client_contact_id_display_value"> {{row.client_contact_id}}</span><button type=button  aria-label="Link to page for dibexTestClientContactFormPopup"  mat-icon-button  (click)="goToForDropdowns(  'dibexTestClientContactFormPopup',  '',  true,  'client_contact_id',  'id',  model,  row,  $event  );"  ><dib-icon src="/files/dropins/setNgxMaterial/dibAdmin/images/link.svg"></dib-icon></button></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; width:230px; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Client Contact  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Client Contact</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6264 dibComponent=inputText   style="  display:flex; flex-direction: row;  justify-content: space-between;  align-items: center;  " ><mat-label >Client Contact</mat-label><input   matInput  type=text   formControlName=client_contact_id   name=client_contact_id   [attr.aria-label]="'Client Contact'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=safeHtmlProjectCount  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; width:80px; " ><div  id=ci6677 dibComponent=gridSafeHtml   style="  width:80px !important;   display:flex; flex-direction: column;  justify-content: flex-start;  align-items: stretch;  "  [innerHtml]="row.safeHtmlProjectCount | safeHtml" ></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; width:80px; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div > Safe HTML Project Count  </div></div></th></ng-container><ng-container matColumnDef=_dibBusy ><th mat-header-cell *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length"><mat-progress-bar *ngIf=busy  mode=indeterminate ></mat-progress-bar></th></ng-container><ng-container matColumnDef=_dibNoRecords ><th mat-header-cell class=dib-no-records-found  *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length"><span *ngIf="!busy && tableDataSource.data.length == 0">{{translate('global.norecordsfound','No Records Found')}}</span></th></ng-container><ng-container *ngFor="let column of columnHeaders.getKeys()"><tr mat-header-row *matHeaderRowDef="(columnHeaders.getArray(column).items$ | async);"></tr></ng-container><tr mat-header-row [ngStyle]="{visibility : busy? 'visible' : 'hidden'}" class=dib-grid-loader  *matHeaderRowDef="['_dibBusy']"></tr><tr mat-header-row [ngStyle]="{visibility : tableDataSource.data.length == 0? 'visible' : 'hidden'}" class=dib-grid-loader  *matHeaderRowDef="['_dibNoRecords']"></tr><tr mat-row [ngClass]="{'dib-grid-selected': isHighlighted(row)}" *matRowDef="let row; columns: (columnsToDisplay.items$ | async)" (click)="rowClick(row, $event)"></tr></table><ng-template [ngTemplateOutlet]="_selectedTable" *ngIf=gridShowClipboardDefault ></ng-template></div><div #footerdibexGridSql><mat-toolbar *ngIf="gridMultiselect || true"><mat-toolbar-row class = "grid-footer"><mat-checkbox  class = "mat-body"  matTooltip = "Clear all"  position = "above"  *ngIf=numberOfSelectedItems    color=primary   (click)="$event.preventDefault();clearAll()"  [checked]="true"  > {{numberOfSelectedItems + " "}}item{{numberOfSelectedItems>1?"s ":" "}}selected  </mat-checkbox><button  *ngIf="selectedDataNotInPage().length>0"  mat-button  (click)="gridShowClipboardDefault = !gridShowClipboardDefault; gridShowClipboardDefault&&scrollToBottom()"  ><mat-icon *ngIf="!gridShowClipboardDefault">visibility</mat-icon><mat-icon *ngIf=gridShowClipboardDefault >visibility_off</mat-icon> {{gridShowClipboardDefault?"hide":"show"}}</button><span style ="flex: 1 1 auto"></span><mat-paginator *ngIf=true  #paginator [length]="page.totalRecords" (page)="changePage($event)" style = "background: none"  [pageSize]="page.pageSize"  [pageSizeOptions]="[10, 20, 50, 100]" ></mat-paginator></mat-toolbar-row></mat-toolbar></div></ng-container></mat-card-content></mat-card></div></form><ng-template #_selectedTable ><table style ="margin-top:1rem" mat-table [dataSource]="selectionDataSource" class=""><ng-container matColumnDef=client_id  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4616 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.client_id_display_value"> {{row.client_id_display_value}}</span><span *ngIf="!!row && !row.client_id_display_value"> {{row.client_id}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Client  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Client</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4616 dibComponent=inputText   style="  " ><mat-label >Client</mat-label><input   matInput  type=text   formControlName=client_id   name=client_id   [attr.aria-label]="'Client'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=name  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div [hidden]="row.client_id==3" id=ci4617 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.name_display_value"> {{row.name_display_value}}</span><span *ngIf="!!row && !row.name_display_value"> {{row.name}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Company  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Company</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4617 dibComponent=inputText   style="  " ><mat-label >Company</mat-label><input   matInput  type=text   formControlName=name   name=name   [attr.aria-label]="'Company'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=start_date  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4618 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.start_date_display_value"> {{row.start_date_display_value}}</span><span *ngIf="!!row && !row.start_date_display_value"> {{row.start_date}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Start Date  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Start Date</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4618 dibComponent=inputText   style="  " ><mat-label >Start Date</mat-label><input   matInput  type=text   formControlName=start_date   name=start_date   [attr.aria-label]="'Start Date'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=email  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4619 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.email_display_value"> {{row.email_display_value}}</span><span *ngIf="!!row && !row.email_display_value"> {{row.email}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Email  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Email</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4619 dibComponent=inputText   style="  " ><mat-label >Email</mat-label><input   matInput  type=text   formControlName=email   name=email   [attr.aria-label]="'Email'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=count_of_projects  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4620 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.count_of_projects_display_value"> {{row.count_of_projects_display_value}}</span><span *ngIf="!!row && !row.count_of_projects_display_value"> {{row.count_of_projects}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Count Of Projects  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Count Of Projects</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4620 dibComponent=inputText   style="  " ><mat-label >Count Of Projects</mat-label><input   matInput  type=text   formControlName=count_of_projects   name=count_of_projects   [attr.aria-label]="'Count Of Projects'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=project_last_updated  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div  id=ci4621 dibComponent=sqlText   style="  " ><span *ngIf="!!row && !!row.project_last_updated_display_value"> {{row.project_last_updated_display_value}}</span><span *ngIf="!!row && !row.project_last_updated_display_value"> {{row.project_last_updated}}</span></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Project Last Updated  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Project Last Updated</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci4621 dibComponent=inputText   style="  " ><mat-label >Project Last Updated</mat-label><input   matInput  type=text   formControlName=project_last_updated   name=project_last_updated   [attr.aria-label]="'Project Last Updated'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=hdrActions  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><div   style="  flex: 0 1 0%;  " id=ci5120 dibComponent=columnHeader  ><div   style="  display:flex; flex-direction: row;  justify-content: flex-start;  align-items: flex-start;  gap: 10px;  flex-wrap: nowrap;" ><ng-container [dibPort]="'5120'" ><button  mat-mini-fab color=primary  id=ci5121 dibComponent=button   style="  "  type=button  ><dib-icon src=edit ></dib-icon></button><button  mat-mini-fab color=accent  id=ci5122 dibComponent=button   style="  "  type=button  ><dib-icon src=search ></dib-icon></button></ng-container></div></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div > Edit  </div></div></th></ng-container><ng-container matColumnDef=btnDoSomething  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><button  mat-mini-fab color=primary  id=ci5121 dibComponent=button   style="  "  type=button  ><dib-icon src=edit ></dib-icon></button></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ></th></ng-container><ng-container matColumnDef=btnDoSomething2  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; " ><button  mat-mini-fab color=accent  id=ci5122 dibComponent=button   style="  "  type=button  ><dib-icon src=search ></dib-icon></button></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; " ></th></ng-container><ng-container matColumnDef=vip  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; width:120px; " ><span style="display:flex; flex-direction:row; justify-content:space-between; align-items:stretch"><span class=dib-cell   style="width:120px;   display:flex; flex-direction:row; justify-content:center; flex:1 1 0%;"  ><div class=grid-read-only-checkbox  [ngClass]="{'checked': row.vip == 1}"></div></span><span *ngIf="excelEditing == false && rowForm.get('__edit').value === false"></span></span></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; width:120px; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> VIP  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >VIP</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci5811 dibComponent=inputText   style="  " ><mat-label >VIP</mat-label><input   matInput  type=text   formControlName=vip   name=vip   [attr.aria-label]="'VIP'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=client_contact_id  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; width:230px; " ><div  id=ci6264 dibComponent=sqlText   style="  width:230px !important;   display:flex; flex-direction: row;  justify-content: space-between;  align-items: center;  " ><span *ngIf="!!row && !!row.client_contact_id_display_value"> {{row.client_contact_id_display_value}}</span><span *ngIf="!!row && !row.client_contact_id_display_value"> {{row.client_contact_id}}</span><button type=button  aria-label="Link to page for dibexTestClientContactFormPopup"  mat-icon-button  (click)="goToForDropdowns(  'dibexTestClientContactFormPopup',  '',  true,  'client_contact_id',  'id',  model,  row,  $event  );"  ><dib-icon src="/files/dropins/setNgxMaterial/dibAdmin/images/link.svg"></dib-icon></button></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; width:230px; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div *ngIf="!showSearch" mat-sort-header> Client Contact  </div><div mat-sort-header class=dibGridSearchTitle  *ngIf=showSearch  >Client Contact</div><div class=dibGridSearchInput  *ngIf=showSearch  dib-edit [formGroup]="model.$formGroup"><mat-form-field id=ci6264 dibComponent=inputText   style="  display:flex; flex-direction: row;  justify-content: space-between;  align-items: center;  " ><mat-label >Client Contact</mat-label><input   matInput  type=text   formControlName=client_contact_id   name=client_contact_id   [attr.aria-label]="'Client Contact'"  (keydown.enter)='searchGrid(false)' (keydown.esc)='clearSearch()' ><!--<mat-hint>Hint</mat-hint>@TODO think about a hints field--></mat-form-field></div></div></th></ng-container><ng-container matColumnDef=safeHtmlProjectCount  ><td mat-cell *matCellDef="let row;let rowIndex = index;"  style="padding: 2px; width:80px; " ><div  id=ci6677 dibComponent=gridSafeHtml   style="  width:80px !important;   display:flex; flex-direction: column;  justify-content: flex-start;  align-items: stretch;  "  [innerHtml]="row.safeHtmlProjectCount | safeHtml" ></div></td><th mat-header-cell *matHeaderCellDef   style="padding:2px; text-align:left; vertical-align:top; width:80px; " ><div style="display:flex; flex-direction:column; " class=dibGridSearch ><div > Safe HTML Project Count  </div></div></th></ng-container><ng-container matColumnDef=_select ><th mat-header-cell *matHeaderCellDef style = "width:80px"><mat-checkbox  color=primary   (change)="$event ? masterToggle($event) : null"  [checked]="masterIsChecked"  [indeterminate]="masterIsIndeterminate"  ></mat-checkbox></th><td mat-cell *matCellDef="let row" style = "width:80px"><mat-checkbox  color=primary   (click)="$event.stopPropagation()"  (change)="$event ? selection.toggle(row) : null"  [checked]="selection.isSelected(row)"  ></mat-checkbox></td></ng-container><ng-container matColumnDef=_dibBusy ><th mat-header-cell *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length"><mat-progress-bar *ngIf=busy  mode=indeterminate ></mat-progress-bar></th></ng-container><ng-container matColumnDef=_dibNoRecords ><th mat-header-cell class=dib-no-records-found  *matHeaderCellDef [attr.colspan]="columnsToDisplay.get().length"><span *ngIf="!busy && tableDataSource.data.length == 0">{{translate('global.norecordsfound','No Records Found')}}</span></th></ng-container><tr mat-row [ngClass]="{'dib-grid-selected': isHighlighted(row)}" *matRowDef="let row; columns: (columnsToDisplay.items$ | async)" (click)="rowClick(row, $event)"></tr></table></ng-template>
` }]
                }], function () { return [{ type: i0.Injector }, { type: i1.HttpClient }, { type: i0.ChangeDetectorRef }, { type: i2.CrudService }, { type: i0.ViewContainerRef }, { type: i2.ScrollDispatcher }, { type: i0.ChangeDetectorRef }]; }, { reloadContainer: [] }); })();
            containerModules = [button_1.MatButtonModule, icon_1.MatIconModule, card_1.MatCardModule, checkbox_1.MatCheckboxModule];
            dibexGridSqlModule = class dibexGridSqlModule {
                static entry = dibexGridSqlComponent;
                static ɵfac = function dibexGridSqlModule_Factory(t) { return new (t || dibexGridSqlModule)(); };
                static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: dibexGridSqlModule });
                static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [{ provide: core_3.DateAdapter, useClass: shared_6.DateFnsDateAdapter, deps: [core_3.MAT_DATE_LOCALE] }, { provide: core_3.MAT_DATE_FORMATS, useValue: shared_6.DATEPICKER_FORMATS }], imports: [common_1.CommonModule, shared_5.SharedModule, containerModules, table_2.MatTableModule, sort_1.MatSortModule, paginator_1.MatPaginatorModule] });
            };
            exports_1("default", dibexGridSqlModule);
            (function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(dibexGridSqlModule, [{
                    type: core_4.NgModule,
                    args: [{ imports: [common_1.CommonModule, shared_5.SharedModule, ...containerModules, table_2.MatTableModule, sort_1.MatSortModule, paginator_1.MatPaginatorModule], providers: [{ provide: core_3.DateAdapter, useClass: shared_6.DateFnsDateAdapter, deps: [core_3.MAT_DATE_LOCALE] }, { provide: core_3.MAT_DATE_FORMATS, useValue: shared_6.DATEPICKER_FORMATS }], declarations: [dibexGridSqlComponent], exports: [] }]
                }], null, null); })();
            (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(dibexGridSqlModule, { declarations: [dibexGridSqlComponent], imports: [common_1.CommonModule, shared_5.SharedModule, button_1.MatButtonModule, icon_1.MatIconModule, card_1.MatCardModule, checkbox_1.MatCheckboxModule, table_2.MatTableModule, sort_1.MatSortModule, paginator_1.MatPaginatorModule] }); })();
        }
    };
});
